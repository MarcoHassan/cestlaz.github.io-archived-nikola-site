<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>C'est la Z (Posts about csed)</title><link>http://cestlaz.github.io/</link><description></description><atom:link href="http://cestlaz.github.io/categories/csed.xml" type="application/rss+xml" rel="self"></atom:link><language>en</language><lastBuildDate>Sat, 23 Sep 2017 16:59:45 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>The Cost of AP Exams</title><link>http://cestlaz.github.io/posts/cost-of-ap-exams/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;div id="outline-container-org86800f2" class="outline-2"&gt;
&lt;h2 id="org86800f2"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org86800f2"&gt;
&lt;p&gt;
Now that I'm back from vacation and summer's winding down I thought
I'd start getting back to more classroom related posts. I still have a
few summer topics I want to write about – standards and side projects
in particular but I'm also looking forward to talking more about the
classroom since, after all, at my core, I'm a teacher. When I saw &lt;a href="http://www.slate.com/articles/technology/future_tense/2017/08/how_online_textbooks_could_help_more_students_take_ap_exams.html"&gt;this&lt;/a&gt;
article in my inbox this morning I thought I'd talk about it.
&lt;/p&gt;

&lt;p&gt;
In the piece, Lindsey Tepe since more kids are taking AP classes and
they're very expensive, schools should look to lower other costs
related to AP classes so as to provide financial support so that
students can take that oh so important end of year exam:
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;
While the College Board continues to reimburse about one-third of the
test cost for eligible low-income students, only about half of states
are now offering any further financial assistance for students.
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
Ms. Tepe's solution? Lower text book costs. As a way of lowering
school costs, I'm all for it. I've used free online resources in lieu
of textbooks for years but the savings should go somewhere where it
can make a difference. Perhaps lowering class sizes. The fatal flaw in
Ms. Teps's piece is that it continues spinning the misplaced narrative
that AP Exams are a very important part of a child's education.
&lt;/p&gt;

&lt;p&gt;
Let's be reminded of something: The AP Exam is one thing - an exam - a
single test at the end of the year. 
&lt;/p&gt;

&lt;p&gt;
The narrative is that students should take more and more AP classes,
that they're somehow better for kids. Part of this is due to the
potential college credit and part is because the public has been
bamboozled by the ridiculous school ratings that give credit for AP
classes taken. Back in "the day," AP classes were basically early
college. You could then argue that they were the most rigorous classes
offered in a school. AP Calc was basically college Calc. Same for
APCS-AB, AP-Bio and the rest. Now, with classes like APCS-P aimed to
be accessible to typical high school students in the lower grades,
they can't (but still will) make that claim. In fact, at Stuy, my
former school, there are plenty of non AP classes that are more
rigorous than AP classes and the best AP teachers don't always cover
the whole syllabus because they're more concerned with their students
actually learning rather than scoring 5 on an exam.
&lt;/p&gt;

&lt;p&gt;
On the college credit front, if a student has a high probability of
saving money through AP credit then I'm all for it but otherwise, it's
just money going to the college board.
&lt;/p&gt;

&lt;p&gt;
It seems ridiculous for me to have to write this but the important
part of a class is, you know, the class. Not the single exam given by
an outside agency at the end and graded after the semester concludes.
&lt;/p&gt;

&lt;p&gt;
My suggestion? Offer college level work to students that are ready for
it but don't push the AP exam. This would save a ton of money. What value
does the college board actually bring to the table? Remember, they're
making a pretty penny on all of this testing. A math teacher should be
able to teach calculus with or without AP. A good text being used by
that teacher in class - be it free or paid for is actually much more
important to a student learning calculus than a single exam taken at
the end of the year. I'd go further and say that I'd trust the
teacher's exam more than the college board's. If a teacher knows the
math but needs to see some sample syllabi, they're a web search
way. The same is true for most other college courses that have AP
equivalents and maybe even more so for computer science.
&lt;/p&gt;

&lt;p&gt;
At the end of the day it should be about students learning not about
students taking high stakes exams.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>ap</category><category>csed</category><category>education</category><category>policy</category><guid>http://cestlaz.github.io/posts/cost-of-ap-exams/</guid><pubDate>Thu, 17 Aug 2017 11:07:12 GMT</pubDate></item><item><title>A friendly reminder to use the right language when describing CS</title><link>http://cestlaz.github.io/posts/languages-or-cs/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;div id="outline-container-orga2f76fd" class="outline-2"&gt;
&lt;h2 id="orga2f76fd"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orga2f76fd"&gt;
&lt;p&gt;
I was part of this conversation the other day:
&lt;/p&gt;

&lt;blockquote class="twitter-tweet" data-lang="en"&gt;&lt;p lang="en" dir="ltr"&gt;When science teachers asked me if I taught AP Java I'd always respond by asking them if they taught AP Microscope.&lt;/p&gt;— Mike Zamansky (@zamansky) &lt;a href="https://twitter.com/zamansky/status/883327927831711745"&gt;July 7, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;

&lt;p&gt;
I always use that line to emphasize that I teach CS - a way of
thinking and problem solving and looking at the world. The languages
we use in our classes are tools to help us communicate ideas not the
ends but rather a means.
&lt;/p&gt;

&lt;p&gt;
I've spent the past couple of days at the CSTA conference. It's been a
lot of fun. I've been spending the time with old friends and meeting
new ones and as everyone who knows me knows - I love talking shop. 
&lt;/p&gt;

&lt;p&gt;
I overheard a conversation today. One CS teacher describing what they
did to a few others. I overheard:
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;
We teach Scratch then Swift and C++ and also teach Python
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
I heard statements like this describing programs more than a couple of
times. I know we're at a conference of CS Educators but even in this
community we have everything from beginners getting their feet wet to
hardcore computer scientists to everything in between.
&lt;/p&gt;

&lt;p&gt;
We shouldn't be teaching languages as an ends unto themselves and the
majority of us don't.
&lt;/p&gt;

&lt;p&gt;
What many of us do, though, is take the easy path and use the name of
a programming language to describe what we do rather than really
define what we do. This is why we hear "I teach Java" or "I teach a
class in Swift" even when the teacher teaching Java might really be
teaching Object Oriented program design and development or data
structures or something similar just using Java as the language or
tool.
&lt;/p&gt;


&lt;p&gt;
I too fall into this trap but I try to catch myself. I try not to say
"I teach Scheme" but rather I'll say "I teach Scheme. Actually, we're
studying functional programming using Scheme as the language but for
convenience, I'll just say Scheme for the rest of this talk…."
&lt;/p&gt;

&lt;p&gt;
The words we use to describe our field set the tone. If we're sloppy
and say "we teach Java," it's just like biology teacher saying "I
teach microscope." 
&lt;/p&gt;

&lt;p&gt;
As we try to define our field in the K12 space and seek equal footing
with established subject areas it's important that we use the right
language so that other educators and policy makers don't get the wrong
idea.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>cs</category><category>csed</category><category>education</category><guid>http://cestlaz.github.io/posts/languages-or-cs/</guid><pubDate>Tue, 11 Jul 2017 01:17:47 GMT</pubDate></item><item><title>A Plea to AP teachers- don't measure yourself by your scores</title><link>http://cestlaz.github.io/posts/teachers-you-arent-your-test-scores/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;div id="outline-container-org9fcfb92" class="outline-2"&gt;
&lt;h2 id="org9fcfb92"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org9fcfb92"&gt;
&lt;p&gt;
AP scores just came out. As usual, I see the posts and take part in
conversations where teachers talk about their results. Some are happy
about their results, some aren't, some don't really care.
&lt;/p&gt;

&lt;p&gt;
I just want to make a plea to all AP teachers out there:
&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;&lt;b&gt;Don't let your value be dictated by the college board or any other
  exam.&lt;/b&gt;&lt;/b&gt;
&lt;/p&gt;

&lt;p&gt;
I never really cared much about my students' actual AP scores. There
were a number of years when I never even saw the results. Of course, I
had a population that would do reasonably well regardless of teacher
so I was never placed under any pressure to "do better." One year -
while the APCS-AB exam was still offered, my principal called me down
to discuss the results to see if we could get more kids scoring 4s and
5s (which most of the kids already did). I told him that I thought
we were doing fine, explained why I couldn't advocate more teaching to
the test (such as more than paying lip service to the case study or
more rote practice on the multiple choice), and told him how I
measured our success as a program. He was happy with my answer and
that was that. 
&lt;/p&gt;

&lt;p&gt;
The AP exam is one test on one day and in my opinion the least
valuable measure of my students' achievement. This is one of
the reasons I was so dismayed by the CSEd community's efforts in
pushing the AP exams - not the class or the subject but the actual exam.
&lt;/p&gt;

&lt;p&gt;
So, how should you judge your success? That's up to you. I can only
tell you how I judge myself.
&lt;/p&gt;

&lt;p&gt;
First and foremost - and I know this sounds cheesy - are you a "force
for good" in your student's lives. Do you leave them in a better
place? Have you opened the door to a possible future for them? Have
you helped them grow? Beyond that, have they progressed in your
subject and as students in general.
&lt;/p&gt;

&lt;p&gt;
I've had kids "fail" the AP exam and go on to wonderful careers in
tech and come back to thank me for giving them their start. I've also
had kids that have gone into other fields but appreciate what we've
done for them. I've also had my failures and I do mean my
failures. Students I couldn't reach or couldn't figure out how to
help.
&lt;/p&gt;

&lt;p&gt;
As teachers, we work day to day trying to improve but we can get a
great overview of how we're doing by using a much longer feedback
loop - looking at what our graduates are up to. When young teachers
would comment on former students coming back or running into them at
tech events that they would have graduates of their own in a few years
and invariably they do.
&lt;/p&gt;

&lt;p&gt;
To really evaluate how you're doing you have to go with the long
game. Very few people get that. I remember talking to a Google
Executive while I was designing CAPE 2010. He said something to the
effect of "I know we won't know if this program works for about ten
years but we'll have to come up with something short term to satisfy
the powers that be."  That so few "get it" and need instant feedback
is one of the reasons that our society is so test driven. We shouldn't
be. Our focus should be on helping the students learn and progress.
&lt;/p&gt;

&lt;p&gt;
So don't get distressed over AP results and don't get to high on them
either. Certainly don't use them to drive what and how you teach. Let
your students and your conscience be your guide.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>ap</category><category>apcs</category><category>csed</category><category>education</category><guid>http://cestlaz.github.io/posts/teachers-you-arent-your-test-scores/</guid><pubDate>Thu, 06 Jul 2017 21:22:10 GMT</pubDate></item><item><title>SIGCSE 2017 - Recap</title><link>http://cestlaz.github.io/posts/sigcse-2017-recap/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;div id="outline-container-orgfd282e3" class="outline-2"&gt;
&lt;h2 id="orgfd282e3"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgfd282e3"&gt;
&lt;p&gt;
As a high school teacher, I was never able to attend SIGCSE, the
conference of the ACM's Special Interest Group on Computer Science
Education. Between the number of instructional days I would lose and
the cost, I could never justify going. Instead I looked over the
proceedings and read many of the papers.
&lt;/p&gt;

&lt;p&gt;
Now that I'm at Hunter, I was finally able to attend. This year in
Seattle, the conference ran from Wednesday through Saturday. I was
part of a panel on "Tools we can't live without." Over the next few
weeks, I hope to blog about a number of things I thought and talked
with people about over the conference including:
&lt;/p&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;The path I use to teach git and why GitHub a good teaching tool
(my talk).&lt;/li&gt;
&lt;li&gt;The relationship of different CS Ed stakeholders - teachers,
researchers, organizations, etc.&lt;/li&gt;
&lt;li&gt;Teaching at the high school level vs college - perceptions and
reality.&lt;/li&gt;
&lt;li&gt;The challenges of tech tool adoption in schools.&lt;/li&gt;
&lt;li&gt;What's going on in K12 CS Certification.&lt;/li&gt;
&lt;li&gt;Maybe some other stuff.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
Today, some overall thoughts.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgb4e78ec" class="outline-2"&gt;
&lt;h2 id="orgb4e78ec"&gt;The good&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgb4e78ec"&gt;
&lt;p&gt;
As with many conferences, the "hallway track" along with receptions
sponsored by &lt;a href="https://csnyc.org/our-work/cs4all"&gt;the CS4All consurtium&lt;/a&gt;, &lt;a href="http://tealsk12.org"&gt;TEALS&lt;/a&gt;, &lt;a href="http://code.org"&gt;Code.org&lt;/a&gt; were terrific. I
was able to finally meet in person many people who I've only known
virtually and got to know many more as well. I left the conference
with a much larger address book and a long list of follow up
items. Being in Seattle, I also enjoyed being able to spend time with
people from &lt;a href="http://tealsk12.org"&gt;TEALS&lt;/a&gt; and &lt;a href="http://code.org"&gt;Code.org&lt;/a&gt;, two of the CS Ed groups working hard
to do some real good (yes - I do like and support these guys even
though I call them out on things I disagree with, but that's the
subject of another post). 
&lt;/p&gt;

&lt;p&gt;
I attended sessions on CS certification, teacher preparation,
assessments, POGIL based instruction to name a few. They ranged from
valuable to interesting and to be honest, a couple of "what were they
thinking" but the overall experience was very much worth the trip. I
also got to speak to a number of wonderful students at the
poster sessions.
&lt;/p&gt;

&lt;p&gt;
The keynotes are also well worth a read (sorry if you don't have ACM
digital library access). &lt;a href="http://dl.acm.org/citation.cfm?id=3025045&amp;amp;CFID=738971273&amp;amp;CFTOKEN=22106692"&gt;Jeannette Wing&lt;/a&gt; talked about the importance of
probability and statistics in CS Ed, and aspects of  &lt;a href="http://dl.acm.org/citation.cfm?id=3025047&amp;amp;CFID=738971273&amp;amp;CFTOKEN=22106692"&gt;Gail Chapman&lt;/a&gt;'s talk
"Inspire, Innovate, and Improve…" keynote and &lt;a href="http://dl.acm.org/citation.cfm?id=3025046&amp;amp;CFID=738971273&amp;amp;CFTOKEN=22106692"&gt;Mitch Resnick&lt;/a&gt;'s
"Fulfilling Papert's Dream" both spoke to the educator inside me. 
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org866b6e3" class="outline-2"&gt;
&lt;h2 id="org866b6e3"&gt;The bad&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org866b6e3"&gt;
&lt;p&gt;
The biggest downside to me was that I found very little value added in
a number of the paper sessions over just reading the papers. Part of
this is probably because of my own over-inflated expectations given the
number of years I've waited to attend. Part of it though, was the fact
that sessions were so tightly packed that I didn't have time to follow
up with presenters before having to run to the next
thing. Unfortunately, in some
cases, it was because the presenter merely
"read" the paper much as a professor sometimes just reads the slides
or the book to his class.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgc64365e" class="outline-2"&gt;
&lt;h2 id="orgc64365e"&gt;Other thoughts&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgc64365e"&gt;
&lt;p&gt;
One paper presentation I very much liked was &lt;a href="http://dl.acm.org/citation.cfm?id=3017701&amp;amp;CFID=738971273&amp;amp;CFTOKEN=22106692"&gt;Exam Wrappers: Not a
Silver Bullet&lt;/a&gt; presented by &lt;a href="https://michellecraig.github.io/"&gt;Michelle Craig&lt;/a&gt; and &lt;a href="http://pages.cpsc.ucalgary.ca/~bdstephe/"&gt;Ben Stephenson&lt;/a&gt;. I
actually came in late since I was hustling over from the Code.org
lunch. The result was that I didn't actually know what "Exam Wrappers"
were until well after the talk when I ran into &lt;a href="https://twitter.com/jkhuggins"&gt;Jim Huggins&lt;/a&gt;. Exam
wrappers, in short, are merely when you require the students fill out something
for some credit when picking up their exams. The funny thing is that
it's a strategy that high school teachers have used for years without
a special name and we already knew the good and bad of it without the
research but that's not what I want to get at here. What I loved about
the talk, besides the fact that Ben and Michelle are clearly strong
presenters is that this was a negative result that was being
presented. I also loved the fact that they didn't present their
research as gospel but rather pointed out the strengths and weaknesses
of their approach - they made a case to what and why we should pay
attention to and what should be taken with a grain of salt.
&lt;/p&gt;

&lt;p&gt;
This was a major breath of fresh air after being exposed to so much
education 'research' over the course of my life that the author or
presenter felt was just as strong as a mathematical proof rather than
an indication based on a specific experience or small set of
experiences.
&lt;/p&gt;

&lt;p&gt;
I also felt a little weird at times during the week when west coast people seemed
to know me. I know I'm a loud mouthed curmudgeon and I go on my
periodic ed rants but given the dearth of comments on this blog I was
really surprised to get as many as "great to meet you in person after
reading your blog" or "we know you and your work" all week. It was
weird and somewhat humbling.
&lt;/p&gt;

&lt;p&gt;
Finally, another highlight f`or me was that I got to catch up with
some of family.
&lt;/p&gt;


&lt;div class="figure"&gt;
&lt;p&gt;&lt;img src="http://cestlaz.github.io/img/sigcse-seattle.jpg" alt="sigcse-seattle.jpg" align="center"&gt;
&lt;/p&gt;
&lt;/div&gt;


&lt;p&gt;
Already planning to submit something to present at SIGCSE 2018 in Baltimore.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>cs</category><category>csed</category><category>cseducation</category><category>teaching cs</category><guid>http://cestlaz.github.io/posts/sigcse-2017-recap/</guid><pubDate>Tue, 14 Mar 2017 12:19:18 GMT</pubDate></item><item><title>Student Projects 2014 - Let's go to the video tape</title><link>http://cestlaz.github.io/posts/2014-06-23-softdev-videos-2014.html/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;

&lt;p&gt;
Just completed the second time through for my Software Development
course. Last year we had a great time at our Demo Night hosted at
Google.
&lt;/p&gt;

&lt;p&gt;
This year, unfortunately, due to a variety of reasons, we couldn't get
the event together. Still, the kids did great work so I thought I'd
share.
&lt;/p&gt;

&lt;p&gt;
This year, I asked each group to make a short video.
&lt;/p&gt;

&lt;p&gt;
First up, we've got bit&amp;lt;&amp;lt;shift - a search engine for code. Nice idea
and a really slick interface.
&lt;/p&gt;

&lt;div class="center"&gt;
&lt;iframe src="//player.vimeo.com/video/98697078" width="500" height="281" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt; &lt;p&gt;&lt;a href="http://vimeo.com/98697078"&gt;bitshift: a source code search engine&lt;/a&gt; from &lt;a href="http://vimeo.com/ear"&gt;Ben Kurtovic&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;


&lt;p&gt;
Next up, we've got Socialpedia - our answer to Klout -
&lt;/p&gt;


&lt;div class="center"&gt;
&lt;iframe width="560" height="315" src="//www.youtube.com/embed/uhLZBsZWQGk" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;
And then Twitch Rock-em-Sock-em Robots - 
&lt;/p&gt;

&lt;div class="center"&gt;
&lt;iframe width="560" height="315" src="//www.youtube.com/embed/Am3PTB_FvNs" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;
There were a bunch of other neat projects including a site that
crowd-sources 311 trash related problems and a version of the game
"Frozen Synapse" where you can program your forces using an embedded
Lisp interpreter.
&lt;/p&gt;

&lt;p&gt;
Very cool stuff.
&lt;/p&gt;

&lt;p&gt;
Good job guys!!!!!
&lt;/p&gt;</description><category>csed</category><guid>http://cestlaz.github.io/posts/2014-06-23-softdev-videos-2014.html/</guid><pubDate>Mon, 23 Jun 2014 04:00:00 GMT</pubDate></item><item><title>Build it first</title><link>http://cestlaz.github.io/posts/2013-11-19-build_it.md/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;div&gt;&lt;p&gt;The subtitle of this post is:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;and why my students are going to hate me tomorrow.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;When my good friend Gerry Seidman talks to my classes, he frequently
says "never use a data structure or algorithm you couldn't build yourself."&lt;/p&gt;
&lt;p&gt;This doesn't mean that you have to write everything from scratch, just
that you should have some knowledge as to what's going on under the
hood. I find that all too often young programmers just rely on APIs
and libraries and really don't know how their computers and programs are working.&lt;/p&gt;
&lt;p&gt;And it's never too early to start.&lt;/p&gt;
&lt;p&gt;We've been spending time talking about arrays recently. Now, most of
my students have some exposure to Python and so we started talking
about the flexibility and power of the Python list vs the limited
facilities of the Java array.&lt;/p&gt;
&lt;p&gt;How to solve the problem and make Java easier to work with? Let's
write our own list class. We started simple:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;public class myList {
  private int[] data;
  private int numItems;

  public myList() {
    data = new int[5];
    numItems = 0;
  }

  // append to the end of the list
  public add(int d) {
    if (numItems &amp;gt;= data.length) {
      tmp = new int[data.length+data.length/2];
      for (int i=0;i&amp;lt;numItems;i++)
        tmp[i]=data[i];
      data = tmp;
    }

    data[numItems]=d;
    numItems = numItems + 1;
  }
}
&lt;/pre&gt;


&lt;p&gt;from there we added functionality such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Inserting in arbitrary locations&lt;/li&gt;
&lt;li&gt;Removing items from the list&lt;/li&gt;
&lt;li&gt;Searching for an item&lt;/li&gt;
&lt;li&gt;Setting the item at a location to a value&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And of course we were also able to talk about things like refactoring
out growing the array into a private method.&lt;/p&gt;
&lt;p&gt;And tonight the classes are changing the internal array from int[] to String[].&lt;/p&gt;
&lt;p&gt;Of course, what we're building is an ArrayList. Tomorrow we'll reveal
that little fact and of course the classes will all hate me, but then,
they'll really understand what's going on under the hood.&lt;/p&gt;&lt;/div&gt;</description><category>csed</category><category>pedagogy</category><guid>http://cestlaz.github.io/posts/2013-11-19-build_it.md/</guid><pubDate>Tue, 19 Nov 2013 05:00:00 GMT</pubDate></item><item><title>Back to Work</title><link>http://cestlaz.github.io/posts/2012-11-02-back-to-work.md/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;div&gt;&lt;h4&gt;On going back to work today&lt;/h4&gt;
&lt;p&gt;Since school was still out due to Sandy, we ran a second online class
yesterday. At the end of the session, which I'll summarize below, I
told the class what I wanted them to accomplish today and over the
weekend. One student queried "you mean no class on Friday :-(?" Alas
no -- while students aren't reporting to school this morning, teachers
are.&lt;/p&gt;
&lt;p&gt;Of course the logic as to why is far from sound. Some schools are
fine, some not, in our case, there's no subway service south of 34th
street or coming in from Brooklyn and we're located near the tip of
Manhattan. &lt;/p&gt;
&lt;p&gt;What are we going to do? Who knows. We don't have lessons to plan and
while Stuy has power, phones and internet are out. Professional
development? Even when planned extensively, I've found it to be mostly
useless (I always have to sit through math PD, for example, learning
how to use a graphing calculator). &lt;/p&gt;
&lt;p&gt;So, we're going to report in for no real purpose. Best I can figure,
the city wants teachers in so they can call it a professional
development day then they can try to change things so that students
will report during Brooklyn Queens day next semester thus restoring
one instructional day lost this week. Not a bad idea to recapture the
day but to make teachers - coming from all over the area - trudge in
for no purpose just to play politics is distasteful but unfortunately typical. &lt;/p&gt;
&lt;p&gt;To add to the insult, not only are us teachers still in the dark as to
what's going on, we weren't even told when to report until after
midnight yesterday. I woke up at my usual 5:00am to exercise but first
checked my email -- waiting was an email from Chancellor Dennis
Walcot. I recieved it at 12:52 this morning. This was when I was first
told that I was to report to school at 10:00am. I can't believe this
decision couldn't have been made and emailed out a few hours
earlier. In any event, I'm waiting until 10:00 to get in - I've often
found the building locked when I've shown up before official opening hours.&lt;/p&gt;
&lt;p&gt;So now for the part of my job that I actually enjoy:  &lt;/p&gt;
&lt;h4&gt;How did yesterday's online class go?&lt;/h4&gt;
&lt;p&gt;Today's class was a wrapup of a mini project -- basically an
add-a-line story site. You can see an unfinished version that two of
the students put together &lt;a href="http://ml7.stuycs.org:5200"&gt;here&lt;/a&gt;. You can
see more of the stuff we are using on our &lt;a href="http://github.com/organizations/stuycs-ml7"&gt;class github
page&lt;/a&gt;. The students are
using &lt;a href="http://flask.pocoo.org"&gt;Flask&lt;/a&gt; which is a python website
generator along with &lt;a href="http://www.mongodb.org"&gt;MongoDB&lt;/a&gt;. We had to tie
up some loose ends.&lt;/p&gt;
&lt;p&gt;We again broadcast a Google+ hangout live through YouTube and we again
used a google doc as a chat space. This time we used the right hand
side bar for comments and only used the document for more permanent
material (a web refernce for example). It worked much better.  The
vertical flow of comments on the sidebar were much easier to track and
work with than a freeform document.&lt;/p&gt;
&lt;p&gt;The session still had the time delay problem and the feedback loop is
still a killer but the students again seemed to enjoy the
experience. This is clearly not a replacement for in person teaching,
but again, better than nothing on a day off.&lt;/p&gt;
&lt;h4&gt;And a note on the Stuy CS Culture&lt;/h4&gt;
&lt;p&gt;The seniors were game for this experiment and would be happy to go
again today if we were able to.  They also continually surprise me in
little ways. When we started this mini project, we all had to learn
how to use MongoDB (myself included). At first I had a hard time
confirming that they had done the outside work to learn the MongoDB
specifics. Only as they continually gave me better alternatives to my
approaches did I know that they were on top of things.&lt;/p&gt;
&lt;p&gt;On the other hand, my sophomores were much less receptive to an online
class during the hurricane days. A handful wanted to give it a go, but
the majority never responded to my email. Why was that? &lt;/p&gt;
&lt;p&gt;I have a few thoughts. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A big reason is that I've only been with my sophomores for a short
time. We haven't yet built the rapport and culture that exists in my
senior classes. I always notice a difference in class attitude around
Halloween but we really don't have the feeling of family until late
November or some time in December.&lt;/li&gt;
&lt;li&gt;The sophomores are in a required course, the seniors an elective. I
think this is secondary to the culture / rapport but I'm sure it has
an effect.&lt;/li&gt;
&lt;li&gt;I believe the seniors have a better understanding that what we're doing in class is to their benefit and the sophomores are still &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I'm going to have to pay more attention to the time line from when
students come into my class and when they become part of "the family."&lt;/p&gt;&lt;/div&gt;</description><category>community</category><category>csed</category><guid>http://cestlaz.github.io/posts/2012-11-02-back-to-work.md/</guid><pubDate>Fri, 02 Nov 2012 04:00:00 GMT</pubDate></item><item><title>Sandy Bridge and Screen Casting</title><link>http://cestlaz.github.io/posts/2012-10-31-sandy-bridge.html/</link><dc:creator>Mike Zamansky</dc:creator><description>Here's what the bridge leading across the West Side Highway over to
Stuy during the storm. Hence the title with the weak tech reference.

&lt;div align="center"&gt;
&lt;img width="300" src="http://cestlaz.github.io/img/hurricane-bridge.jpg"&gt;
&lt;/div&gt;

The storm has kept the schools closed all week so it's as good a
time as any to try to resurrect this blog.
&lt;p&gt;
As you can see, I've moved from blogger to a Jekyll based blog hosted
on Github. I'm really liking the way it works but more on that at a
later date.
&lt;/p&gt;&lt;p&gt;
Some time Monday evening or Tuesday morning, I asked Batya if she
thought my seniors would be up for a livestreamed class (Batya, my
daughter, for anyone who doesn't know, is in one of the sections of
the class). It turned out they were all in. 
&lt;/p&gt;&lt;p&gt;
I've got to say that I've got amazing classes -- the fact that they're
into the same brand of insanity as I am and even willing to go again tomorrow isawesome.
&lt;/p&gt;&lt;p&gt;
So, here was today's experiment:
&lt;/p&gt;&lt;p&gt;
A Google+ hangout based live stream of Stuyvesant's
Software Development class. In my favor was the fact that I was just
going to introduce CSS - not a subject that lends itself to deep
classroom discussion. Against me was the use of technologies I haven't
used before and the fact that we have about 64 students that I was
hoping to reach.
&lt;/p&gt;&lt;p&gt;
So, how did it go?
&lt;/p&gt;&lt;p&gt;

&lt;/p&gt;&lt;h3&gt;First, let's talk about the technical side.&lt;/h3&gt;

Here's the basic setup:

&lt;img src="http://cestlaz.github.io/img/screenshot.png"&gt;

I've got two monitors and Google would only broadcast the screenshot
from the smaller one on the right. It had Emacs and a chrome going
most of the time with an occasional shell. While teaching about CSS, I
also introduced the students
to &lt;a href="https://github.com/magit/magit/downloads"&gt;Magit&lt;/a&gt; as
well as
Emacs &lt;a href="https://github.com/skeeto/impatient-mode"&gt;impatient&lt;/a&gt;
mode both of which are awesome. On the left hand screen I had the
actual Hangout as well as the Google shared doc.
&lt;p&gt;
It turns out that you can't make a public Hangout and also stream it
live on YouTube, you can only invite people in your circles. Since
most of my students aren't in my circles, only a few could "join" the
Hangout. Most watched the YouTube stream and we all connected to a
shared Google Doc for notes and questions.
&lt;/p&gt;&lt;p&gt;
The Google Doc turned out not to be the best idea. It got everyone
writing in the same document but people ended up writing all over the
document. If something wasn't on the screen I wouldn't see it. We're
going to try something more sequential tomorrow -- maybe disqus
comments. 
&lt;/p&gt;&lt;p&gt;
The other two problems were the low resolution of the screenshot
broadcast and the lag. I really had to blow up the font size. If
anyone has any ideas how to do this well, please share. The lag was
also a problem since it kept me from having anything resembling a reasonable feedback loop.
&lt;/p&gt;&lt;p&gt;
On the other hand, my students were left with this enduring image of me:


&lt;/p&gt;&lt;div align="center"&gt;&lt;img width="50%" src="http://cestlaz.github.io/img/monocle.jpg"&gt;&lt;/div&gt;

&lt;h3&gt;And the view from a teacher&lt;/h3&gt;

On the one hand, it was pretty cool to be at home and able to work
with my students but there were some major deficiencies:

&lt;dl&gt;
&lt;dt&gt;Can't see the audience&lt;/dt&gt;
&lt;dd&gt;Even at best, with the Hangout you can only see 10 people. I'm guessing it feels like a stage actor doing a movie. I was talking but couldn't see my audience. No nodding heads, no nodding off heads, just talking to a screen. It was a little disconcerting. Teachers adjust to their class all the time both consciously and subconsciously. You might do something overt like call on a particular student or maybe sense it's time for a joke or even little things like how or where you stand. All of this was lost.&lt;/dd&gt;
&lt;dt&gt;Need a better chatroom&lt;/dt&gt;
&lt;dd&gt;I mentioned that the Google Doc wasn't a great idea. I think
something that's more vertical like a chatroom will work better. I'll
know tomorrow.&lt;/dd&gt;
&lt;dt&gt;An shared board space would be very cool&lt;/dt&gt;
&lt;dd&gt;The other missing piece is a way for the students to directly interact with what I'm presenting. A shared Emacs would be amazing.&lt;/dd&gt;
&lt;dt&gt;The delay is a killer&lt;/dt&gt;
&lt;dd&gt;This was also a problem. I found myself saying or doing something then waiting until something came through the document. This hurt the flow considerably&lt;/dd&gt;

I really found the experience enlightening. People keep talking about
recorded lectures and MOOCS and all that but if anything, today's
experience just confirms to me that there's nothing like an in class
teacher, particularly with a small group of students.

That said, I think this was a good experience and my students seem to
agree. We spent part of an otherwise unproductive day in a productive
manner and we're planning on doing it again tomorrow.

&lt;p&gt;
Since Students will be home until Monday, I'd like to go for a third
class on Friday but I'll be back at work so it looks like no class
after tomorrow until Monday.

&lt;/p&gt;&lt;p&gt;
Comments?&lt;/p&gt;&lt;/dl&gt;</description><category>community</category><category>csed</category><guid>http://cestlaz.github.io/posts/2012-10-31-sandy-bridge.html/</guid><pubDate>Wed, 31 Oct 2012 04:00:00 GMT</pubDate></item><item><title>Anyone can cook</title><link>http://cestlaz.github.io/posts/2012-04-15-anyone-can-cook.html/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;div style="text-align: center;"&gt;&lt;span style="font-size: x-large;"&gt;Anyone can cook&lt;/span&gt; - Chef Gusteau&lt;/div&gt;&lt;br&gt;These days the rage seems anyone can code.&lt;br&gt;&lt;br&gt;On line attempts to teach coding and computing abound.&lt;br&gt;&lt;br&gt;We've got Udacity and Coursera trying to bring college level academic offerings to the masses on one extreme and more down to earth "learn to code" efforts with Codecademy getting the most press.&lt;br&gt;&lt;br&gt;While I applaud any effort to make knowledge more accessible, there are a lot of unanswered questions as to the effectiveness of these latest attempts. Recent posts by &lt;a href="http://blog.mrmeyer.com/?p=13213"&gt;Dan Meyer&lt;/a&gt; and &lt;a href="http://hackeducation.com/2012/04/14/udacity-cs101/"&gt;Audrey Watters&lt;/a&gt; have started to raise questions and in my opinion some of the hype has worn off.&lt;br&gt;&lt;br&gt;At some point, I plan to talk at length about the Udacity and Coursera offerings as well as attempts to increase on line course offerings at the high school levels. I'll talk about the difficulties and dangers that lie ahead.&lt;br&gt;&lt;br&gt;Today, I'd like to talk about the more vocational offerings such as what Codecademy is doing.&lt;br&gt;&lt;br&gt;The premise seems to be that anyone can code and that everyone should code. I've been thinking about this for a while and I keep coming back to the question, "what's the endgame?"&lt;br&gt;&lt;br&gt;Teaching Javascript, HTML and the like narrowly focuses on creating web pages. Even if we forget about difficulties of on line learning that include lack of an interactive feedback loop, lack of follow up,  a narrow curriculum, and the fact that programming beyond the basics is not easy, what's the goal? While I find making an interactive web site cool, I don't know how much it benefits the masses.&lt;br&gt;&lt;br&gt;One could argue that the mental exercise of programming is a benefit and having a better understanding of how a computer works is a good thing. I'd agree, but what we really could benefit from is a different paradigm in terms of how we approach using computers. A new approach would make even rudimentary scripting skills of greater value to all.&lt;br&gt;&lt;br&gt;Most of us use computers as program loaders. That is, we sit down, load our word processor, edit something, and exit the word processor. Load our web browser, search the web, exit, load the next program, do something, etc. We might have multiple programs up at the same time, but we use them in isolation.&lt;br&gt;&lt;br&gt;This is how most people's computing experience has evolved.&lt;br&gt;&lt;br&gt;With this mindset, I'm not sure how useful coding will be for the masses. People might benefit from some rudimentary scripting a la Excel macros or Google App Scripts, but power users already do this. I don't think that the ability to program within the constraints of scripting individual applications will be a game changer.  To make rudimentary programming skills valuable we must use computers in a way that allows us to use simple techniques to tie together powerful applications.&lt;br&gt;&lt;br&gt;A few years ago, right before our Christmas break, I stopped over in the Math Chairman's office to wish him a good holiday. Danny was hard at work. He was frantically trying to change the math web site before he left.&lt;br&gt;&lt;br&gt;The math site was a mess. It consisted of a few dozen loosely arranged folders each with multiple sub folders. Danny was looking in each folder for old sample final exams, each saved as a Tiff file. He would load the file into Photoshop, convert it to another format and save it. He would then change the corresponding HTML file to reference the new file. He had been at it for hours with no end in sight. I said "Danny, I've got this, go home."&lt;br&gt;&lt;br&gt;I went to my office, wrote a small shell script, maybe 10 lines, hit enter, got on my bike and rode home. When I got there, the job was done.&lt;br&gt;&lt;br&gt;Now Danny's a really smart guy and he's technically savvy. The difference is that I was taught to try to tie programs together through the command line while he was taught to do things in the Windows/Mac way of loading one program and using it in isolation. I used a simple shell script to tie together a number of powerful Linux applications (find, imagemagick, sed) rather than pointing and clicking over and over again.&lt;br&gt;&lt;br&gt;I've seen this "program loader" mind set time and time again and in surprising places. My good friend and colleague &lt;a href="http://garyrubinstein.teachforus.org/"&gt;Gary Rubenstein&lt;/a&gt; has done a lot of work debunking the "educational reformers" that are currently in power. Gary had been using Excel to do all his analysis until I pointed out that he could download his data and use simple Python scripts to greater effect. Why was I surprised that Gary wasn't already doing this? Well, in addition to being an amazing math teacher, Gary holds a Masters degree in Computer Science and had worked as a professional programmer in a prior life.&lt;br&gt;&lt;br&gt;Of course, our life isn't made any easier with closed file formats and vendors that try to isolate their data, but if we could re-educate people to use computers across applications, that would make rudimentary programming useful to all and then indeed there would be a reason for everyone to code.&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;div class="blogger-post-footer"&gt;&lt;img width="1" height="1" src="https://blogger.googleusercontent.com/tracker/468689896075458340-448488222916899193?l=cestlaz.blogspot.com" alt=""&gt;&lt;/div&gt;</description><category>csed</category><guid>http://cestlaz.github.io/posts/2012-04-15-anyone-can-cook.html/</guid><pubDate>Sun, 15 Apr 2012 04:00:00 GMT</pubDate></item><item><title>CS Stress</title><link>http://cestlaz.github.io/posts/2012-01-29-cs-stress.html/</link><dc:creator>Mike Zamansky</dc:creator><description>I've been mostly underwater for the last couple of weeks.&lt;br&gt;&lt;br&gt;End of term issues combined with the Academy of Software Engineering announcement has pretty much eaten up all of my out of class time.&lt;br&gt;&lt;br&gt;It's going to be a week or so before I can finish writing the posts I was planning on, but it looks like a storm is brewing around Stuyvesant and Computer Science so I thought I'd put up this short semi-related post.&lt;br&gt;&lt;br&gt;Stuyvesant has a reputation of being something of a pressure cooker. The day can be as long as ten periods and it's not uncommon for a student to take three or more AP classes, even before the senior year. The question of student workload and stress has been a hot topic for a number of years.&lt;br&gt;&lt;br&gt;There's frequently tension over how many courses and which courses a student should be allowed to take.  Usually, this revolves around the school placing a limit on the number of classes, or more specifically, the number of A.P. classes a student can take. Most recently, the conversation looks to be turning to the number of classes a student can take overall.&lt;br&gt;&lt;br&gt;Given that most A.P. classes fall within a Stuyvesant student's required sequence of classes - that is, Calculus is just "the next math class" and A.P. U.S. History is slotted in place of a students regular U.S. History course, limiting the number of classes a student can take, A.P. or otherwise could have a major impact on Computer Science at Stuyvesant.&lt;br&gt;&lt;br&gt;What's most disturbing is that limiting student options in terms of courses may not do anything to decrease stress and workload. No one has looked at what is actually going on in student's required classes.&lt;br&gt;&lt;br&gt;I decided to collect some information from our students. I sent out a survey to five of our seven A.P. C.S. classes (three of mine, two of JonAlf's -- the other two classes don't have a mailing list). I asked them to rate the work load and stress factor for A.P. CS, their typical Stuy course and their typical Stuy A.P.course. So far, I've gotten 80 responses (out of about 150 students emailed). Here's what we got (ratings were on a 1-10 scale):&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;th&gt;&lt;/th&gt;&lt;th&gt;A.P. C.S.&lt;/th&gt;&lt;th&gt;Reg. Class&lt;/th&gt;&lt;th&gt;A.P. Class&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Workload avgs   &lt;/td&gt;&lt;td&gt;4.97    &lt;/td&gt;   &lt;td&gt;6.65    &lt;/td&gt;   &lt;td&gt;7.13    &lt;/td&gt;   &lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Workload dev   &lt;/td&gt;&lt;td&gt;1.94    &lt;/td&gt;   &lt;td&gt;1.41   &lt;/td&gt;   &lt;td&gt;1.52   &lt;/td&gt;   &lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Stress avgs   &lt;/td&gt;&lt;td&gt;4.67   &lt;/td&gt;   &lt;td&gt;6.39    &lt;/td&gt;   &lt;td&gt;6.94   &lt;/td&gt;   &lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Stress dev   &lt;/td&gt;&lt;td&gt;2.24   &lt;/td&gt;   &lt;td&gt;1.63    &lt;/td&gt;   &lt;td&gt;1.64    &lt;/td&gt;   &lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;br&gt;I know this isn't really hard data, but it seems that our A.P. C.S. classes are considered to be both easier and less stressful than other classes at Stuyvesant. Given that our kids do very well at C.S., we're probably doing something right and it will be a shame if student opportunities become limited. I'll certainly write more on this as the situation develops.&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;For you educators out there, is stress an issue at your schools and how do you deal with making room for students to take CS at your schools? &lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="blogger-post-footer"&gt;&lt;img width="1" height="1" src="https://blogger.googleusercontent.com/tracker/468689896075458340-7465860293098412736?l=cestlaz.blogspot.com" alt=""&gt;&lt;/div&gt;</description><category>csed</category><guid>http://cestlaz.github.io/posts/2012-01-29-cs-stress.html/</guid><pubDate>Sun, 29 Jan 2012 05:00:00 GMT</pubDate></item></channel></rss>