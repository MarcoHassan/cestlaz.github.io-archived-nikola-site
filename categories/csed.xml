<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>C'est la Z (Posts about csed)</title><link>http://cestlaz.github.io/</link><description></description><atom:link href="http://cestlaz.github.io/categories/csed.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Wed, 11 Jul 2018 00:31:27 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>I'm not going to congratulate you on your AP results</title><link>http://cestlaz.github.io/posts/ap-2018/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;div id="outline-container-org4f5dbad" class="outline-2"&gt;
&lt;h2 id="org4f5dbad"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org4f5dbad"&gt;
&lt;p&gt;
While busy finishing off my sides for my talk at CSTA2018 this weekend
I noticed a Facebook post about APCS exam grades now or shortly being
available.
&lt;/p&gt;

&lt;p&gt;
I'm no longer teaching high school but still fancy myself a teacher
first and part of the K12CS community. We're a growing community and
we're growing fast.
&lt;/p&gt;

&lt;p&gt;
Usually, at this time of year we see a number of people posting their
results. "I had 16 test takers, had 5 fives, 6 fours etc." 
&lt;/p&gt;

&lt;p&gt;
I decided that not only won't I be congratulating anyone on their
results this year but decided to write this quick post to say no one
should.
&lt;/p&gt;

&lt;p&gt;
I'm not saying that hundreds of teachers out there don't deserve
congratulations - they do. The problem is, for everyone who's kids 
got all fours and fives, somewhere out there was a teacher who
possibly through no fault of their own had students scoring ones, twos
and threes. 
&lt;/p&gt;

&lt;p&gt;
When I was at Stuy, almost all of my kids got fours or fives when the
exam was the old AB exam. When it went to A only, it was almost
exclusively fives with a few fours and maybe a single one. That wasn't
me. It was the kids. The AP CS teacher before me got similar results
as did all of my colleagues and the teachers who are still
there. Again, it was the kids.
&lt;/p&gt;

&lt;p&gt;
That's not to say that I didn't add value. I know I spent a career at
Stuy doing right by those kids regardless of test scores.
&lt;/p&gt;

&lt;p&gt;
The fact is that there's only so much a teacher can do.
&lt;/p&gt;

&lt;ul class="org-ul"&gt;
&lt;li&gt;Was APCS (A or principles) their first course?&lt;/li&gt;
&lt;li&gt;What other demands are placed on the students?&lt;/li&gt;
&lt;li&gt;How about the teacher?&lt;/li&gt;
&lt;li&gt;How many kids in a class? How much time?&lt;/li&gt;
&lt;li&gt;Is APCS an elective or required??&lt;/li&gt;
&lt;li&gt;Is the teacher getting the support they need?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
And the list goes on. I know some great teachers who never had classes
with great AP results and meh teachers that did. Actually, I know some
APCS and Calc teachers that consistently had classes with good scores
through drill and kill and building student speed. Of course, at the
same time these teachers totally turned the kids off from the subjects
&lt;/p&gt;

&lt;p&gt;
Our teachers do deserve praise and congratulations.
&lt;/p&gt;

&lt;ul class="org-ul"&gt;
&lt;li&gt;Praise for getting through another year.&lt;/li&gt;
&lt;li&gt;Praise for forging a path in this new subject area.&lt;/li&gt;
&lt;li&gt;Praise for doing more with less.&lt;/li&gt;
&lt;li&gt;Praise for inspiring kids and starting them on a path.&lt;/li&gt;
&lt;li&gt;Praise for changing lives for the better.&lt;/li&gt;
&lt;li&gt;And so on&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
If your kids left with more than they came in with you did a great job
and deserve congratulations. If you set a seed that will later grow
you've done an enormous amount of good.
&lt;/p&gt;


&lt;p&gt;
It's like I would always tell my kids when they won an award. I was
never proud of them actually winning the award. I was proud of how they carried
themselves, prepared, performed or whatever. The award was just some
outsider also noticing they're awesome.
&lt;/p&gt;

&lt;p&gt;
Same thing here so I won't be congratulating teachers on student test
results. The results coming in do provide some measure of closure for
the year though so I will congratulate you all on the year and your
work.
&lt;/p&gt;

&lt;p&gt;
Hope to see many of you this weekend at CSTA2018.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>ap</category><category>csed</category><category>tests</category><guid>http://cestlaz.github.io/posts/ap-2018/</guid><pubDate>Thu, 05 Jul 2018 19:36:22 GMT</pubDate></item><item><title>Talking about CS teacher certification at CSTA 2018</title><link>http://cestlaz.github.io/posts/csta-2018/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;div id="outline-container-org38f5df0" class="outline-2"&gt;
&lt;h2 id="org38f5df0"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org38f5df0"&gt;
&lt;p&gt;
As I mentioned in my last post, this coming weekend is the Computer
Science Teachers Association (CSTA) conference. I've been a member of
CSTA since the beginning but this will be only the second time I've
made it to the annual conference.
&lt;/p&gt;

&lt;p&gt;
The CSTA conference might be the largest conference specifically for
k12 computer science teachers and that makes it different from
conferences like SIGCSE which is for CS education and education
research at all levels or ISTE which seems to be more of an Ed Tech
conference.
&lt;/p&gt;

&lt;p&gt;
I really enjoyed the conference last year but as the sessions seemed
to be weighted towards beginning CS teachers and towards the CSTA
standards I found most of the value in the "hallway track" when I got
to meet and chat with CS teachers from all over the country.
&lt;/p&gt;

&lt;p&gt;
Glancing at the program, there looks to be a bunch of interesting
sessions and this time more sessions that I think I'll personally be
interested in . 
&lt;/p&gt;

&lt;p&gt;
I'm also giving a talk. New York State just approved and created K12
Computer Science Teacher Certification and we're currently making
plans to roll out our Masters and Certificate programs for CS teachers
as soon as we get state approval. The Masters program will be largely
for preservice teacher candidates and the certificate program for in
service teachers certified in other areas. 
&lt;/p&gt;

&lt;p&gt;
The talk will cover a bit of the history of CS Education in New York,
what the state is doing and mostly what where building at Hunter and
why. It should be a fun talk. I'm hoping for some people from other
states attend so we can have a rich discussion during the session.
&lt;/p&gt;

&lt;p&gt;
So, if you're going to be at the CSTA conference, I'd love to see
you either at my session or at the conference in general. I'll be
spending most of my non session time there with my friends at GitHub
education.
&lt;/p&gt;

&lt;p&gt;
For those of you can't make it, I hope to blog about the weekend and I
hope others do as well.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>csed</category><category>education</category><guid>http://cestlaz.github.io/posts/csta-2018/</guid><pubDate>Sun, 01 Jul 2018 23:57:06 GMT</pubDate></item><item><title>PD for people who know CS</title><link>http://cestlaz.github.io/posts/pd-for-cs/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;div id="outline-container-org9bb6680" class="outline-2"&gt;
&lt;h2 id="org9bb6680"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org9bb6680"&gt;
&lt;p&gt;
I saw a couple of tweets from Sarah Judd this morning:
&lt;/p&gt;


&lt;blockquote class="twitter-tweet" data-conversation="none" data-lang="en"&gt;&lt;p lang="en" dir="ltr"&gt;A lot of CS Ed PD assumes you are new to CS. I really want CS Ed PD for people like us that came from a CS background and want to understand the pedagogy for CS in particular better. Do you know of some?&lt;/p&gt;— Sarah Judd (@SarahEJudd) &lt;a href="https://twitter.com/SarahEJudd/status/1011785286693552139?ref_src=twsrc%5Etfw"&gt;June 27, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;

&lt;blockquote class="twitter-tweet" data-conversation="none" data-lang="en"&gt;&lt;p lang="en" dir="ltr"&gt;Yes! I love SIGCSE and CSTA. I just feel like... Math teachers don't get PD that starts with "and this is how you add and subtract!" and I'd love more CS PD that assumes the content is there, and can focus on the pedagogy.&lt;/p&gt;— Sarah Judd (@SarahEJudd) &lt;a href="https://twitter.com/SarahEJudd/status/1011966102795059200?ref_src=twsrc%5Etfw"&gt;June 27, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;

&lt;p&gt;
It wasn't the first time I've heard this refrain. Last year I attended
my first CSTA conference. I had numerous conversations with CS
teachers on the fact that everything was on an intro level in terms of
both content and teaching. Further conversations with local teachers
with stronger CS backgrounds led me to run a professional development
session at Hunter this past election day for more experienced CS
teachers at schools that offered more than the basics.
&lt;/p&gt;

&lt;p&gt;
While it's not surprising that most of the PD opportunities for CS teachers are
rather rudimentary given that nationally most programs are new and
most teachers are new to the subject but there are a few deeper
reasons.
&lt;/p&gt;

&lt;p&gt;
To start, there are big players in the CS Ed movement that are pushing
curricula and specific programs and that leads to scripted PD for
their products and not depth of knowledge nor deep pedagogical content
knowledge let alone basic pedagogy. Add to this the fact that many of
the "thought leaders" in the space don't have experience teaching CS
at the K12 level and in many cases don't have a background either in
teaching nor tech and you can see where the problem comes from. On top
of this we have the erosion of respect for teaching as a profession
where reformers are trying to take the teacher out of teaching and are
trying to reduce pedagogy to following scripts. This problem goes well
beyond CS Ed but as the new kid on the block it probably hits us
hardest.
&lt;/p&gt;

&lt;p&gt;
In any case, preparing beginners is both necessary and appropriate for
the time being but we can and must do a better job than what's
currently "state of the art." At the same time we have to do something
with the CS teachers who indeed do have strong content knowledge but
don't feel comfortable with imparting that knowledge.
&lt;/p&gt;

&lt;p&gt;
So, what should we do?
&lt;/p&gt;

&lt;p&gt;
For new teachers the solution will ultimately have to come
from pre-service programs but what we end up getting is going to
largely be dictated on what's required by individual states. If states
merely require passing an exam like the Praxis CS exam which, from
what I can gather isn't a horrible content exam then we're going to
see CS teachers bumble through their early to mid careers while trying
to figure out how to teach CS much like I did way back when. If they
end up endorsing pre-service programs that are focused on specific
curricula - APCS-A for teachers, APCS-P for teachers, &lt;a href="https://cestlaz.github.io/posts/math-for-math-teachers/"&gt;Math for Math
teachers&lt;/a&gt; if you will but for CS, we're also not going to get strong
well prepared pedagogues. On the other hand if you can design a
program that has a strong pedagogical component to go along with the
content, you have a chance. Even with a well designed program
implementation will still be a challenge. Who will teach it? Education
professors who don't have CS backgrounds? CS professors with little
pedagogical training? Neither of those groups necessarily have any
real experience as actual K12 teachers. If you can find honest to
goodness experienced, strong K12 CS teachers to teach your pedagogy
courses that's a big win but that's going to be hard in most cases. 
&lt;/p&gt;

&lt;p&gt;
I think we designed a great program at Hunter and have a practical and
strong implementation plan. If you're going to be
at CSTA2018 you can hear all about it and why we designed it as we did
in the talk I'm giving. 
&lt;/p&gt;

&lt;p&gt;
For the more experienced I don't have a universal answer but I can say
what I'm planning. Teachers in NY have to complete 100 CTLE hours
every five years. For beginners, there are plenty of options, at least
content wise. For teachers who know CS, not so much. I was at a meetup
talking to a few friends a couple of weeks ago and one mentioned that
they get most of their hours in Math for America CS
workshops. Unfortunately more than a few of my CS teacher friends who
are in MFA tell me that the CS content in these workshops, while they
do satisfy the hours, are somewhat lacking on the CS / CS pedagogy
side.
&lt;/p&gt;

&lt;p&gt;
Here's what I'm planning - we (Hunter) will host a once a month
dinner/session for CS teachers who are a little farther along CS
wise. I haven't worked out all the details yet but I've got a few tech
companies that are already interested in sponsoring and helping out
should we need anything and we'll probably set most of our agenda for
the year at the first session where I'll make my best guess at a
useful agenda. This is something I'm pretty excited about. It should
help create a network of more experienced CS teachers which will both
help bolster that segment of the community and provide a long term
resource to newcomers and it should be a lot of fun.
&lt;/p&gt;

&lt;p&gt;
In some ways, this is why I ended up joining Hunter. Regardless of
what the city and state do, we're going to prepare the teachers and if
you have a well prepared teacher, you've got a shot.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>csed</category><category>pedagogy</category><category>teaching</category><guid>http://cestlaz.github.io/posts/pd-for-cs/</guid><pubDate>Wed, 27 Jun 2018 18:41:59 GMT</pubDate></item><item><title>Should CS for All be implemented at the college level?</title><link>http://cestlaz.github.io/posts/csforall-in-college/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;div id="outline-container-org035321e" class="outline-2"&gt;
&lt;h2 id="org035321e"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org035321e"&gt;
&lt;p&gt;
There's been a lively discussion on pushback to CS for All at the K12
level over on Facebook. &lt;a href="https://twitter.com/guzdial"&gt;Mark Guzdial&lt;/a&gt; started a sub thread asking if CS
for All should first be implemented at the undergrad level rather than K12. 
&lt;/p&gt;

&lt;p&gt;
It's an interesting question and as good as anything to get me out of
my month long non-blogging rut.
&lt;/p&gt;

&lt;p&gt;
Mark was right when he said that if Colleges implement CS for All, K12 will 
likely do so to follow - just look at AP. Colleges have been saying
that students should take more AP classes (while giving less credit)
and we all know where that's led. 
&lt;/p&gt;

&lt;p&gt;
On the other hand, can colleges really do CS for All, what does it
mean and what would it look like.
&lt;/p&gt;

&lt;p&gt;
Much like there is no single K12 - it's 50 states and who knows how
many independent school districts, there won't be a single CS for All
at the college level but let's think about how things could play out.
&lt;/p&gt;

&lt;p&gt;
Many colleges have distribution requirements. Students must take one
course from bucket A, two from bucket B etc. Many schools that I've
looked at already  count CS courses in one of their distribution
buckets. This doesn't mean every student will take CS but in theory
means they can. Colleges could in theory create a required CS bucket
or even a required CS course but I don't think it's as easy as
that. It might be at a private institution but while I don't know all
the ins and outs of Hunter's governance rules I do know that adding a
universal student requirement is a HUGE undertaking.
&lt;/p&gt;

&lt;p&gt;
So my take is that while it might be easy for a private college
to add a CS requirement I'm guessing other public institutions are
more similar to Hunter and it's not going to be an easy task.
&lt;/p&gt;

&lt;p&gt;
Regardless, let's say we have a required class on the books. Will we
have the capacity to teach it? It seems that schools are struggling to deal
with their existing CS majors and running sufficient electives and
courses for them. Just a month or so ago there was an article about a
college ending its CS minor due to lack of resources. It doesn't sound
like a radically different problem then that faced in K12. Maybe it's
harder given that at least in NY, there is &lt;a href="http://cestlaz.github.io/posts/room-for-csforall"&gt;room for a required CS
course&lt;/a&gt; if you can find the teacher.
&lt;/p&gt;

&lt;p&gt;
Even so, assuming we have the capacity to enroll every undergrad in a
CS course what would that be? I think most people would be in
agreement that it shouldn't be CS 101. Maybe existing pre-major
courses but even there I don't know if that's always the best
path. There could be a great pre-major course to give students the
basics and lead some into the major but what about a CS course for
students in majors that need some deeper but focussed programming
skills. The appropriate course for them isn't the same as a
general/pre-major course. Using Statistics as an example, at Hunter,
many majors require a statistics course which is off loaded to the
Stats department. Each major has slightly different requirements. Over
years, the end result is a course that it seems that nobody is happy
with - a least common denominator course. CS for All at the college level
could give us a least common denominator course that doesn't serve
anyone.
&lt;/p&gt;

&lt;p&gt;
Now, if you have the resources, none of these are issues. A well
heeled private institution can run tons of sections of specialized
classes no problem but this means just like on the K12 level we'll
get the CS for All tale of two cities that I see coming in NY where
the rich schools have good programs and the poor get a substandard
experience.
&lt;/p&gt;

&lt;p&gt;
With all of this said, I'm finally getting to the big red flag with
college CS for All and it's an issue that everyone conveniently
ignores. I'm talking about teacher quality. One of my big takeaways
from SIGCSE is that college faculty are well behind K12 teachers in
terms of pedagogy and I don't see this changing anytime soon. This is
to be expected given that professor's career advancement is really
based on research. Having a good teacher is always important but it's
even more important for non-major students since a student in the
professor's major will at least be passionate about the subject
area. To me, this is not a recipe for success.
&lt;/p&gt;

&lt;p&gt;
One can certainly make the claim that we aren't any better off right
now at the K12 level because we don't have teachers who know either
the subject nor how to teach it and at least at the college level they
know the subject matter. This is very true and it's why pre-service CS
teacher preparation is so critical to getting this right even though
it will take time. That's something that both Mark and I have been
vocal about but more on that subject next time.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>csed</category><category>csforall</category><category>policy</category><guid>http://cestlaz.github.io/posts/csforall-in-college/</guid><pubDate>Fri, 25 May 2018 20:23:23 GMT</pubDate></item><item><title>No Magic Bullets - Discovery Learning</title><link>http://cestlaz.github.io/posts/no-magic-bullets-constructivism/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;div id="outline-container-orgb255dab" class="outline-2"&gt;
&lt;h2 id="orgb255dab"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgb255dab"&gt;
&lt;p&gt;
The most recent NYC CSTA chapter meeting was "How do I assess CS?" I
wanted to go but it's been such a crazy month I was just too wiped
out. Fortunately, the meetup was &lt;a href="https://www.youtube.com/watch?v=XIMKAZbHAiA&amp;amp;index=83&amp;amp;list=WL&amp;amp;t=1796s"&gt;recorded&lt;/a&gt;. I was able to watch the
first half this morning while working out on my &lt;a href="https://www.staczero.com/hero"&gt;stationary trainer&lt;/a&gt;
which leads me to today's rare Saturday morning blog
post. The meetup consisted of two panels. The first was made up of K12
teachers who taught CS. I can't talk about the second panel yet since I'm
only halfway through but there were a couple of points made by my
friend &lt;a href="https://twitter.com/KatieJergens"&gt;Katie Jergens&lt;/a&gt; who teaches at Dalton that I thought were worth
talking about.
&lt;/p&gt;

&lt;p&gt;
The first was when Katie noted that through working with the panel,
one of her takeaways was that:
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;
Giving students an explicit strategy for solving a problem - "this is
how I would do it….," - giving them an explicit strategy first and then giving them a
problem for which that strategy would apply is much more effective than
having them discover it on their own.
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
This was refreshing to hear after being beaten over the head on
discovery learning and constructivism for the past five or so
years as being the magic bullet for teachers. I shared more thoughts
on this a few weeks ago when I wrote about a SIGCSE paper presented by
&lt;a href="https://cestlaz.github.io/posts/sigcse2018-bootstrap/"&gt;Bootstrap World&lt;/a&gt; that I very much liked. 
&lt;/p&gt;

&lt;p&gt;
Katie went on to talk about how the group found that while "discovery
learning" can be effective it can also be frustrating and lose kids
along the way. It also takes a lot of time and preparation, something
that's short on supply in most public schools.
&lt;/p&gt;

&lt;p&gt;
This made me think about the recent flurry
of discussion around the debunking of learning styles which had
previously been the magic bullet. When I started, the secret sauce was cooperative
learning. 
&lt;/p&gt;

&lt;p&gt;
Of course any good teacher knows there's no magic bullet. You fill
your tool belt and chest with as much as you can and use what's
best based on your strengths as a teacher combined with what will work
best with your students.
&lt;/p&gt;

&lt;p&gt;
Another point that Katie made that I found refreshing had to do with 
something she does with her classes. A good portion of a student's grade is
based on what she calls a "booster." Each student has to work one on
one with her on some project. The student either scores a 0 or a 100 -
the student keeps working with the direct support of the teacher until
it's perfect. 
&lt;/p&gt;

&lt;p&gt;
The important thing that Katie said with respect to this is "I can
do this because my largest class is sixteen students." No way could
this ever scale to a public school where a teacher can meet with over
150 students a day and barely has time eat lunch let alone
work one on one with a student in a suitably quiet place like an
office. The refreshing thing to hear was the acknowledgment of the
fact that what works in a rich private school won't work in a public
school. 
&lt;/p&gt;

&lt;p&gt;
All to often education and yes, CS Ed is driven by people who
really have no clue. They're anointed as thought leaders but they
don't walk the walk. Some have some knowledge and experience but many
don't. Until you've gotten a few years under your belt in a strap
cashed public school that takes all comers, don't tell them how they
should do it. Katie didn't - she acknowledged the problem - too bad so
many others don't. 
&lt;/p&gt;

&lt;p&gt;
I'm looking forward to watching the rest of the video during a future
workout and might have more to share then. For now, take a look for
yourself.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>assessment</category><category>csed</category><category>teaching</category><guid>http://cestlaz.github.io/posts/no-magic-bullets-constructivism/</guid><pubDate>Sat, 21 Apr 2018 11:40:16 GMT</pubDate></item><item><title>Tools and Complexity</title><link>http://cestlaz.github.io/posts/tools-and-complexity/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;div id="outline-container-org06fa8b0" class="outline-2"&gt;
&lt;h2 id="org06fa8b0"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org06fa8b0"&gt;
&lt;p&gt;
&lt;a href="https://twitter.com/alfredtwo"&gt;Alfred Thompson&lt;/a&gt; wrote about &lt;a href="http://blog.acthompson.net/2018/04/thoughts-on-where-cs-education-tools.html"&gt;CS education tools&lt;/a&gt; earlier today. I've
also been meaning to write on the topic but from a different point of
view.
&lt;/p&gt;

&lt;p&gt;
I do my best to keep up with the latest and greatest in the CS world
both on the academic side as well as the professional one. That's not
really possible, but I do my best. When I have a small project to work
on I'll some times use it as an excuse to play with some recent
technology. Over December, I wanted to write an application viewer to
use for company / student internship matching. I started by looking at
&lt;a href="https://reactjs.org/"&gt;React&lt;/a&gt; but ended up using &lt;a href="https://vuejs.org/"&gt;Vue.js&lt;/a&gt; which I liked much more for a variety
of reasons.
&lt;/p&gt;

&lt;p&gt;
The viewer served it's purpose but I think it can be turned into a
much more comprehensive student / employer internship platform. I
tried to steal a few minutes over this past week's spring break to
start a rewrite using another toolset, Clojure, Clojurescript and
Reagent. I'm really liking the Clojure stack and using
Emacs and Cider for the IDE is really blowing me away. 
&lt;/p&gt;

&lt;p&gt;
What I've noticed is that for every new language of framework you also
have to learn a whole set of ancillary tools.
&lt;/p&gt;

&lt;p&gt;
It didn't used to be that way. Back in the day, things were much
simpler. I remembering doing work at Goldman Sachs, it was as simple
as typing something on the command line like &lt;code&gt;cc file1.c file2.c
file3.c&lt;/code&gt;. I of course had to be cutting edge and use fancy modern
tools like &lt;a href="https://www.gnu.org/software/make/"&gt;Make&lt;/a&gt;. What's more, the tools I used in industry were very
similar to what I used in college. 
&lt;/p&gt;

&lt;p&gt;
We now live in very different times.
&lt;/p&gt;

&lt;p&gt;
If you go to the getting started guides for React or Vue it's pretty easy to
get hello world up and running but beyond that you start to fall in to
the Javascript tooling hole. To start you need either &lt;b&gt;npm&lt;/b&gt; or &lt;b&gt;yarn&lt;/b&gt;
just to manage packages and dependencies. Then you need a build system
or bundler like &lt;b&gt;webpack&lt;/b&gt;, &lt;b&gt;browserify&lt;/b&gt;, or &lt;b&gt;parcel&lt;/b&gt; and that's not even
considering older options like &lt;b&gt;gulp&lt;/b&gt; and &lt;b&gt;grunt&lt;/b&gt; and ancillary tools
like &lt;b&gt;babel&lt;/b&gt;.
&lt;/p&gt;

&lt;p&gt;
A typical React or Vue project is going to need a &lt;a href="https://github.com/krasimir/react-webpack-starter/blob/master/package.json"&gt;project.json&lt;/a&gt; and
&lt;a href="https://github.com/krasimir/react-webpack-starter/blob/master/webpack.config.js"&gt;webpack.config.js&lt;/a&gt; file and sometimes some other files as well. Check
out the links. They're from a simple project template I found
online. Far from simple.
&lt;/p&gt;

&lt;p&gt;
When I was playing with Vue.js a couple of months ago, I ended up
using Webpack to convert the source code into the final JS, take care
of live-reloading, and in general manage the project. I still have no
idea how most of it works. I don't know if it's just me but I'm very
uncomfortable relying on tools that I really don't fully understand to
build my systems. 
&lt;/p&gt;

&lt;p&gt;
The Clojure world is little better with Leiningen and Boot. If you
don't believe me, try to make heads or tails of &lt;a href="https://github.com/bhauman/figwheel-template/blob/master/src/leiningen/new/figwheel/project.clj"&gt;this&lt;/a&gt;. 
&lt;/p&gt;

&lt;p&gt;
While it's true that as a professional you'll likely use one set of
tools on a day to day basis and you'll eventually get to know them
that doesn't mean it's not a good idea to prepare kids for what's to
come.
&lt;/p&gt;


&lt;p&gt;
On the K12 side we have drag and drop languages, specialized learning
IDEs like BlueJ, simple cut down IDEs like Dr Racket and completely
online environments like repl.it. All great starter tools that
insulate beginners from the complexities to come. College's
might get closer to the "real world" but just a tad. 
&lt;/p&gt;

&lt;p&gt;
Don't get me wrong, I like many of the tools used in K12
classes and there's far too much complexity in the professional world to
throw at beginners. If we look at a student's entire school
career, classes are already so packed with material it would be hard to
really prepare kids for the real world within their classes. You could
take that tried and true teacher / professor technique of just
requiring it and having the kids figure it out on their own but that's
really just downright abusive.
&lt;/p&gt;

&lt;p&gt;
I don't have an answer for this one. 
&lt;/p&gt;

&lt;p&gt;
I have my kids use tools like Git and GitHub early along with using
testing frameworks and external libraries. I also try to move my
students to a general purpose programmable platform like Emacs or
Vim. I think these are sound practices but students will still have a
big learning curve when they finally get to industry. 
&lt;/p&gt;

&lt;p&gt;
What I really would love it to see the tooling become simpler and
documentation better. &lt;a href="https://github.com/parcel-bundler/parcel"&gt;Parcel&lt;/a&gt;, a Javascript bundler is one of the newer
kids on the block and is much simpler and cleaner than alternatives
like Webpack. The new version of Clojure has it's own command line
tool which is also simpler than the alternatives. Maybe we are already
moving in the right direction and this entire rant will become moot in a couple of years.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>cs</category><category>csed</category><category>education</category><category>tools</category><guid>http://cestlaz.github.io/posts/tools-and-complexity/</guid><pubDate>Thu, 05 Apr 2018 22:55:21 GMT</pubDate></item><item><title>NYC CS4All - This Is Not The CS We're Looking For</title><link>http://cestlaz.github.io/posts/this-is-not-the-cs-were-looking-for/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;div id="outline-container-org2b7236e" class="outline-2"&gt;
&lt;h2 id="org2b7236e"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org2b7236e"&gt;
&lt;p&gt;
It's no secret that I'm something of an old curmudgeon in the K12 CS
Education world and I've been critical of a number of initiatives and
organizations over the years but I've been pretty quiet on the CS4All
movement in NYC Department of Education. I've had and any number of
concerns though.
&lt;/p&gt;

&lt;p&gt;
This past week at the inaugural meeting of New York City's CSTA
chapter we got a taste of the &lt;a href="http://blueprint.cs4all.nyc/"&gt;NYC CS4All Blueprint&lt;/a&gt;. A highlight was
this video:
&lt;/p&gt;

&lt;iframe src="https://player.vimeo.com/video/224494221" width="640" height="360" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;
Along with the &lt;a href="http://blueprint.cs4all.nyc/resources/3/%0A"&gt;supporting web page&lt;/a&gt;. 
&lt;/p&gt;

&lt;p&gt;
TL;DR - in a elementary school CS class, the students kept tapping out
drumbeats on the desk because they had drumming class the period
prior. Now the drumming teacher is teaching rhythms that match
segments of HTML so the students can tap and chant the line as a
memory aid. 
&lt;/p&gt;

&lt;p&gt;
Sure, it's nice when teachers can work together to support each other
but at the end of the day this is a mnemonic aid to memorize
HTML. Nothing particularly innovative here. Mnemonics like this are
great until there are too many to keep track of or ones that are too
similar. 
&lt;/p&gt;

&lt;p&gt;
The part that saddened me was that this  was the video that was
chosen  as a highlight, an exemplar. It was OK but there was
nothing new or innovative. What was worse was that there was no
computer science.
&lt;/p&gt;

&lt;p&gt;
The kids were memorizing HTML. As we watched the video, my neighbor
nudged me and asked "why are they memorizing HTML?" I would ask the
same question. Now, I do think that HTML or some other mechanism to
create content that can be shared with the world is important. Having
students get there work out in the word can be tremendously rewarding
and motivating. Also, although I'm not sold on it, some say that HTML
is a good stepping stone to CS but still. 
&lt;/p&gt;

&lt;p&gt;
Let's try an experiment.
&lt;/p&gt;

&lt;p&gt;
Imagine that lesson but instead of HTML the kids were learning
Microsoft word so instead of a chant for &lt;code&gt;&amp;lt;a href=""&amp;gt;&amp;lt;/a&amp;gt;&lt;/code&gt; you have a
chant for putting a link into a word document or instead of a chant
for &lt;code&gt;&amp;lt;b&amp;gt;somethingbold&amp;lt;/b&amp;gt;&lt;/code&gt; you have a chant like
&lt;code&gt;control-b-typestuff-then-control-b&lt;/code&gt;. Same lesson, same technique,
still no CS. You could also say that this was just one video and maybe
most of the year is about real CS. Maybe, but then why highlight this
on the CS4All web site as a featured resource.
&lt;/p&gt;

&lt;p&gt;
This was disappointing but not surprising. 
&lt;/p&gt;

&lt;p&gt;
Some will say that kids aren't ready for hardcore CS at that
age. That's fine. We can have that discussion but if CS is appropriate
for whatever grade was in the video then it should be real CS. We can
also have endless discussing about what that is but memorizing HTML is
not it.
&lt;/p&gt;

&lt;p&gt;
I wondered if the video was representative so I looked at &lt;a href="http://blueprint.cs4all.nyc/resources/5/"&gt;another&lt;/a&gt;. It
turned out this was also a lesson on HTML and again the video could of
been about any number of subject areas. I will give this one credit
for highlighting that you can do "unplugged" activities but it wasn't
really a CS activity.
&lt;/p&gt;

&lt;p&gt;
Then there was &lt;a href="http://blueprint.cs4all.nyc/resources/15/"&gt;this one&lt;/a&gt;. No video here but how we structure a CS
lesson. We have this outline:
&lt;/p&gt;

&lt;ul class="org-ul"&gt;
&lt;li&gt;Warm-up&lt;/li&gt;
&lt;li&gt;Mini lesson&lt;/li&gt;
&lt;li&gt;Independent work time&lt;/li&gt;
&lt;li&gt;Share session&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
Or, as we used to say back in the stone age:
&lt;/p&gt;

&lt;ul class="org-ul"&gt;
&lt;li&gt;Do Now&lt;/li&gt;
&lt;li&gt;Instructional activity&lt;/li&gt;
&lt;li&gt;practice&lt;/li&gt;
&lt;li&gt;summary&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
Nothing new and nothing CS here. I used that model when I taught math
but deviated from it more and more as I developed my CS teaching
chops.
&lt;/p&gt;

&lt;p&gt;
Finally I looked at &lt;a href="http://blueprint.cs4all.nyc/resources/24/%0A"&gt;this one&lt;/a&gt;. For full disclosure I have to say that
Eric, the teacher, is a friend of mine and I &lt;b&gt;&lt;b&gt;know&lt;/b&gt;&lt;/b&gt; he's a dynamite
teacher and I know he knows his stuff.
&lt;/p&gt;

&lt;p&gt;
This video, however was all about differentiation. Just like the other
resources, there's nothing wrong with them per se but there's not
really about CS. You could reskin them for any subject. 
&lt;/p&gt;

&lt;p&gt;
I also agree with a lot of what Eric says in the video but as CS
Standards take hold and standardized exams become the norm we'll find
that individualized instruction and meeting students where they are
is in direct conflict with the testing that comes with standards. I'll
talk more about that in my standards rant that I keep putting off
writing.
&lt;/p&gt;


&lt;p&gt;
Sure, the resources site has  a page with concepts like algorithms and
many schools, for better or worse, in the upper grades just fall back
on AP offerings but the more I dig the more it's apparent to me that
CS4All in NY will be more about getting something into every classroom
rather than something appropriate and good.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>csed</category><category>curriculum</category><guid>http://cestlaz.github.io/posts/this-is-not-the-cs-were-looking-for/</guid><pubDate>Fri, 29 Sep 2017 14:40:24 GMT</pubDate></item><item><title>The Cost of AP Exams</title><link>http://cestlaz.github.io/posts/cost-of-ap-exams/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;div id="outline-container-org3fc97ed" class="outline-2"&gt;
&lt;h2 id="org3fc97ed"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org3fc97ed"&gt;
&lt;p&gt;
Now that I'm back from vacation and summer's winding down I thought
I'd start getting back to more classroom related posts. I still have a
few summer topics I want to write about – standards and side projects
in particular but I'm also looking forward to talking more about the
classroom since, after all, at my core, I'm a teacher. When I saw &lt;a href="http://www.slate.com/articles/technology/future_tense/2017/08/how_online_textbooks_could_help_more_students_take_ap_exams.html"&gt;this&lt;/a&gt;
article in my inbox this morning I thought I'd talk about it.
&lt;/p&gt;

&lt;p&gt;
In the piece, Lindsey Tepe since more kids are taking AP classes and
they're very expensive, schools should look to lower other costs
related to AP classes so as to provide financial support so that
students can take that oh so important end of year exam:
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;
While the College Board continues to reimburse about one-third of the
test cost for eligible low-income students, only about half of states
are now offering any further financial assistance for students.
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
Ms. Tepe's solution? Lower text book costs. As a way of lowering
school costs, I'm all for it. I've used free online resources in lieu
of textbooks for years but the savings should go somewhere where it
can make a difference. Perhaps lowering class sizes. The fatal flaw in
Ms. Teps's piece is that it continues spinning the misplaced narrative
that AP Exams are a very important part of a child's education.
&lt;/p&gt;

&lt;p&gt;
Let's be reminded of something: The AP Exam is one thing - an exam - a
single test at the end of the year. 
&lt;/p&gt;

&lt;p&gt;
The narrative is that students should take more and more AP classes,
that they're somehow better for kids. Part of this is due to the
potential college credit and part is because the public has been
bamboozled by the ridiculous school ratings that give credit for AP
classes taken. Back in "the day," AP classes were basically early
college. You could then argue that they were the most rigorous classes
offered in a school. AP Calc was basically college Calc. Same for
APCS-AB, AP-Bio and the rest. Now, with classes like APCS-P aimed to
be accessible to typical high school students in the lower grades,
they can't (but still will) make that claim. In fact, at Stuy, my
former school, there are plenty of non AP classes that are more
rigorous than AP classes and the best AP teachers don't always cover
the whole syllabus because they're more concerned with their students
actually learning rather than scoring 5 on an exam.
&lt;/p&gt;

&lt;p&gt;
On the college credit front, if a student has a high probability of
saving money through AP credit then I'm all for it but otherwise, it's
just money going to the college board.
&lt;/p&gt;

&lt;p&gt;
It seems ridiculous for me to have to write this but the important
part of a class is, you know, the class. Not the single exam given by
an outside agency at the end and graded after the semester concludes.
&lt;/p&gt;

&lt;p&gt;
My suggestion? Offer college level work to students that are ready for
it but don't push the AP exam. This would save a ton of money. What value
does the college board actually bring to the table? Remember, they're
making a pretty penny on all of this testing. A math teacher should be
able to teach calculus with or without AP. A good text being used by
that teacher in class - be it free or paid for is actually much more
important to a student learning calculus than a single exam taken at
the end of the year. I'd go further and say that I'd trust the
teacher's exam more than the college board's. If a teacher knows the
math but needs to see some sample syllabi, they're a web search
way. The same is true for most other college courses that have AP
equivalents and maybe even more so for computer science.
&lt;/p&gt;

&lt;p&gt;
At the end of the day it should be about students learning not about
students taking high stakes exams.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>ap</category><category>csed</category><category>education</category><category>policy</category><guid>http://cestlaz.github.io/posts/cost-of-ap-exams/</guid><pubDate>Thu, 17 Aug 2017 11:07:12 GMT</pubDate></item><item><title>A friendly reminder to use the right language when describing CS</title><link>http://cestlaz.github.io/posts/languages-or-cs/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;div id="outline-container-org6ab361b" class="outline-2"&gt;
&lt;h2 id="org6ab361b"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org6ab361b"&gt;
&lt;p&gt;
I was part of this conversation the other day:
&lt;/p&gt;

&lt;blockquote class="twitter-tweet" data-lang="en"&gt;&lt;p lang="en" dir="ltr"&gt;When science teachers asked me if I taught AP Java I'd always respond by asking them if they taught AP Microscope.&lt;/p&gt;— Mike Zamansky (@zamansky) &lt;a href="https://twitter.com/zamansky/status/883327927831711745"&gt;July 7, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;

&lt;p&gt;
I always use that line to emphasize that I teach CS - a way of
thinking and problem solving and looking at the world. The languages
we use in our classes are tools to help us communicate ideas not the
ends but rather a means.
&lt;/p&gt;

&lt;p&gt;
I've spent the past couple of days at the CSTA conference. It's been a
lot of fun. I've been spending the time with old friends and meeting
new ones and as everyone who knows me knows - I love talking shop. 
&lt;/p&gt;

&lt;p&gt;
I overheard a conversation today. One CS teacher describing what they
did to a few others. I overheard:
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;
We teach Scratch then Swift and C++ and also teach Python
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
I heard statements like this describing programs more than a couple of
times. I know we're at a conference of CS Educators but even in this
community we have everything from beginners getting their feet wet to
hardcore computer scientists to everything in between.
&lt;/p&gt;

&lt;p&gt;
We shouldn't be teaching languages as an ends unto themselves and the
majority of us don't.
&lt;/p&gt;

&lt;p&gt;
What many of us do, though, is take the easy path and use the name of
a programming language to describe what we do rather than really
define what we do. This is why we hear "I teach Java" or "I teach a
class in Swift" even when the teacher teaching Java might really be
teaching Object Oriented program design and development or data
structures or something similar just using Java as the language or
tool.
&lt;/p&gt;


&lt;p&gt;
I too fall into this trap but I try to catch myself. I try not to say
"I teach Scheme" but rather I'll say "I teach Scheme. Actually, we're
studying functional programming using Scheme as the language but for
convenience, I'll just say Scheme for the rest of this talk…."
&lt;/p&gt;

&lt;p&gt;
The words we use to describe our field set the tone. If we're sloppy
and say "we teach Java," it's just like biology teacher saying "I
teach microscope." 
&lt;/p&gt;

&lt;p&gt;
As we try to define our field in the K12 space and seek equal footing
with established subject areas it's important that we use the right
language so that other educators and policy makers don't get the wrong
idea.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>cs</category><category>csed</category><category>education</category><guid>http://cestlaz.github.io/posts/languages-or-cs/</guid><pubDate>Tue, 11 Jul 2017 01:17:47 GMT</pubDate></item><item><title>A Plea to AP teachers- don't measure yourself by your scores</title><link>http://cestlaz.github.io/posts/teachers-you-arent-your-test-scores/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;div id="outline-container-org5d401c3" class="outline-2"&gt;
&lt;h2 id="org5d401c3"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org5d401c3"&gt;
&lt;p&gt;
AP scores just came out. As usual, I see the posts and take part in
conversations where teachers talk about their results. Some are happy
about their results, some aren't, some don't really care.
&lt;/p&gt;

&lt;p&gt;
I just want to make a plea to all AP teachers out there:
&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;&lt;b&gt;Don't let your value be dictated by the college board or any other
  exam.&lt;/b&gt;&lt;/b&gt;
&lt;/p&gt;

&lt;p&gt;
I never really cared much about my students' actual AP scores. There
were a number of years when I never even saw the results. Of course, I
had a population that would do reasonably well regardless of teacher
so I was never placed under any pressure to "do better." One year -
while the APCS-AB exam was still offered, my principal called me down
to discuss the results to see if we could get more kids scoring 4s and
5s (which most of the kids already did). I told him that I thought
we were doing fine, explained why I couldn't advocate more teaching to
the test (such as more than paying lip service to the case study or
more rote practice on the multiple choice), and told him how I
measured our success as a program. He was happy with my answer and
that was that. 
&lt;/p&gt;

&lt;p&gt;
The AP exam is one test on one day and in my opinion the least
valuable measure of my students' achievement. This is one of
the reasons I was so dismayed by the CSEd community's efforts in
pushing the AP exams - not the class or the subject but the actual exam.
&lt;/p&gt;

&lt;p&gt;
So, how should you judge your success? That's up to you. I can only
tell you how I judge myself.
&lt;/p&gt;

&lt;p&gt;
First and foremost - and I know this sounds cheesy - are you a "force
for good" in your student's lives. Do you leave them in a better
place? Have you opened the door to a possible future for them? Have
you helped them grow? Beyond that, have they progressed in your
subject and as students in general.
&lt;/p&gt;

&lt;p&gt;
I've had kids "fail" the AP exam and go on to wonderful careers in
tech and come back to thank me for giving them their start. I've also
had kids that have gone into other fields but appreciate what we've
done for them. I've also had my failures and I do mean my
failures. Students I couldn't reach or couldn't figure out how to
help.
&lt;/p&gt;

&lt;p&gt;
As teachers, we work day to day trying to improve but we can get a
great overview of how we're doing by using a much longer feedback
loop - looking at what our graduates are up to. When young teachers
would comment on former students coming back or running into them at
tech events that they would have graduates of their own in a few years
and invariably they do.
&lt;/p&gt;

&lt;p&gt;
To really evaluate how you're doing you have to go with the long
game. Very few people get that. I remember talking to a Google
Executive while I was designing CAPE 2010. He said something to the
effect of "I know we won't know if this program works for about ten
years but we'll have to come up with something short term to satisfy
the powers that be."  That so few "get it" and need instant feedback
is one of the reasons that our society is so test driven. We shouldn't
be. Our focus should be on helping the students learn and progress.
&lt;/p&gt;

&lt;p&gt;
So don't get distressed over AP results and don't get to high on them
either. Certainly don't use them to drive what and how you teach. Let
your students and your conscience be your guide.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>ap</category><category>apcs</category><category>csed</category><category>education</category><guid>http://cestlaz.github.io/posts/teachers-you-arent-your-test-scores/</guid><pubDate>Thu, 06 Jul 2017 21:22:10 GMT</pubDate></item></channel></rss>