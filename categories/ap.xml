<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>C'est la Z (Posts about ap)</title><link>http://cestlaz.github.io/</link><description></description><atom:link href="http://cestlaz.github.io/categories/ap.xml" type="application/rss+xml" rel="self"></atom:link><language>en</language><lastBuildDate>Thu, 04 Jan 2018 14:47:13 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>APCS-P -  Bigger Intake Or Leaky Pipe</title><link>http://cestlaz.github.io/posts/apcsp-bigger-intake-or-leaky-pipe/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;div id="outline-container-org54ac178" class="outline-2"&gt;
&lt;h2 id="org54ac178"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org54ac178"&gt;
&lt;p&gt;
Advanced Placement Computer Science got top billing on Alfred
Thompson's &lt;a href="http://blog.acthompson.net/2018/01/computer-science-education-things-im.html"&gt;Things I'm Watching in 2017&lt;/a&gt; post. Alfred talks about how
APCS-P exploded onto the scene and wonders what will happen with APCS
this year. 
&lt;/p&gt;

&lt;p&gt;
I have some questions as well but mine won't be answered for years to
come, if ever. 
&lt;/p&gt;

&lt;p&gt;
Like it or not, the College Board has an out sized influence on K12
education. As long as people are convinced that AP=good there will be
a push for more and more AP classes and APCS-P is a perfect class to
push. CS is the hot topic in K12, the topic is getting a big push
from both politicians and industry, the class has no pre-requisites
and in spite of being called a college course is somehow appropriate
for a typical tenth grader.
&lt;/p&gt;

&lt;p&gt;
The concern here is that at the end of the day. APCS-P is an exam or
rather an exam plus two other assessments. The quality can vary
greatly. I've heard of APCS-P implementations that seem pretty
rigorous and I've seen implementations that are, quite frankly, a
joke. The question is this: is APCS-P both motivating kids to go on to
the next level and just as importantly preparing them to succeed at
that level? 
&lt;/p&gt;

&lt;p&gt;
We might never know.
&lt;/p&gt;

&lt;p&gt;
A high school might only offer APCS-P. If APCS-A isn't offered, we
might not know if the student went on to take more CS and we won't
know if the student succeeded or not. I've seen this with some very
high profile, popular, after school/summer non-profits. The kids have
a great time and the non-profits rave about how much their kids learn
but then the kids take a real CS class in school and drop like
flies. Was it the teacher/professor or did the non-profit set the kids up to
fail by convincing them they knew a whole lot more than they did and
that CS was super easy all the time. 
&lt;/p&gt;

&lt;p&gt;
If credit is given for APCS-P, it looks like it will be blanket
credit. CS majors and minors will still have to take all the same classes in
college and CS so it will be very hard to tell if APCS-P is
responsible for any uptick in CS. 
&lt;/p&gt;

&lt;p&gt;
At the end of the day, the College Board is going to make a lot of
money but if APCS-P becomes the standard high school CS course will
this leave us with true, quality CS4All? I have my doubts.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>ap</category><category>cs</category><category>cs4all</category><guid>http://cestlaz.github.io/posts/apcsp-bigger-intake-or-leaky-pipe/</guid><pubDate>Mon, 01 Jan 2018 23:28:37 GMT</pubDate></item><item><title>Teaching APCS-A for the first time</title><link>http://cestlaz.github.io/posts/teaching-ap-first-time/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;div id="outline-container-orgfdc8a48" class="outline-2"&gt;
&lt;h2 id="orgfdc8a48"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgfdc8a48"&gt;
&lt;p&gt;
I got  an email from a friend the other day. Among other things, he
mentioned that he would be teaching APCS-A for the first time this
year. He's a little trepidatious. He knows his stuff but he hasn't
really done much using Java.
&lt;/p&gt;

&lt;p&gt;
I was going to respond in an email but thought I might share here
instead.
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;
TL;DR - for all you APCS teachers who are new or new to Java - learn
your core CS, lean on your resources and support and it's OK to tell
your kids "I don't know, I'll get back to you.". Don't worry, you'll be great.
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
The first time I taught APCS was some time around 1991 or 1992. It was at
&lt;a href="http://www.sewardparkhs.com/Famous-Alumni/"&gt;Seward Park&lt;/a&gt; &lt;a href="http://www.sewardparkhs.com/History/"&gt;High School&lt;/a&gt;. It was the AB curriculum - that is one
semester of programming in Pascal and one semester of Data Structures
and Algorithms.  Being a computer science major the core material was
never a concern. I had taken APCS the first time it was offered in May
1984 in Pascal and while most of my college and pre-teaching professional work
was in C, my college started it's CS sequence with Pascal. I was more
concerned with the actual teaching part. I had taught math for a year
and a half at that point but never CS and by any measure I was still
wet behind the ears. I never finished that first experience because I
was excessed to Stuy mid semester. I wasn't particularly happy with my
performance but looking back, I think I did a pretty good job given
the situation and my experience.
&lt;/p&gt;

&lt;p&gt;
After teaching math for a year and a half I was back in APCS at
Stuy. Still in Pascal. I spent the next few years figuring out how to
teach CS and APCS in particular along with starting a couple of new
classes. When the College Board decided to move the AP class to C++ I
was happy, sad and a little worried. Pascal had a bunch of limitations
but I had never used C++. True, I was a C programmer at heart but I
had never really done the OOP thing. I did, as it turned out, design a
number of my C systems in an Object Typed design: I would use a single
file per "class" where local variables were de facto instance
variables and functions in the file were methods and each file was a
singleton class. I read &lt;a href="https://www.amazon.com/Object-Oriented-Analysis-Design-Applications-3rd/dp/020189551X/ref=sr_1_1?ie=UTF8&amp;amp;qid=1503519770&amp;amp;sr=8-1&amp;amp;keywords=Grady+Booch"&gt;Booch&lt;/a&gt; and &lt;a href="https://www.amazon.com/Object-Oriented-Software-Construction-Book-CD-ROM/dp/0136291554/ref=asap_bc?ie=UTF8"&gt;Meyer&lt;/a&gt; on my own but I had no
schooling in OOP and no professional experience.
&lt;/p&gt;

&lt;p&gt;
As it turned out, I didn't have to worry. I knew my CS and while it
took me a while to become comfortable with OOP, the class, and of
course I knew this from the get go, started from nothing and built
up complexity a step at a time. The worst that might have happened is
that some of my solutions might have been more C-esque than C++.
&lt;/p&gt;

&lt;p&gt;
The move to Java was a little more jarring. Now we had a totally new
language. I couldn't fall back on C. It removed memory management and
explicit pointers and it had to be used in an Object Oriented
manner. I remember asking Mike Schidlowsky, a former student turned
friend who was the Java consultant on the Java edition of Sedgewick's
&lt;a href="https://www.amazon.com/Robert-Sedgewick-Algorithms-Fundamentals-Structures/dp/B008VR3ZH4/ref=sr_1_4?ie=UTF8&amp;amp;qid=1503520269&amp;amp;sr=8-4&amp;amp;keywords=schidlowsky"&gt;Algorithms&lt;/a&gt; book how to do something. It had to do with passing and
modifying arrays. In C there were a number of ways to accomplish what
I wanted to do. In Java, I couldn't figure out how to do it the way I
wanted. My friend Mike told me "you just don't do it that way in
Java." Again, it turned out that I didn't have to worry. The basic
coding was still the same as were the data structures and
algorithms. The only challenge was that I had to get into a Java OOP
mindset which it turned out wasn't that hard. 
&lt;/p&gt;

&lt;p&gt;
While I never really warmed up to OOP - I find other paradigms more
natural for me, I knew my CS and got more and more comfortable with
the Java (or C++) way of doing things as time wore on. Sometimes I
would say "I don't know" or "let's figure it out" but that's OK.
&lt;/p&gt;

&lt;p&gt;
Nowadays, there are many more resources available for CS teachers. If
you're new, lean on them. Use the mailing lists, stackexchange,
facebook groups. Online resources like repl.it, codehs.com etc. Yes,
it's true that you'll be better next time around and even better years
down the road but right now, you're probably better than you think.
&lt;/p&gt;

&lt;p&gt;
A number of my former students volunteer for &lt;a href="https://www.tealsk12.org/"&gt;TEALS&lt;/a&gt; - a really great
program that brings software engineers into the classroom to work with
non-CS teachers to deliver instruction. A number of my kids have
shared the following sentiment: 
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;

&lt;/p&gt;

&lt;p&gt;
I don't know if I'm really helping
the teacher to become self sufficient or if I'm a great teacher but I
do know one thing - while I'm there, the kids are getting a hell of a
lot more than if I wasn't there." 
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
â€“ Remember that as well.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>ap</category><category>apcs</category><category>cs</category><category>education</category><category>teaching</category><guid>http://cestlaz.github.io/posts/teaching-ap-first-time/</guid><pubDate>Wed, 23 Aug 2017 19:56:46 GMT</pubDate></item><item><title>The Cost of AP Exams</title><link>http://cestlaz.github.io/posts/cost-of-ap-exams/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;div id="outline-container-org8c82fc3" class="outline-2"&gt;
&lt;h2 id="org8c82fc3"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org8c82fc3"&gt;
&lt;p&gt;
Now that I'm back from vacation and summer's winding down I thought
I'd start getting back to more classroom related posts. I still have a
few summer topics I want to write about â€“ standards and side projects
in particular but I'm also looking forward to talking more about the
classroom since, after all, at my core, I'm a teacher. When I saw &lt;a href="http://www.slate.com/articles/technology/future_tense/2017/08/how_online_textbooks_could_help_more_students_take_ap_exams.html"&gt;this&lt;/a&gt;
article in my inbox this morning I thought I'd talk about it.
&lt;/p&gt;

&lt;p&gt;
In the piece, Lindsey Tepe since more kids are taking AP classes and
they're very expensive, schools should look to lower other costs
related to AP classes so as to provide financial support so that
students can take that oh so important end of year exam:
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;
While the College Board continues to reimburse about one-third of the
test cost for eligible low-income students, only about half of states
are now offering any further financial assistance for students.
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
Ms. Tepe's solution? Lower text book costs. As a way of lowering
school costs, I'm all for it. I've used free online resources in lieu
of textbooks for years but the savings should go somewhere where it
can make a difference. Perhaps lowering class sizes. The fatal flaw in
Ms. Teps's piece is that it continues spinning the misplaced narrative
that AP Exams are a very important part of a child's education.
&lt;/p&gt;

&lt;p&gt;
Let's be reminded of something: The AP Exam is one thing - an exam - a
single test at the end of the year. 
&lt;/p&gt;

&lt;p&gt;
The narrative is that students should take more and more AP classes,
that they're somehow better for kids. Part of this is due to the
potential college credit and part is because the public has been
bamboozled by the ridiculous school ratings that give credit for AP
classes taken. Back in "the day," AP classes were basically early
college. You could then argue that they were the most rigorous classes
offered in a school. AP Calc was basically college Calc. Same for
APCS-AB, AP-Bio and the rest. Now, with classes like APCS-P aimed to
be accessible to typical high school students in the lower grades,
they can't (but still will) make that claim. In fact, at Stuy, my
former school, there are plenty of non AP classes that are more
rigorous than AP classes and the best AP teachers don't always cover
the whole syllabus because they're more concerned with their students
actually learning rather than scoring 5 on an exam.
&lt;/p&gt;

&lt;p&gt;
On the college credit front, if a student has a high probability of
saving money through AP credit then I'm all for it but otherwise, it's
just money going to the college board.
&lt;/p&gt;

&lt;p&gt;
It seems ridiculous for me to have to write this but the important
part of a class is, you know, the class. Not the single exam given by
an outside agency at the end and graded after the semester concludes.
&lt;/p&gt;

&lt;p&gt;
My suggestion? Offer college level work to students that are ready for
it but don't push the AP exam. This would save a ton of money. What value
does the college board actually bring to the table? Remember, they're
making a pretty penny on all of this testing. A math teacher should be
able to teach calculus with or without AP. A good text being used by
that teacher in class - be it free or paid for is actually much more
important to a student learning calculus than a single exam taken at
the end of the year. I'd go further and say that I'd trust the
teacher's exam more than the college board's. If a teacher knows the
math but needs to see some sample syllabi, they're a web search
way. The same is true for most other college courses that have AP
equivalents and maybe even more so for computer science.
&lt;/p&gt;

&lt;p&gt;
At the end of the day it should be about students learning not about
students taking high stakes exams.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>ap</category><category>csed</category><category>education</category><category>policy</category><guid>http://cestlaz.github.io/posts/cost-of-ap-exams/</guid><pubDate>Thu, 17 Aug 2017 11:07:12 GMT</pubDate></item><item><title>A Plea to AP teachers- don't measure yourself by your scores</title><link>http://cestlaz.github.io/posts/teachers-you-arent-your-test-scores/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;div id="outline-container-orgf360c56" class="outline-2"&gt;
&lt;h2 id="orgf360c56"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgf360c56"&gt;
&lt;p&gt;
AP scores just came out. As usual, I see the posts and take part in
conversations where teachers talk about their results. Some are happy
about their results, some aren't, some don't really care.
&lt;/p&gt;

&lt;p&gt;
I just want to make a plea to all AP teachers out there:
&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;&lt;b&gt;Don't let your value be dictated by the college board or any other
  exam.&lt;/b&gt;&lt;/b&gt;
&lt;/p&gt;

&lt;p&gt;
I never really cared much about my students' actual AP scores. There
were a number of years when I never even saw the results. Of course, I
had a population that would do reasonably well regardless of teacher
so I was never placed under any pressure to "do better." One year -
while the APCS-AB exam was still offered, my principal called me down
to discuss the results to see if we could get more kids scoring 4s and
5s (which most of the kids already did). I told him that I thought
we were doing fine, explained why I couldn't advocate more teaching to
the test (such as more than paying lip service to the case study or
more rote practice on the multiple choice), and told him how I
measured our success as a program. He was happy with my answer and
that was that. 
&lt;/p&gt;

&lt;p&gt;
The AP exam is one test on one day and in my opinion the least
valuable measure of my students' achievement. This is one of
the reasons I was so dismayed by the CSEd community's efforts in
pushing the AP exams - not the class or the subject but the actual exam.
&lt;/p&gt;

&lt;p&gt;
So, how should you judge your success? That's up to you. I can only
tell you how I judge myself.
&lt;/p&gt;

&lt;p&gt;
First and foremost - and I know this sounds cheesy - are you a "force
for good" in your student's lives. Do you leave them in a better
place? Have you opened the door to a possible future for them? Have
you helped them grow? Beyond that, have they progressed in your
subject and as students in general.
&lt;/p&gt;

&lt;p&gt;
I've had kids "fail" the AP exam and go on to wonderful careers in
tech and come back to thank me for giving them their start. I've also
had kids that have gone into other fields but appreciate what we've
done for them. I've also had my failures and I do mean my
failures. Students I couldn't reach or couldn't figure out how to
help.
&lt;/p&gt;

&lt;p&gt;
As teachers, we work day to day trying to improve but we can get a
great overview of how we're doing by using a much longer feedback
loop - looking at what our graduates are up to. When young teachers
would comment on former students coming back or running into them at
tech events that they would have graduates of their own in a few years
and invariably they do.
&lt;/p&gt;

&lt;p&gt;
To really evaluate how you're doing you have to go with the long
game. Very few people get that. I remember talking to a Google
Executive while I was designing CAPE 2010. He said something to the
effect of "I know we won't know if this program works for about ten
years but we'll have to come up with something short term to satisfy
the powers that be."  That so few "get it" and need instant feedback
is one of the reasons that our society is so test driven. We shouldn't
be. Our focus should be on helping the students learn and progress.
&lt;/p&gt;

&lt;p&gt;
So don't get distressed over AP results and don't get to high on them
either. Certainly don't use them to drive what and how you teach. Let
your students and your conscience be your guide.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>ap</category><category>apcs</category><category>csed</category><category>education</category><guid>http://cestlaz.github.io/posts/teachers-you-arent-your-test-scores/</guid><pubDate>Thu, 06 Jul 2017 21:22:10 GMT</pubDate></item></channel></rss>