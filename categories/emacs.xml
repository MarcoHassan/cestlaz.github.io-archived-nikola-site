<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>C'est la Z (emacs)</title><link>http://cestlaz.github.io/</link><description></description><atom:link type="application/rss+xml" rel="self" href="http://cestlaz.github.io/categories/emacs.xml"></atom:link><language>en</language><lastBuildDate>Thu, 09 Feb 2017 17:37:25 GMT</lastBuildDate><generator>https://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Using Emacs - 28 -Rectangles</title><link>http://cestlaz.github.io/posts/using-emacs-27-rectangles/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;p&gt;
One of my favorite but little used emacs features is rectangular
editing. It's little used because I don't need it all that often. It's
one of my favorites because when I do need it, it's just so amazingly
useful.
&lt;/p&gt;

&lt;p&gt;
The idea is you can mark a rectangle of text, cut it and later paste
it.  This means that if you have three columns of text:
&lt;/p&gt;

&lt;pre class="example"&gt;
a b c
d e f
g h i
j k l
&lt;/pre&gt;

&lt;p&gt;
You can easily mark the middle column (b e h k) or even just the b e
and h, cut it and paste it elsewhere as a rectangle. You can also open
up a rectangular region (filled with whitespace). There are a couple
of other niceties but that's the basic idea.
&lt;/p&gt;

&lt;p&gt;
Here's a link to all the functions:
&lt;/p&gt;

&lt;p&gt;
&lt;a href="https://www.gnu.org/software/emacs/manual/html_node/emacs/Rectangles.html"&gt;https://www.gnu.org/software/emacs/manual/html_node/emacs/Rectangles.html&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-sec-2" class="outline-2"&gt;
&lt;h2 id="sec-2"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-2"&gt;
&lt;p&gt;
And the video:
&lt;/p&gt;

&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/pcA5NeEudgU" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;
Enjoy.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-sec-3" class="outline-2"&gt;
&lt;h2 id="sec-3"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-3"&gt;
&lt;p&gt;
Relevant links:
&lt;/p&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Video series overview page:
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="http://cestlaz.github.io/stories/emacs"&gt;http://cestlaz.github.io/stories/emacs&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Code:
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="https://github.com/zamansky/using-emacs/tree/master"&gt;&lt;/a&gt;&lt;a href="https://github.com/zamansky/using-emacs/tree/master"&gt;https://github.com/zamansky/using-emacs/tree/master&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>emacs</category><category>tools</category><guid>http://cestlaz.github.io/posts/using-emacs-27-rectangles/</guid><pubDate>Thu, 09 Feb 2017 13:00:26 GMT</pubDate></item><item><title>Using Emacs - 27 - shell and eshell</title><link>http://cestlaz.github.io/posts/using-emacs-27-shell/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;p&gt;
While I use emacs for all all sorts of things, one of the things I
haven't done much is run shells from within emacs. I'm not sure
why. I'm a command line wonk and adding command line goodness and
emacs together seems like a natural. Maybe it's because back in the
day I spent a lot of time on MS-DOS systems. You could get a
reasonable Unixy facsimile using tools like the &lt;a href="https://en.wikipedia.org/wiki/MKS_Toolkit"&gt;MKS toolkit&lt;/a&gt; and I like
so many other young computer scientists wrote our own small shells
when we learned C so I used that insted of command.com. 
&lt;/p&gt;

&lt;p&gt;
In any event, I'm trying to use the shell within emacs more. 
&lt;/p&gt;

&lt;p&gt;
Here's a quick video showing both &lt;b&gt;&lt;b&gt;shell&lt;/b&gt;&lt;/b&gt;, which runs whatever your
default shell is in an emacs buffer and &lt;b&gt;&lt;b&gt;eshell&lt;/b&gt;&lt;/b&gt; which is emacs own
shell.
&lt;/p&gt;

&lt;p&gt;
I use a couple of packages to smooth over a couple of things.
&lt;/p&gt;

&lt;p&gt;
&lt;a href="https://github.com/porterjamesj/virtualenvwrapper.el"&gt;Virtuelenvwrapper&lt;/a&gt; smooths things voer with the python virtaulenv and
virtualenvwrapper linux packages:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;use-package&lt;/span&gt; &lt;span class="nv"&gt;virtualenvwrapper&lt;/span&gt;
      &lt;span class="nv"&gt;:ensure&lt;/span&gt; &lt;span class="nv"&gt;t&lt;/span&gt;
      &lt;span class="nv"&gt;:config&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;venv-initialize-interactive-shells&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;venv-initialize-eshell&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Only relevant if you use Python and virtualenvs.
&lt;/p&gt;

&lt;p&gt;
and more importantly, &lt;a href="https://github.com/killdash9/better-shell"&gt;better shell&lt;/a&gt;:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;use-package&lt;/span&gt; &lt;span class="nv"&gt;better-shell&lt;/span&gt;
    &lt;span class="nv"&gt;:ensure&lt;/span&gt; &lt;span class="nv"&gt;t&lt;/span&gt;
    &lt;span class="nv"&gt;:bind&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s"&gt;"C-'"&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;better-shell-shell&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	   &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"C-;"&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;better-shell-remote-open&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
cleans things up when using a termianl to connect to a remote machine.
&lt;/p&gt;

&lt;p&gt;
If you use a shell from within emacs as part of your workflow, please
post how, or better, make a video!!!!
&lt;/p&gt;

&lt;p&gt;
Enjoy
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;div id="outline-container-sec-2" class="outline-2"&gt;
&lt;h2 id="sec-2"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-2"&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/pjhRFMUxBB4" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-3" class="outline-2"&gt;
&lt;h2 id="sec-3"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-3"&gt;
&lt;p&gt;
Relevant links:
&lt;/p&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Video series overview page:
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="http://cestlaz.github.io/stories/emacs"&gt;http://cestlaz.github.io/stories/emacs&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Code:
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="https://github.com/zamansky/using-emacs/tree/master"&gt;&lt;/a&gt;&lt;a href="https://github.com/zamansky/using-emacs/tree/master"&gt;https://github.com/zamansky/using-emacs/tree/master&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>emacs</category><category>tools</category><guid>http://cestlaz.github.io/posts/using-emacs-27-shell/</guid><pubDate>Fri, 27 Jan 2017 13:00:26 GMT</pubDate></item><item><title>Using Emacs - 26 - Google Calendar, Org Agenda</title><link>http://cestlaz.github.io/posts/using-emacs-26-gcal/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;p&gt;
A while ago I did a couple of videos on how I use org-capture
(&lt;a href="http://cestlaz.github.io/posts/using-emacs-23-capture-1/"&gt;part 1&lt;/a&gt;, &lt;a href="http://cestlaz.github.io/posts/using-emacs-24-capture-2/"&gt;part 2&lt;/a&gt;). I didn't get into a big part of org-capture - how I
use org-mode and capture to manage my calendar and todo lists.
&lt;/p&gt;

&lt;p&gt;
I was waiting to see if I liked my current setup - using &lt;a href="https://github.com/myuhe/org-gcal.el"&gt;org-gcal&lt;/a&gt; to
sync with my Google Calendar for appointments while using my main org
file for my todo list.
&lt;/p&gt;

&lt;p&gt;
Coincidentally, Rainer KÃ¶nig recently put up a video on how he &lt;a href="https://www.youtube.com/watch?v=cIzzjSaq2N8&amp;amp;list=PLVtKhBrRV_ZkPnBtt_TD1Cs9PJlU0IIdE&amp;amp;index=33"&gt;syncs
with his Google calendar&lt;/a&gt;. He uses a different method than the one I
present in this video so make sure to check out his approach. In fact,
you should check out his entire &lt;a href="https://www.youtube.com/playlist?list=PLVtKhBrRV_ZkPnBtt_TD1Cs9PJlU0IIdE"&gt;series on org-mode&lt;/a&gt;.
&lt;/p&gt;

&lt;p&gt;
Here's the code I use install org-gcal. The video steps through
setting up things on the Google side. You'll have to replace the
&lt;b&gt;&lt;b&gt;client ID&lt;/b&gt;&lt;/b&gt; and &lt;b&gt;&lt;b&gt;client secrets&lt;/b&gt;&lt;/b&gt; in the code below as well as use
your calendar name and whatever org file you want to sync with.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;package-check-signature&lt;/span&gt; &lt;span class="nv"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;use-package&lt;/span&gt; &lt;span class="nv"&gt;org-gcal&lt;/span&gt;
  &lt;span class="nv"&gt;:ensure&lt;/span&gt; &lt;span class="nv"&gt;t&lt;/span&gt;
  &lt;span class="nv"&gt;:config&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;org-gcal-client-id&lt;/span&gt; &lt;span class="s"&gt;"oauth 2.0 client ID"&lt;/span&gt;
	&lt;span class="nv"&gt;org-gcal-client-secret&lt;/span&gt; &lt;span class="s"&gt;"client secret"&lt;/span&gt;
	&lt;span class="nv"&gt;org-gcal-file-alist&lt;/span&gt; &lt;span class="o"&gt;'&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s"&gt;"zamansky@gmail.com"&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;  &lt;span class="s"&gt;"~/Dropbox/orgfiles/gcal.org"&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
I use these two hooks to sync things semi-automatically. The first
hook syncs whenever I load the agenda. Since this happens in the
background, if I just added something to my calendar, I might have to
reload the agenda by hitting &lt;b&gt;&lt;b&gt;r&lt;/b&gt;&lt;/b&gt; in the agenda view. 
&lt;/p&gt;

&lt;p&gt;
The second hook syncs with my Google calendar when I capture.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;add-hook&lt;/span&gt; &lt;span class="ss"&gt;'org-agenda-mode-hook&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda &lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;org-gcal-sync&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;add-hook&lt;/span&gt; &lt;span class="ss"&gt;'org-capture-after-finalize-hook&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda &lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;org-gcal-sync&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Here are the rest of my settings. The org files I want to include in
my agenda views:
&lt;/p&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;gcal.org â the one I'm syncing
&lt;/li&gt;
&lt;li&gt;i.org â my main org file for todo items (the todo capture places
things in here)
&lt;/li&gt;
&lt;li&gt;schedule.org â my old schedule before I was syncing with
Google. Not active anymore. I should probably remove it.
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
Also, my capture settings:
&lt;/p&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;org-agenda-files&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;list &lt;/span&gt;&lt;span class="s"&gt;"~/Dropbox/orgfiles/gcal.org"&lt;/span&gt;
			     &lt;span class="s"&gt;"~/Dropbox/orgfiles/i.org"&lt;/span&gt;
			     &lt;span class="s"&gt;"~/Dropbox/orgfiles/schedule.org"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;


&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;org-capture-templates&lt;/span&gt;
      &lt;span class="o"&gt;'&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s"&gt;"a"&lt;/span&gt; &lt;span class="s"&gt;"Appointment"&lt;/span&gt; &lt;span class="nv"&gt;entry&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;file&lt;/span&gt;  &lt;span class="s"&gt;"~/Dropbox/orgfiles/gcal.org"&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
	 &lt;span class="s"&gt;"* %?\n\n%^T\n\n:PROPERTIES:\n\n:END:\n\n"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"l"&lt;/span&gt; &lt;span class="s"&gt;"Link"&lt;/span&gt; &lt;span class="nv"&gt;entry&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;file+headline&lt;/span&gt; &lt;span class="s"&gt;"~/Dropbox/orgfiles/links.org"&lt;/span&gt; &lt;span class="s"&gt;"Links"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	 &lt;span class="s"&gt;"* %? %^L %^g \n%T"&lt;/span&gt; &lt;span class="nv"&gt;:prepend&lt;/span&gt; &lt;span class="nv"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"b"&lt;/span&gt; &lt;span class="s"&gt;"Blog idea"&lt;/span&gt; &lt;span class="nv"&gt;entry&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;file+headline&lt;/span&gt; &lt;span class="s"&gt;"~/Dropbox/orgfiles/i.org"&lt;/span&gt; &lt;span class="s"&gt;"Blog Topics:"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	 &lt;span class="s"&gt;"* %?\n%T"&lt;/span&gt; &lt;span class="nv"&gt;:prepend&lt;/span&gt; &lt;span class="nv"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"t"&lt;/span&gt; &lt;span class="s"&gt;"To Do Item"&lt;/span&gt; &lt;span class="nv"&gt;entry&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;file+headline&lt;/span&gt; &lt;span class="s"&gt;"~/Dropbox/orgfiles/i.org"&lt;/span&gt; &lt;span class="s"&gt;"To Do"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	 &lt;span class="s"&gt;"* TODO %?\n%u"&lt;/span&gt; &lt;span class="nv"&gt;:prepend&lt;/span&gt; &lt;span class="nv"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"n"&lt;/span&gt; &lt;span class="s"&gt;"Note"&lt;/span&gt; &lt;span class="nv"&gt;entry&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;file+headline&lt;/span&gt; &lt;span class="s"&gt;"~/Dropbox/orgfiles/i.org"&lt;/span&gt; &lt;span class="s"&gt;"Note space"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	 &lt;span class="s"&gt;"* %?\n%u"&lt;/span&gt; &lt;span class="nv"&gt;:prepend&lt;/span&gt; &lt;span class="nv"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"j"&lt;/span&gt; &lt;span class="s"&gt;"Journal"&lt;/span&gt; &lt;span class="nv"&gt;entry&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;file+datetree&lt;/span&gt; &lt;span class="s"&gt;"~/Dropbox/journal.org"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	 &lt;span class="s"&gt;"* %?\nEntered on %U\n  %i\n  %a"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"s"&lt;/span&gt; &lt;span class="s"&gt;"Screencast"&lt;/span&gt; &lt;span class="nv"&gt;entry&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;file&lt;/span&gt; &lt;span class="s"&gt;"~/Dropbox/orgfiles/screencastnotes.org"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	 &lt;span class="s"&gt;"* %?\n%i\n"&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;



&lt;p&gt;
The end result is that I can add an event in my Google calendar (or
accept a calendar invite) and it appears in my org-mode
agenda. Likewise, I can add a scheduled event using capture and it
will sync up to Google. I can also just add an event by editing
gcal.org but then would have to run &lt;b&gt;&lt;b&gt;org-gcal-post-at-point&lt;/b&gt;&lt;/b&gt; to send
it up to Google.
&lt;/p&gt;

&lt;p&gt;
Now, I can use bring up a regular agenda &lt;b&gt;&lt;b&gt;C-a a&lt;/b&gt;&lt;/b&gt;, my todo list &lt;b&gt;&lt;b&gt;C-a
t&lt;/b&gt;&lt;/b&gt; or by adding a custom agenda command:
&lt;/p&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;org-agenda-custom-commands&lt;/span&gt;
      &lt;span class="o"&gt;'&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s"&gt;"c"&lt;/span&gt; &lt;span class="s"&gt;"Simple agenda view"&lt;/span&gt;
	 &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nf"&gt;agenda&lt;/span&gt; &lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;alltodo&lt;/span&gt; &lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;)))))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
a combined agenda and todo view using &lt;b&gt;&lt;b&gt;C-a n&lt;/b&gt;&lt;/b&gt;
&lt;/p&gt;


&lt;p&gt;
Finally, there's &lt;a href="https://github.com/kiwanami/emacs-calfw"&gt;calfw&lt;/a&gt;. It's a nice tool to view calendars in
Google. I don't use it much anymore but it is nice:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;use-package&lt;/span&gt; &lt;span class="nv"&gt;calfw&lt;/span&gt;
  &lt;span class="nv"&gt;:ensure&lt;/span&gt; &lt;span class="c1"&gt;;TODO: &lt;/span&gt;
  &lt;span class="nv"&gt;:config&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;require&lt;/span&gt; &lt;span class="ss"&gt;'calfw&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;require&lt;/span&gt; &lt;span class="ss"&gt;'calfw-org&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;cfw:org-overwrite-default-keybinding&lt;/span&gt; &lt;span class="nv"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;require&lt;/span&gt; &lt;span class="ss"&gt;'calfw-ical&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;defun&lt;/span&gt; &lt;span class="nv"&gt;mycalendar&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;interactive&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;cfw:open-calendar-buffer&lt;/span&gt;
     &lt;span class="nv"&gt;:contents-sources&lt;/span&gt;
     &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;list&lt;/span&gt;
      &lt;span class="c1"&gt;;; (cfw:org-create-source "Green")  ; orgmode source&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;cfw:ical-create-source&lt;/span&gt; &lt;span class="s"&gt;"gcal"&lt;/span&gt; &lt;span class="s"&gt;"https://somecalnedaraddress"&lt;/span&gt; &lt;span class="s"&gt;"IndianRed"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;; devorah calender&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;cfw:ical-create-source&lt;/span&gt; &lt;span class="s"&gt;"gcal"&lt;/span&gt; &lt;span class="s"&gt;"https://anothercalendaraddress"&lt;/span&gt; &lt;span class="s"&gt;"IndianRed"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;; google calendar ICS&lt;/span&gt;
      &lt;span class="p"&gt;)))&lt;/span&gt; 
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;cfw:org-overwrite-default-keybinding&lt;/span&gt; &lt;span class="nv"&gt;t&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;use-package&lt;/span&gt; &lt;span class="nv"&gt;calfw-gcal&lt;/span&gt;
	&lt;span class="nv"&gt;:ensure&lt;/span&gt; &lt;span class="nv"&gt;t&lt;/span&gt;
	&lt;span class="nv"&gt;:config&lt;/span&gt;
	&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;require&lt;/span&gt; &lt;span class="ss"&gt;'calfw-gcal&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;
Enjoy.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;div id="outline-container-sec-2" class="outline-2"&gt;
&lt;h2 id="sec-2"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-2"&gt;
&lt;p&gt;
Better version:
&lt;/p&gt;

&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/vO_RF2dK7M0" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;
Old, bad version:
&lt;/p&gt;

&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/RyNBtfu9AJ4" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-3" class="outline-2"&gt;
&lt;h2 id="sec-3"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-3"&gt;
&lt;p&gt;
Relevant links:
&lt;/p&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Video series overview page:
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="http://cestlaz.github.io/stories/emacs"&gt;http://cestlaz.github.io/stories/emacs&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Code:
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="https://github.com/zamansky/using-emacs/tree/master"&gt;&lt;/a&gt;&lt;a href="https://github.com/zamansky/using-emacs/tree/master"&gt;https://github.com/zamansky/using-emacs/tree/master&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>emacs</category><category>tools</category><guid>http://cestlaz.github.io/posts/using-emacs-26-gcal/</guid><pubDate>Thu, 05 Jan 2017 15:00:26 GMT</pubDate></item><item><title>Using Emacs - 25 - Tramp</title><link>http://cestlaz.github.io/posts/using-emacs-25-tramp/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;p&gt;
Today's video talks about using emacs &lt;a href="https://www.emacswiki.org/emacs/TrampMode"&gt;Tramp&lt;/a&gt; mode.
&lt;/p&gt;

&lt;p&gt;
Tramp mode allows you to edit remote files using your local emacs. I usually do this over ssh.
&lt;/p&gt;

&lt;p&gt;
To edit a file on a machine &lt;b&gt;&lt;b&gt;www.cstuy.org&lt;/b&gt;&lt;/b&gt; I would first
&lt;b&gt;&lt;b&gt;find-file&lt;/b&gt;&lt;/b&gt; using &lt;b&gt;&lt;b&gt;C-c C-f&lt;/b&gt;&lt;/b&gt; and then for the file name to open:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/ssh:www.cstuy.org:/home/zamansky/sc/testfile
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
this would open the file &lt;b&gt;&lt;b&gt;testfile&lt;/b&gt;&lt;/b&gt; in the absolute directory
&lt;b&gt;&lt;b&gt;/home/zamansky/sc&lt;/b&gt;&lt;/b&gt;. If my username on the remote machine is
different:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/ssh:username@www.cstuy.org:/home/zamansky/sc/testfile
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
And I can also work relative to my home directory:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/ssh:username@www.cstuy.org:sc/testfile
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
If I just hit enter after the machine name and &lt;b&gt;&lt;b&gt;:&lt;/b&gt;&lt;/b&gt; - 
&lt;/p&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/ssh:username@www.cstuy.org:
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
I end up in a dired buffer on the remote machine.
&lt;/p&gt;

&lt;p&gt;
Likewise if I run a &lt;b&gt;&lt;b&gt;shell&lt;/b&gt;&lt;/b&gt; or &lt;b&gt;&lt;b&gt;eshell&lt;/b&gt;&lt;/b&gt; in the tramp buffer, it
will run the shell on the remote machine. In the video I showed how
shell didn't work because locally, I'm configured to use zsh and I
don't have zsh installed remotely. Eshell, however, worked fine.
&lt;/p&gt;

&lt;p&gt;
Using tramp in this way gives us all of the power of our local emacs
configuration to edit a file on a remote machine.
&lt;/p&gt;

&lt;p&gt;
You can also use tramp to edit local files as root using sudo:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo::/tmp/sc/rootfile
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Note the double colon. 
&lt;/p&gt;

&lt;p&gt;
Finally, you can do the double-whammy - remote root editing:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ssh::www.cstu.org|sudo:www.cstuy.org:/home/zamansky/sc/rootfile
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;
If you use zsh and any of this freezes, just do a search on "zsh
tramp" and the top couple of hits will tell you what to add to your
configuration files to fix things.
&lt;/p&gt;

&lt;p&gt;
Finally, I mentioned in the video that I don't use tramp all that much
anymore. That's mostly because I don't do much remote editing
anymore. I used it more when I was administering a number of machines
at Stuyvesant. 
&lt;/p&gt;

&lt;p&gt;
I still use it periodically, but I also use &lt;a href="https://github.com/libfuse/sshfs"&gt;sshfs&lt;/a&gt;, a Linux tool (which
may be available for other operating systems) that allows me to mount
a directory tree from a remote machine and use it on my local machine.
&lt;/p&gt;



&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/Iqh50fgbIVk" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;




&lt;div id="outline-container-sec-2" class="outline-2"&gt;
&lt;h2 id="sec-2"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-2"&gt;
&lt;p&gt;
Relevant links:
&lt;/p&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Video series overview page:
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="http://cestlaz.github.io/stories/emacs"&gt;http://cestlaz.github.io/stories/emacs&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Code:
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="https://github.com/zamansky/using-emacs/tree/master"&gt;&lt;/a&gt;&lt;a href="https://github.com/zamansky/using-emacs/tree/master"&gt;https://github.com/zamansky/using-emacs/tree/master&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>emacs</category><category>tools</category><guid>http://cestlaz.github.io/posts/using-emacs-25-tramp/</guid><pubDate>Mon, 26 Dec 2016 15:00:26 GMT</pubDate></item><item><title>Using Emacs - 24 - Org Capture 2</title><link>http://cestlaz.github.io/posts/using-emacs-24-capture-2/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;p&gt;
Not much in today's actual post. The video is a continuation of the last one on &lt;a href="http://cestlaz.github.io/posts/using-emacs-23-capture-1"&gt;org-capture&lt;/a&gt;.
&lt;/p&gt;

&lt;p&gt;
The video goes over how I set things up to pop up a new frame to do a
capture even if emacs isn't on screen (as long as it's running) by
hitting &lt;b&gt;&lt;b&gt;F1&lt;/b&gt;&lt;/b&gt;. I would  have preferred to bind to &lt;b&gt;&lt;b&gt;C-c c&lt;/b&gt;&lt;/b&gt; - the
same as within emacs but I havn't figured out how to do that in Ubuntu
or Mint Linux yet.
&lt;/p&gt;

&lt;p&gt;
Here's the elisp code for the configuration file to do the heavy
lifting. I can't for th elife of me remember who's blog I found it
on. If anyone knows, please leave a comment - I'd like to give credit
where credit's due:
&lt;/p&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;(defadvice org-capture-finalize 
    (after delete-capture-frame activate)  
  "Advise capture-finalize to close the frame"  
  (if (equal "capture" (frame-parameter nil 'name))  
    (delete-frame)))

(defadvice org-capture-destroy 
    (after delete-capture-frame activate)  
  "Advise capture-destroy to close the frame"  
  (if (equal "capture" (frame-parameter nil 'name))  
    (delete-frame)))  

(use-package noflet
  :ensure t )
(defun make-capture-frame ()
  "Create a new frame and run org-capture."
  (interactive)
  (make-frame '((name . "capture")))
  (select-frame-by-name "capture")
  (delete-other-windows)
  (noflet ((switch-to-buffer-other-window (buf) (switch-to-buffer buf)))
    (org-capture)))
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
The command I bind to the keyboard shortcut in my window manager:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;emacsclient -ne "(make-capture-frame)"
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
There will be a third capture video in a few weeks where I'll talk
about scheduling and agendas. Right now, I'm playing with org-gcal to
sync with my Google calendar and want to figure out a config I'm happy
with before making that video.
&lt;/p&gt;

&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/gjr9mP01oWE" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;div id="outline-container-sec-2" class="outline-2"&gt;
&lt;h2 id="sec-2"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-2"&gt;
&lt;p&gt;
Relevant links:
&lt;/p&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Video series overview page:
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="http://cestlaz.github.io/stories/emacs"&gt;http://cestlaz.github.io/stories/emacs&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Code:
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="https://github.com/zamansky/using-emacs/tree/master"&gt;&lt;/a&gt;&lt;a href="https://github.com/zamansky/using-emacs/tree/master"&gt;https://github.com/zamansky/using-emacs/tree/master&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>emacs</category><category>tools</category><guid>http://cestlaz.github.io/posts/using-emacs-24-capture-2/</guid><pubDate>Sat, 03 Dec 2016 20:45:26 GMT</pubDate></item><item><title>Using Emacs - 23 - Org Capture 1</title><link>http://cestlaz.github.io/posts/using-emacs-23-capture-1/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;p&gt;
Org mode has an amazing feature - &lt;b&gt;&lt;b&gt;org-capture&lt;/b&gt;&lt;/b&gt;. I only started
using it recently but it's really awesome. 
&lt;/p&gt;

&lt;p&gt;
What took me so long?
&lt;/p&gt;

&lt;p&gt;
Probably that the manual seemed a little intimidating. 
&lt;/p&gt;

&lt;p&gt;
It really isn't hard, though. Combined with what I'll go over in the
next video and post (and a future one for Google calendar sync) it's
what I use for:
&lt;/p&gt;

&lt;ul class="org-ul"&gt;
&lt;li&gt;recording blog ideas
&lt;/li&gt;
&lt;li&gt;managing bookmarks
&lt;/li&gt;
&lt;li&gt;taking short Notes
&lt;/li&gt;
&lt;li&gt;managing my calendar.
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
I use the binding:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;global-set-key&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;kbd&lt;/span&gt; &lt;span class="s"&gt;"C-c c"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
       &lt;span class="ss"&gt;'org-capture&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
By default, running org-capture brings up a form to capture a "task"
but things get really cool when you start making your own capture
templates. With capture templates, you can speed up recording
information and then tell org-mode to store it where you want it.
&lt;/p&gt;

&lt;p&gt;
Here are my template settings. 
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;org-capture-templates&lt;/span&gt;
      &lt;span class="o"&gt;'&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s"&gt;"a"&lt;/span&gt; &lt;span class="s"&gt;"Appointment"&lt;/span&gt; &lt;span class="nv"&gt;entry&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;file&lt;/span&gt;  &lt;span class="s"&gt;"~/Dropbox/orgfiles/gcal.org"&lt;/span&gt; &lt;span class="s"&gt;"Appointments"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	 &lt;span class="s"&gt;"* TODO %?\n:PROPERTIES:\n\n:END:\nDEADLINE: %^T \n %i\n"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"n"&lt;/span&gt; &lt;span class="s"&gt;"Note"&lt;/span&gt; &lt;span class="nv"&gt;entry&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;file+headline&lt;/span&gt; &lt;span class="s"&gt;"~/Dropbox/orgfiles/notes.org"&lt;/span&gt; &lt;span class="s"&gt;"Notes"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	 &lt;span class="s"&gt;"* Note %?\n%T"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"l"&lt;/span&gt; &lt;span class="s"&gt;"Link"&lt;/span&gt; &lt;span class="nv"&gt;entry&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;file+headline&lt;/span&gt; &lt;span class="s"&gt;"~/Dropbox/orgfiles/links.org"&lt;/span&gt; &lt;span class="s"&gt;"Links"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	 &lt;span class="s"&gt;"* %? %^L %^g \n%T"&lt;/span&gt; &lt;span class="nv"&gt;:prepend&lt;/span&gt; &lt;span class="nv"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"b"&lt;/span&gt; &lt;span class="s"&gt;"Blog idea"&lt;/span&gt; &lt;span class="nv"&gt;entry&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;file+headline&lt;/span&gt; &lt;span class="s"&gt;"~/Dropbox/orgfiles/i.org"&lt;/span&gt; &lt;span class="s"&gt;"Blog Topics:"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	 &lt;span class="s"&gt;"* %?\n%T"&lt;/span&gt; &lt;span class="nv"&gt;:prepend&lt;/span&gt; &lt;span class="nv"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"t"&lt;/span&gt; &lt;span class="s"&gt;"To Do Item"&lt;/span&gt; &lt;span class="nv"&gt;entry&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;file+headline&lt;/span&gt; &lt;span class="s"&gt;"~/Dropbox/orgfiles/i.org"&lt;/span&gt; &lt;span class="s"&gt;"To Do Items"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	 &lt;span class="s"&gt;"* %?\n%T"&lt;/span&gt; &lt;span class="nv"&gt;:prepend&lt;/span&gt; &lt;span class="nv"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"j"&lt;/span&gt; &lt;span class="s"&gt;"Journal"&lt;/span&gt; &lt;span class="nv"&gt;entry&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;file+datetree&lt;/span&gt; &lt;span class="s"&gt;"~/Dropbox/journal.org"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	 &lt;span class="s"&gt;"* %?\nEntered on %U\n  %i\n  %a"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"s"&lt;/span&gt; &lt;span class="s"&gt;"Screencast"&lt;/span&gt; &lt;span class="nv"&gt;entry&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;file&lt;/span&gt; &lt;span class="s"&gt;"~/Dropbox/orgfiles/screencastnotes.org"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	 &lt;span class="s"&gt;"* %?\n%i\n"&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Let's look at the &lt;b&gt;&lt;b&gt;Blog&lt;/b&gt;&lt;/b&gt; entry:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"b"&lt;/span&gt; &lt;span class="s"&gt;"Blog idea"&lt;/span&gt; &lt;span class="nv"&gt;entry&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;file+headline&lt;/span&gt; &lt;span class="s"&gt;"~/Dropbox/orgfiles/i.org"&lt;/span&gt; &lt;span class="s"&gt;"Blog Topics:"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="s"&gt;"* %?\n%T"&lt;/span&gt; &lt;span class="nv"&gt;:prepend&lt;/span&gt; &lt;span class="nv"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;
It's a list with a bunch of options. The first string &lt;b&gt;&lt;b&gt;b&lt;/b&gt;&lt;/b&gt; is the
key to type to select this template, &lt;b&gt;&lt;b&gt;Blog idea&lt;/b&gt;&lt;/b&gt; is the actual name
for this template. 
&lt;/p&gt;

&lt;p&gt;
The next item, &lt;b&gt;&lt;b&gt;entry&lt;/b&gt;&lt;/b&gt; describes the type of template you're
creating. &lt;b&gt;&lt;b&gt;entry&lt;/b&gt;&lt;/b&gt; says you're going to create an org node with a
headline which can then be added to an org-file. You can also have
your template create things like an org list &lt;b&gt;&lt;b&gt;item&lt;/b&gt;&lt;/b&gt; a checkbox
&lt;b&gt;&lt;b&gt;checkitem&lt;/b&gt;&lt;/b&gt; or even &lt;b&gt;&lt;b&gt;plain&lt;/b&gt;&lt;/b&gt; text. You can see the full set of
options &lt;a href="http://orgmode.org/manual/Template-elements.html#Template-elements"&gt;here&lt;/a&gt;.
&lt;/p&gt;

&lt;p&gt;
Next, in parentheses, you have the target - where to store the captured
info. The &lt;b&gt;&lt;b&gt;Blog idea&lt;/b&gt;&lt;/b&gt; template says &lt;b&gt;&lt;b&gt;file+headline&lt;/b&gt;&lt;/b&gt; followed by a
filename in quotes and a headline in quotes. This says to store the
new org heading you're capturing in the file
"~/Dropbox/orgfiles/i.org" under the heading "Blog Topics:" Contrast
this to the &lt;b&gt;&lt;b&gt;appointments&lt;/b&gt;&lt;/b&gt; template which just specifies &lt;b&gt;&lt;b&gt;file&lt;/b&gt;&lt;/b&gt;
and a filename. The &lt;b&gt;&lt;b&gt;appointments&lt;/b&gt;&lt;/b&gt; template will just append the new
appointment to its specified file whereas &lt;b&gt;&lt;b&gt;Blog idea&lt;/b&gt;&lt;/b&gt; will prepend
(due to the &lt;b&gt;&lt;b&gt;:prepend&lt;/b&gt;&lt;/b&gt; option at the end of the template) to the
"Blog Topics:" heading in &lt;b&gt;&lt;b&gt;i.org&lt;/b&gt;&lt;/b&gt;.
&lt;/p&gt;

&lt;p&gt;
After this we have the actual template: "* %?\n%T" - the %? and %T are
placeholders for substitutions. The &lt;b&gt;&lt;b&gt;%T&lt;/b&gt;&lt;/b&gt; prompts for a date with a
timestamp and the &lt;b&gt;&lt;b&gt;%?&lt;/b&gt;&lt;/b&gt; is where to leave the cursor for final input
before saving the capture.
&lt;/p&gt;

&lt;p&gt;
Finally, &lt;b&gt;&lt;b&gt;:prepend&lt;/b&gt;&lt;/b&gt; and other options can be found at the above link.
&lt;/p&gt;

&lt;p&gt;
All the substitutions can be found in &lt;a href="http://orgmode.org/manual/Template-expansion.html#Template-expansion"&gt;the docs&lt;/a&gt;.
&lt;/p&gt;

&lt;p&gt;
Once you've set up your templates, it's quick and easy to capture
information. 
&lt;/p&gt;

&lt;p&gt;
This video shows the basics. The next one shows how to pop up a
capture even when you're not in emacs and how I use org-capture to
maintain my web bookmarks.
&lt;/p&gt;

&lt;p&gt;
More information on capture templates can be found &lt;a href="http://orgmode.org/manual/Capture-templates.html"&gt;here&lt;/a&gt;.
&lt;/p&gt;


&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/-wPfxuxIfeU" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;div id="outline-container-sec-2" class="outline-2"&gt;
&lt;h2 id="sec-2"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-2"&gt;
&lt;p&gt;
Relevant links:
&lt;/p&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Video series overview page:
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="http://cestlaz.github.io/stories/emacs"&gt;http://cestlaz.github.io/stories/emacs&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Code:
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="https://github.com/zamansky/using-emacs/tree/master"&gt;&lt;/a&gt;&lt;a href="https://github.com/zamansky/using-emacs/tree/master"&gt;https://github.com/zamansky/using-emacs/tree/master&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>emacs</category><category>tools</category><guid>http://cestlaz.github.io/posts/using-emacs-23-capture-1/</guid><pubDate>Tue, 29 Nov 2016 16:00:00 GMT</pubDate></item><item><title>Using Emacs - 21 - web mode</title><link>http://cestlaz.github.io/posts/using-emacs-21-web-mode/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;p&gt;
Quick post today. 
&lt;/p&gt;

&lt;p&gt;
The video goes over web-mode - my preferred weapon for html and all the goodies you embed in an html file.
&lt;/p&gt;

&lt;p&gt;
It's multi-modal so it acts sensibly regardless of wether you're editing html, css, javascript or even templates in a single file.
&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;/b&gt; In the video, web-mode wasn't automatically inserting
quotes. I had to set hte following variable to fix this:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;(setq web-mode-enable-auto-quoting t)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;
Giving the final configuration I'm currently using: 
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;use-package&lt;/span&gt; &lt;span class="nv"&gt;web-mode&lt;/span&gt;
    &lt;span class="nv"&gt;:ensure&lt;/span&gt; &lt;span class="nv"&gt;t&lt;/span&gt;
    &lt;span class="nv"&gt;:config&lt;/span&gt;
	 &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;add-to-list&lt;/span&gt; &lt;span class="ss"&gt;'auto-mode-alist&lt;/span&gt; &lt;span class="o"&gt;'&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"\\.html?\\'"&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;web-mode&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
	 &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;web-mode-engines-alist&lt;/span&gt;
	       &lt;span class="o"&gt;'&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s"&gt;"django"&lt;/span&gt;    &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s"&gt;"\\.html\\'"&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
	 &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;web-mode-ac-sources-alist&lt;/span&gt;
	       &lt;span class="o"&gt;'&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s"&gt;"css"&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;ac-source-css-property&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
		 &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"html"&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;ac-source-words-in-buffer&lt;/span&gt; &lt;span class="nv"&gt;ac-source-abbrev&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;web-mode-enable-auto-closing&lt;/span&gt; &lt;span class="nv"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;web-mode-enable-auto-quoting&lt;/span&gt; &lt;span class="nv"&gt;t&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;; this fixes the quote problem I mentioned&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
The web-mode &lt;a href="http://web-mode.org"&gt;documentation&lt;/a&gt; has more information including a nice chart of all the key bindings.
&lt;/p&gt;



&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/69bQa5n23jc" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;div id="outline-container-sec-2" class="outline-2"&gt;
&lt;h2 id="sec-2"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-2"&gt;
&lt;p&gt;
Relevant links:
&lt;/p&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Video series overview page:
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="http://cestlaz.github.io/stories/emacs"&gt;http://cestlaz.github.io/stories/emacs&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Code:
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="https://github.com/zamansky/using-emacs/tree/master"&gt;&lt;/a&gt;&lt;a href="https://github.com/zamansky/using-emacs/tree/master"&gt;https://github.com/zamansky/using-emacs/tree/master&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>emacs</category><category>tools</category><guid>http://cestlaz.github.io/posts/using-emacs-21-web-mode/</guid><pubDate>Wed, 16 Nov 2016 16:00:00 GMT</pubDate></item><item><title>Using Emacs - 22 - emacsclient</title><link>http://cestlaz.github.io/posts/using-emacs-22-emacsclient/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;p&gt;
Another quick hit today.
&lt;/p&gt;

&lt;p&gt;
This video is really setting the stage for hte next two, where I talk about org-mode capturing.
&lt;/p&gt;

&lt;p&gt;
Today, we're demoing the use of the emacs server and client.
&lt;/p&gt;

&lt;p&gt;
Back in the old days, emacs took a LOOONG time to load. A complex
conviguration could take on the order of 10 to 20 seconds. This
resulted in people loading emacs at the start of the day and leaving
it up forever. While load times aren't much of an issue anymore, it's
still nice to leave emacs around all the time.
&lt;/p&gt;

&lt;p&gt;
That's where running emacs as a server comes in.. I set up a keyboard shortcut my window manager to run:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;emacsclient -a "" -c
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Rather than trying to run emacs, this tries to connect to an already
running emacs server. The &lt;b&gt;&lt;b&gt;-c&lt;/b&gt;&lt;/b&gt; creates a new frame. Instead if you
use &lt;b&gt;&lt;b&gt;-t&lt;/b&gt;&lt;/b&gt; it will open emacs in the terminal. The &lt;b&gt;*-a ""*&lt;/b&gt; tells
emacs to run itself as a server (daemon) if it isn't already running.
&lt;/p&gt;


&lt;p&gt;
Later on, running &lt;b&gt;&lt;b&gt;emacsclient -c&lt;/b&gt;&lt;/b&gt; will very quickly bring up a new frame to the server.
&lt;/p&gt;

&lt;p&gt;
In addition to instant loading, Running emacs this way has the
advantage, or some may say disadvantage of keeping buffers around
forever since you just keep emacs up and running.  
&lt;/p&gt;



&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/9AHGsCtsClg" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;div id="outline-container-sec-2" class="outline-2"&gt;
&lt;h2 id="sec-2"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-2"&gt;
&lt;p&gt;
Relevant links:
&lt;/p&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Video series overview page:
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="http://cestlaz.github.io/stories/emacs"&gt;http://cestlaz.github.io/stories/emacs&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Code:
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="https://github.com/zamansky/using-emacs/tree/master"&gt;&lt;/a&gt;&lt;a href="https://github.com/zamansky/using-emacs/tree/master"&gt;https://github.com/zamansky/using-emacs/tree/master&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>emacs</category><category>tools</category><guid>http://cestlaz.github.io/posts/using-emacs-22-emacsclient/</guid><pubDate>Wed, 16 Nov 2016 16:00:00 GMT</pubDate></item><item><title>Using Emacs - 20 - yanking</title><link>http://cestlaz.github.io/posts/using-emacs-20-yanking/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;p&gt;
Today's video is a bit of a follow up on the last one as well as a few
miscillaneous configuration.
&lt;/p&gt;

&lt;p&gt;
We got some comments on alternate ways to load a file if it exists -
it's always cool to see how different people end up doing similar things.
&lt;/p&gt;

&lt;p&gt;
We then talk about three little configurations. Two I found out about
reading Jon Sander's (jcs) blog &lt;a href="http://irreal.org/blog"&gt;Irreal&lt;/a&gt;. Jon's blog is a terrific
source of emacs info - if you don't subscribe, you should.
&lt;/p&gt;

&lt;p&gt;
I go over using counsel for working with the kill-ring. The command
counsel-yank-pop acts as a replamcement for yank-pop and it lets you
easily yank anything from the kill ring - not just the most previously
killed/whacked piece. 
&lt;/p&gt;

&lt;p&gt;
You just hit &lt;b&gt;&lt;b&gt;M-y&lt;/b&gt;&lt;/b&gt; and then either keep hitting it or use up and
down to select what you want to yank. 
&lt;/p&gt;

&lt;p&gt;
Here's the original post from Irreal: &lt;a href="http://irreal.org/blog/?p=5707"&gt;http://irreal.org/blog/?p=5707&lt;/a&gt;.
&lt;/p&gt;

&lt;p&gt;
I then briefly talk about smoothing things over between the system
clipboard and the kill ring, also from Irreal:
&lt;a href="http://irreal.org/blog/?p=5702"&gt;http://irreal.org/blog/?p=5702&lt;/a&gt;.
&lt;/p&gt;

&lt;p&gt;
Finally, I talk about auto-revert-mode - this monitors files on your
file system and when they change, they reload your buffer. I find this
very useful to keep multiple machines in sync when I'm working with
files in a could based filesystem like Dropbox or Owncloud.
&lt;/p&gt;


&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/LReZI7VAy8w" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;div id="outline-container-sec-2" class="outline-2"&gt;
&lt;h2 id="sec-2"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-2"&gt;
&lt;p&gt;
Relevant links:
&lt;/p&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Video series overview page:
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="http://cestlaz.github.io/stories/emacs"&gt;http://cestlaz.github.io/stories/emacs&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Code:
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="https://github.com/zamansky/using-emacs/tree/master"&gt;&lt;/a&gt;&lt;a href="https://github.com/zamansky/using-emacs/tree/master"&gt;https://github.com/zamansky/using-emacs/tree/master&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>emacs</category><category>tools</category><guid>http://cestlaz.github.io/posts/using-emacs-20-yanking/</guid><pubDate>Sun, 13 Nov 2016 16:00:00 GMT</pubDate></item><item><title>Using Emacs - 19 - moving to a live config</title><link>http://cestlaz.github.io/posts/using-emacs-19-live/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;p&gt;
Some of the videos I want to make are going to be much easier to do if
I'm working in my own account where my whole file tree is available. 
&lt;/p&gt;

&lt;p&gt;
It's also a little annoying changing between my full emacs config and
the one I'm developing here.
&lt;/p&gt;

&lt;p&gt;
So, I decided to move to this config for my real config and as I make
more videos move parts of my old configuration over to this new one.
&lt;/p&gt;

&lt;p&gt;
The only problem is that I &lt;b&gt;&lt;b&gt;need&lt;/b&gt;&lt;/b&gt; some of my current config right
now â things like my email setup.
&lt;/p&gt;

&lt;p&gt;
This video talks about how I'm going to set things up to take care of
everything.
&lt;/p&gt;




&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/8RwQNXOjSis" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;div id="outline-container-sec-2" class="outline-2"&gt;
&lt;h2 id="sec-2"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-2"&gt;
&lt;p&gt;
Relevant links:
&lt;/p&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Video series overview page:
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="http://cestlaz.github.io/stories/emacs"&gt;http://cestlaz.github.io/stories/emacs&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Code:
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="https://github.com/zamansky/using-emacs/tree/master"&gt;&lt;/a&gt;&lt;a href="https://github.com/zamansky/using-emacs/tree/master"&gt;https://github.com/zamansky/using-emacs/tree/master&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>emacs</category><category>tools</category><guid>http://cestlaz.github.io/posts/using-emacs-19-live/</guid><pubDate>Thu, 10 Nov 2016 16:00:00 GMT</pubDate></item></channel></rss>