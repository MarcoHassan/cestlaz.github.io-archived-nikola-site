<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>C'est la Z (Posts about education)</title><link>http://cestlaz.github.io/</link><description></description><atom:link rel="self" type="application/rss+xml" href="http://cestlaz.github.io/categories/education.xml"></atom:link><language>en</language><lastBuildDate>Thu, 22 Jun 2017 14:20:20 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Mayoral Control - only when your guy's the mayor</title><link>http://cestlaz.github.io/posts/mayoral-control/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;p&gt;
The hot debate this past week in NY Education circles is Mayoral
Control. When I started teaching, New York City schools were
controlled by the Board of Education. The board appointed a
chancellor. The system was supposed to balance community control as
well as some centralized decision making. The system was created in
the late 60s and was entrenched through my schooling. By the time I
was a teacher I think it was pretty much a given that the system
didn't work.
&lt;/p&gt;

&lt;p&gt;
In 2002, everything changed with Mayoral control under Michael
Bloomberg. Under mayoral control, the mayor appoints the chancellor
who appoints superintendents an on down the line. This was supposed to
create a chain of accountability leading up to and including the
mayor. To address concerns that parents voices would be heard, we had
the Panel for Educational Policy or PEP which was supposed to vet and
vote on policy and initiatives.
&lt;/p&gt;

&lt;p&gt;
Sounds good.
&lt;/p&gt;

&lt;p&gt;
Of course, it was all a farce. 
&lt;/p&gt;

&lt;p&gt;
Parents may or may not have had a voice under the old system but they
certainly didn't have a voice with mayoral control. The majority of
members of the panel were mayoral appointees and if they didn't vote
100% in line with their masters wishes, they were removed for someone
who would. Schools were closed and initiatives were passed that were
wildly unpopular with parents.
&lt;/p&gt;

&lt;p&gt;
What did we get under mayoral control? There was some good, but we
also got: 
&lt;/p&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;100% buy in to the pet education theories of non-educators like Bill
gates.
&lt;/li&gt;
&lt;li&gt;School leaders who barely taught and had little experience as
educators. 
&lt;/li&gt;
&lt;li&gt;Destruction of neighborhood schools 
&lt;/li&gt;
&lt;li&gt;Destruction of just about all of the large comprehensive high schools
&lt;/li&gt;
&lt;li&gt;Open doors for private charter schools that follow questionable
practices.
&lt;/li&gt;
&lt;li&gt;Flawed (at best)  school and teacher evaluation models 
&lt;/li&gt;
&lt;li&gt;The ATR pool 
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
Of course, reformers - those out to privatize education loved mayoral
control under Bloomberg. It destabilized teaching as a career
&lt;/p&gt;

&lt;p&gt;
Did results improve?
&lt;/p&gt;

&lt;p&gt;
Some would say yes but it's debatable. Graduation rates and test
scores are controlled by the politicians. When you have tests made,
graded, and curved in secret (except for those charter schools that
are exempt or grade their own tests), you've got to question any gains
or losses.
&lt;/p&gt;

&lt;p&gt;
Bloomberg's failing was (and possibly still is) that he and his
appointees didn't understand education or teachers. Education not a
business and can't be treated the same way.  
&lt;/p&gt;

&lt;p&gt;
Did this help with accountability? To quote Mr. Bloomberg: "They can
boo me at parades." 
&lt;/p&gt;

&lt;p&gt;
Fast forward to the de Blasio administration. Personally, I was not a
fan of Bloomberg's educational policy and I also feel that de Blasio's
also doing a poor job. Regardless of my opinion, Mayoral control under
de Blasio has certainly felt more community friendly. 
&lt;/p&gt;

&lt;p&gt;
This hasn't sat well with the reformers upstate and while Michael
Bloomberg was granted mayoral control for his entire term, Bill de
Blasio has had to fight for it every year and every year control has
come with strings attached â€“ generally involving the flow of money
into private charter schools - still with questionable practices and
results.
&lt;/p&gt;

&lt;p&gt;
The funny thing is that many of those saying mayoral control was bad
during the Bloomberg era say it's a necessity now  and many against it
under Bloomberg are fans under de Blasio.  
&lt;/p&gt;

&lt;p&gt;
What's even funnier, in a tragic way is that it isn't really even
control. So much is really controlled in Albany under Governor
Cuomo. When de Blasio wanted to charge private charters for space
(rightfully so, in my opinion), Albany stepped in and gave the
charters a free pass. How is that mayoral control?
&lt;/p&gt;

&lt;p&gt;
Regardless of your political leanings, it's pretty clear that mayoral
control is only a good thing when the mayor is your guy. We need
something brand new that supports our communities. I was at the
&lt;a href="https://personaldemocracy.com/conference"&gt;Personal Democracy Forum 2017&lt;/a&gt; a couple of weeks ago and a recurring
theme, one which we really need now for our schools is:
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;
&lt;b&gt;&lt;b&gt;build with, not for&lt;/b&gt;&lt;/b&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
If we don't get there we'll be stuck booing our politicians at parades.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>education</category><category>policy</category><guid>http://cestlaz.github.io/posts/mayoral-control/</guid><pubDate>Thu, 22 Jun 2017 11:54:46 GMT</pubDate></item><item><title>SIGCSE 2017</title><link>http://cestlaz.github.io/posts/sigcse-2017/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;p&gt;
Tomorrow morning I fly out to Seattle for SIGCSE 2017. For those of
you not in the CS Education space, SIGCSE is the ACM (Association for
Computing Machinery) special interest group for computer science education.
&lt;/p&gt;

&lt;p&gt;
I've wanted to go for years but have never been able. It's hard for a
high school teacher to miss a week in mid March, particularly in
places with a school calendar similar to New York. NY city schools are
already closed for a week in February and then Spring Break is right
around the corner. If you're teaching an AP course with the exam in
early May, losing a week in March is really not an option. Even if you
can take the time, you'll probably have to foot the bill out of
pocket. 
&lt;/p&gt;

&lt;p&gt;
Now that I'm at Hunter, I've got more flexibility in terms of schedule
and attending is probably even more important given my current roles.
&lt;/p&gt;

&lt;p&gt;
I'm looking forward to the talks and events but probably even more
looking forward to seeing old friends, meeting new ones and seeing
face to face friends that til now I've only known through the web.
&lt;/p&gt;

&lt;p&gt;
On Saturday I'll be part of a panel (thanks &lt;a href="https://twitter.com/cscheerleader"&gt;Ria&lt;/a&gt;) titled "Tools we
can't live without." I'll probably talk about the way I use git and
GitHub and how I get my students up to speed but there are lots of
tools I can talk about.
&lt;/p&gt;

&lt;p&gt;
I plan to write up a series of posts on how I use GitHub (and how it
evolved from other versioning systems) as well as thoughts about other
tools I've used and some I've struggled with.
&lt;/p&gt;

&lt;p&gt;
If you're going to be at SIGCSE drop me a line, I'd love to connect.
&lt;/p&gt;</description><category>cseducation</category><category>education</category><guid>http://cestlaz.github.io/posts/sigcse-2017/</guid><pubDate>Tue, 07 Mar 2017 21:18:41 GMT</pubDate></item><item><title>Will we lose CS teachers to industry?</title><link>http://cestlaz.github.io/posts/will-we-lose-cs-teachers-to-industry/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;blockquote&gt;
&lt;p&gt;
If we properly prepare CS teachers, won't they just jump ship and take
tech industry jobs?
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
I hear that a lot.
&lt;/p&gt;

&lt;p&gt;
Tech pays big. Teaching? Not so much. Tech workers are respected and
have flexible jobs. Teaching? Again, not so much.
&lt;/p&gt;

&lt;p&gt;
Those chanting these refrains advocate the current simple teacher
"training" - scripted lessons, minimal pedagogical content knowledge,
even less real content knowledge. That  will keep them in the classroom.
&lt;/p&gt;

&lt;p&gt;
They're wrong.
&lt;/p&gt;

&lt;p&gt;
People fearing an exodus of prepared CS teachers don't get
education. True, many young CS teachers will leave the profession but
that's because &lt;b&gt;&lt;b&gt;many young teachers leave the profession&lt;/b&gt;&lt;/b&gt;. Why do young
teachers leave? Regardless of subject area some of the reasons are:
&lt;/p&gt;

&lt;ul class="org-ul"&gt;
&lt;li&gt;It's much harder than everyone thinks it is
&lt;/li&gt;
&lt;li&gt;Low pay
&lt;/li&gt;
&lt;li&gt;Lack of respect
&lt;/li&gt;
&lt;li&gt;Overworked
&lt;/li&gt;
&lt;li&gt;Lack of autonomy
&lt;/li&gt;
&lt;li&gt;Being scapegoated for poverty
&lt;/li&gt;
&lt;li&gt;It's become about testing, not teaching
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
None of these are unique to computer science teachers so the argument
that CS teachers who know too much will leave is really saying, "we
have to keep our teachers dumb enough to stay - make sure they don't
have outside options" rather than "let's make teaching a desirable
profession to be in."  
&lt;/p&gt;

&lt;p&gt;
Of course, this is bred from a lack of understanding about what drives
teachers. It's typical of politicians and business leaders and short
term temps like TFAers who came in for a cup of coffee and now know
how to solve the education problem.
&lt;/p&gt;

&lt;p&gt;
Teacher don't become teachers to
get rich or to do better than the other guy â€“ I know I didn't. We
enter it to do good - to uplift the have nots. This is why business
models like stack ranking and bonus or merit pay just don't work. A
school is a team and we're all in it together. Our job is to take care
of our kids, not to be better than that other guy. We wish we had more
time to work together and to improve things for our entire population.
&lt;/p&gt;

&lt;p&gt;
Back to computer science.
&lt;/p&gt;

&lt;p&gt;
My contention is that you might lose some teachers to industry but
they either weren't meant to be teachers anyway or they couldn't
afford to be teachers or the system beat them down. None of these are
reasons not to properly prepare them. Besides, all teachers in all
subject areas could work their way into an entry level tech job via a
summer coding boot camp.
&lt;/p&gt;

&lt;p&gt;
We can also look to the past to allay concerns. While it's true that
for hiring purposes, English teachers are a dime a dozen and
candidates typically
have fewer outside options (although great English teachers are harder
to find), Math and Science teachers generally have options. I know
many top Math and Science teachers who could easily get non teaching
jobs - the Math teachers in finance the science, certainly in
pharmaceutical companies over in NJ. These options exist yet we manage
to populate our classes with teachers. True, it's difficult at times,
particularly in Physics, but these are due to the lack of respect
teaching gets as a profession.
&lt;/p&gt;

&lt;p&gt;
If we prepare CS teachers properly, yes, we'll lose some, but we'll
keep the ones we're supposed to or if we lose them it will be due to
other factors. Additionally, by having proper CS teacher
preparation programs, we'll also provide an entry path to those people
meant to be teachers but prior had no way of getting in.
&lt;/p&gt;

&lt;p&gt;
As a nation, we're moving away from prepared, knowledgeable teachers
and towards drill-masters. Let's not let CS Education go the way of
all ed.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>education</category><category>policy</category><guid>http://cestlaz.github.io/posts/will-we-lose-cs-teachers-to-industry/</guid><pubDate>Mon, 27 Feb 2017 11:41:27 GMT</pubDate></item><item><title>Quality Devs and Coding Contests</title><link>http://cestlaz.github.io/posts/quality-devs-and-coding-contests/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;p&gt;
I've been planning to put together a response to &lt;a href="https://twitter.com/alfredtwo"&gt;Alfred Thompson&lt;/a&gt;'s
recent post - &lt;a href="http://blog.acthompson.net/2017/02/software-developersquantity-vs-quality.html"&gt;Software Developers - Quantity vs Quality&lt;/a&gt;. 
&lt;/p&gt;

&lt;p&gt;
TL;DR, although it isn't really long and I do encourage you to read
Alfred's post: a couple of articles talk about how the U.S. has the most
people entering CS competitions like HackerRank but Americans are not
at the top of the leaderboard. does this mean that there's less talent
in America? Does it even matter?
&lt;/p&gt;

&lt;p&gt;
Before getting to "does it matter," I looked over at the Kaggle
leaderboards. Looking at their top 10, 2 were from the US - no other
country had more than 1. The 11th placing competitor was also from the
US and then 12 was from China, giving them 2 in the top 12.  I also
looked at recent &lt;a href="http://stats.ioinformatics.org/delegations/2016?sort=total_desc"&gt;IOI results&lt;/a&gt; and a quick glance seems to indicate that
the USA seems to do reasonably well. In short, if you buy into ranking
a country by these types of individual results on specific
competitions then we're doing fine.
&lt;/p&gt;

&lt;p&gt;
But, does filling the leaderboard mean a country's producing the best
tech talent? Probably not.
&lt;/p&gt;

&lt;p&gt;
Coding competitions focus on a specific skill set. There are problem
solving aspects but they also require speed, knowledge of data
structures and algorithms, and, yes, even accurate, fast typing
skills. They also require you work alone. They don't encourage well
designed, architected, or written code, working on existing code bases
or working with a team. 
&lt;/p&gt;

&lt;p&gt;
Over the years, I've known some very smart and talented individuals
who've excelled at these types of competitions. If you extend the pool
to math and science competitions, I've known quite a few. These
individuals have by and large done well for themselves but as a group,
you couldn't call them more successful than any other subset of my
former students. A number of them have gone on and are doing well as
professors or programmers but, by and large, they're not the ones
who've gone on to found companies and provide jobs for scores or even
hundreds of other people and they're not necessarily the ones who've
led teams that have developed major platforms and projects&lt;sup&gt;&lt;a id="fnr.1" name="fnr.1" class="footref" href="http://cestlaz.github.io/posts/quality-devs-and-coding-contests/#fn.1"&gt;1&lt;/a&gt;&lt;/sup&gt;
&lt;/p&gt;

&lt;p&gt;
I don't argue that people who populate competition leaderboards are
talented and a necessary part of our tech ecosystem but they're only a
part. I probably want one of these programmers on my team, but not as
the entire team (see Fake Grimlock's laws of startups - &lt;a href="http://www.builtinchicago.org/blog/secret-laws-startups-part-2-build-right-team"&gt;law 9&lt;/a&gt;).
&lt;/p&gt;


&lt;div align="center"&gt;
&lt;a href="http://www.builtinchicago.org/blog/secret-laws-startups-part-2-build-right-team"&gt;
&lt;img width="30%" src="http://media3.cdn.builtinchicago.org/sites/default/files/imagecache/Original/images/BATMAN-THEN-ROBIN.jpg"&gt;
&lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;
Competitive programming is a piece of the puzzle as competitive
programmers are a part of the population. So are project based events
like &lt;a href="https://dreamitcodeitwinit.wordpress.com/"&gt;Dream it. Code it. Win it.&lt;/a&gt;, science fairs, and hackathons, which
can be either cooperative, competitive, or a combination.
&lt;/p&gt;

&lt;p&gt;
What do we want? Balance. I think the Stuy program does it pretty
well. StuyCS graduates who wish to take part in coding competitions
can do so but if they want to excel at it, they have to work at it on
their own time. At the same time, the students learn how to work in
teams and take a project from idea to delivery all the while learning
some good academic CS and software engineering practices. They'll
learn more in college on the academic side and the rest on the
job. I'd love to see better balance in the colleges between CS
programs preparing kids for graduate programs and CS programs that
prepare kids for industry. I'd also love to see CS minors that were
more targeted towards CS+X rather than half of a CS major targeting
students going to grad schools. 
&lt;/p&gt;

&lt;p&gt;
I also think there's a tremendous opportunity for community colleges
to fill the role currently occupied by code schools. They could more
easily strike a balance between academic depth and practical
preparation.
&lt;/p&gt;

&lt;p&gt;
I'm working on building Hunter College's honors CS program and while I
can't move the Hunter curriculum, I'm seeking that balance in my own
way.
&lt;/p&gt;

&lt;p&gt;
Will we get there? I don't know. Given the way education works, I
figure at some point people will decide that we have to have more of a
presence on the CS leaderboards and we'll see programs pop up with
that in mind. I have no doubt that when that happens, we'll see many
more Americans near the top. We have a large enough population that
talent shouldn't be in question. This will be great for students to
whom these competitions attract. It won't do much, however for the
rest of the students. I'm not really concerned one way or
another. Unlike math, where there's a natural progression through K12
math classes with math team and math competitions being a natural add
on, the driving forces in CS - be they from industry, government, or
academia don't seem to have partaken in any code competition Kool-Aid
so code competitions won't become a driving force in CS ed any time
soon. 
&lt;/p&gt;
&lt;div id="footnotes"&gt;
&lt;h2 class="footnotes"&gt;Footnotes: &lt;/h2&gt;
&lt;div id="text-footnotes"&gt;

&lt;div class="footdef"&gt;&lt;sup&gt;&lt;a id="fn.1" name="fn.1" class="footnum" href="http://cestlaz.github.io/posts/quality-devs-and-coding-contests/#fnr.1"&gt;1&lt;/a&gt;&lt;/sup&gt; &lt;p&gt;Some
are but probably a smaller percent from that group than from the
general pool.&lt;/p&gt;&lt;/div&gt;


&lt;/div&gt;
&lt;/div&gt;</description><category>cs</category><category>education</category><guid>http://cestlaz.github.io/posts/quality-devs-and-coding-contests/</guid><pubDate>Sun, 19 Feb 2017 21:53:56 GMT</pubDate></item><item><title>Starting with scheme</title><link>http://cestlaz.github.io/posts/starting-with-scheme/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;p&gt;
Scheme is one of the languages used in Stuy's intro CS course. Like
any other language, there are pros and cons of using it to introduce
students to CS. Here are some of the reasons why I like Scheme as a
first language and why despite that,  I don't recommend it in many
cases.
&lt;/p&gt;

&lt;p&gt;
Scheme certainly isn't mainstream. That's not the main reason why I
like it but it is a side benefit. It's less likely kids come into
class knowing it which creates a level playing field. The few times
I've had a student with a background in Scheme, they've been good,
helpful kids rather than ones that tried to show off and dominate the
class. 
&lt;/p&gt;

&lt;p&gt;
I like scheme because it's simple. It looks different than other
languages but is &lt;code&gt;(+ 3 4)&lt;/code&gt; really that different than &lt;code&gt;add(3,4)&lt;/code&gt; or
&lt;code&gt;3+4&lt;/code&gt;? 
&lt;/p&gt;

&lt;p&gt;
We can tell kids "everything's a function." While technically not
true, and I tell my students that it isn't, it's close enough for our
purposes. Everything's a function and the way we write a function is:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;f&lt;/span&gt; &lt;span class="nv"&gt;a&lt;/span&gt; &lt;span class="nv"&gt;b&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Apply function &lt;b&gt;&lt;b&gt;f&lt;/b&gt;&lt;/b&gt; on arguments &lt;b&gt;&lt;b&gt;b c â€¦&lt;/b&gt;&lt;/b&gt;. So we have &lt;code&gt;(+ 2 3)&lt;/code&gt; to
add 2 and 3, &lt;code&gt;(and a b)&lt;/code&gt; for logical and &lt;code&gt;(= 3 4)&lt;/code&gt; to test to see if 3
is equal to 4, etc. We also have the same basic notation for things
like conditionals. In java, we might write:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
 &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
In scheme, it would be:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;if &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&amp;gt; &lt;/span&gt;&lt;span class="nv"&gt;a&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="mi"&gt;5&lt;/span&gt;
  &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Even though we're fudging the rules, we can lay out a handful of rules
for the kids such as lambda and define follow a similar form to create and
name functions:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;define &lt;/span&gt;&lt;span class="nv"&gt;add2&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;a&lt;/span&gt; &lt;span class="nv"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;+ &lt;/span&gt;&lt;span class="nv"&gt;a&lt;/span&gt; &lt;span class="nv"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
where &lt;code&gt;(lambda (a b) (+ a b))&lt;/code&gt; returns a function that adds &lt;b&gt;&lt;b&gt;a&lt;/b&gt;&lt;/b&gt; and
&lt;b&gt;&lt;b&gt;b&lt;/b&gt;&lt;/b&gt; and &lt;code&gt;define&lt;/code&gt; associates it with the identifier &lt;b&gt;&lt;b&gt;add2&lt;/b&gt;&lt;/b&gt;. Now we
can use the function: &lt;code&gt;(add2 5 10)&lt;/code&gt; which evaluates to 15.
&lt;/p&gt;

&lt;p&gt;
With lambda, define, if, and a few more basics, it's off to the
races. The simple, consistent syntax makes things easy for the kids
and the constrained tool set lets us focus their way of thinking.
&lt;/p&gt;

&lt;p&gt;
Of course this wouldn't work had DrScheme (now &lt;a href="https://racket-lang.org/"&gt;Racket&lt;/a&gt;) not
existed. That gave us a nice learning IDE to work in.
&lt;/p&gt;

&lt;p&gt;
Using Scheme, we can not only cover the basics like conditionals,
abstraction and such but also deeper concepts like recursion, map,
filter, and reduce. When we move on from Scheme, the kids also have a
frame of reference for all the other languages and paradigms they use.
&lt;/p&gt;

&lt;p&gt;
There are downsides, however. Outside help is harder to come by and
there is some pushback from parents and it isn't as pretty and flashy
as some other tool-sets. Scheme worked at Stuy for a number of
reasons. When I created the class that used it, there were no good
pre-AP classes in the school and I had a pretty good reputation as a
teacher. The class also used multiple tools with &lt;a href="https://ccl.northwestern.edu/netlogo/"&gt;NetLogo&lt;/a&gt; being the
primary other one and tackled a variety of CS and non CS topics.
First time through, reputation and buzz filled the classes and after
that, the class developed a solid enough reputation to fill itself.
&lt;/p&gt;

&lt;p&gt;
It also didn't hurt that our program developed from the inside
out. First, we had APCS-AB on the books as a junior year course, then
I added our post AP senior year electives. Since it was easy to show
what the kids were already graduating with, it was easy to diffuse any
pushback from not using mainstream tools in the first class.
&lt;/p&gt;

&lt;p&gt;
Scheme worked at Stuy and I feel that it still does. Would I use
Scheme for a first experience in a drop in program at an after-school
where kids might not come back if they don't get to a payoff
immediately? Probably not. Would I recommend it at a school where I
want to integrate CS with some of the other subjects quickly, again,
probably not (except for integration with algebra where &lt;a href="http://www.bootstrapworld.org/"&gt;Bootstrapworld&lt;/a&gt;
is a terrific program).
&lt;/p&gt;

&lt;p&gt;
In any event, if you're a high school CS teacher and  haven't played
with scheme  or some other functional language, I highly recommend
it - you might not actually ever teach it or use it but it can really
help develop you as a programmer and an educator.
&lt;/p&gt;</description><category>cs</category><category>curriculum</category><category>education</category><guid>http://cestlaz.github.io/posts/starting-with-scheme/</guid><pubDate>Wed, 15 Feb 2017 17:20:25 GMT</pubDate></item><item><title>Selecting a starting language - why not Javascript</title><link>http://cestlaz.github.io/posts/starting-with-js/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;p&gt;
I was catching up with the team at Stuy the other day and they
mentioned that they were periodically getting pushback on their choice
of languages, particularly in the intro class. The pushback was mostly
in the form of "why don't you start them with Javascript?" 
&lt;/p&gt;

&lt;p&gt;
Back in the day, when I created our intro class where we use Scheme,
NetLogo and then later Python, I'd get similar pushback but then it
was "why not Java?", "why not C?", or "whu not C++?"
&lt;/p&gt;

&lt;p&gt;
We had a good discussion on this and I shared my thoughts as to why I
don't like Javascript as a first language and I thought I'd share some
of them here. I'll try to get around to the rationale behind Scheme
and NetLogo in a later post.
&lt;/p&gt;

&lt;p&gt;
To start, let me say that I &lt;b&gt;&lt;b&gt;Love&lt;/b&gt;&lt;/b&gt; Javascript -
particularly when approaching it as a functional language. I also
think every school and situation is different so there are likely
times when Javascript is the right beginner language for the job.
&lt;/p&gt;

&lt;p&gt;
Let's dive in.
&lt;/p&gt;

&lt;p&gt;
Why are some of the pluses for Javascript as an intro language.
&lt;/p&gt;

&lt;ul class="org-ul"&gt;
&lt;li&gt;Ubiquity and availability:

&lt;p&gt;
If you have a browser, you have Javascript - it's also available
through online IDEs and online lightweight sites like &lt;a href="https://jsfiddle.net/"&gt;JSFiddle&lt;/a&gt;. 
&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;Interactivity:

&lt;p&gt;
You can tweak websites almost live, use the HTML5 canvas pretty
interactively and mode
&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;It's mainstream
&lt;/li&gt;

&lt;li&gt;It's quick to get up and running
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
This is all true, but there are also downsides.
&lt;/p&gt;

&lt;p&gt;
One of my big problems with Javascript is the lack of simple solid
educational tooling. I love to use tools like &lt;a href="http://www.drjava.org/"&gt;DrJava&lt;/a&gt;, &lt;a href="http://drpython.sourceforge.net/"&gt;DrPython&lt;/a&gt;, and
&lt;a href="https://racket-lang.org/"&gt;Racket&lt;/a&gt; (formerly DrScheme) with beginners. All simple learning
IDEs. True, you can use a simple online IDE but I haven't found them
to have as strong a learning interface. They also, generally, keep you
in an oversimplified programming sandbox. There's no clean transition
from the sandbox to the real deal - particularly given the non-trivial
state of js build tools and environments. These simple learning IDEs
set the stage and then we can transition to more powerful development environments.
&lt;/p&gt;

&lt;p&gt;
I also prefer, where possible, to have kids learn locally so that they
can learn something about the underlying operating system even if
only at a user level.
&lt;/p&gt;

&lt;p&gt;
A problem relating to the lack of tooling is the fact that a JS
program can fail to run and not give you any meaningful feedback at
all - this is a problem for a beginner. 
&lt;/p&gt;

&lt;p&gt;
Javascript also has all sorts of wonkiness. We have &lt;code&gt;=&lt;/code&gt;, and &lt;code&gt;==&lt;/code&gt;
which is pretty conventional, but then there's also &lt;code&gt;===&lt;/code&gt;. We have
potentially confusing scoping issues and also some other real
weirdness:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;53&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//  50&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;53&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="s1"&gt;'3'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 50&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'53'&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 50 &lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'53'&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="s1"&gt;'3'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//50&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;53&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//  56&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;53&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s1"&gt;'3'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// '533'&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'53'&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// '533&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'53'&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s1"&gt;'3'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// '533'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
For more, check out the this &lt;a href="https://www.destroyallsoftware.com/talks/wat"&gt;video&lt;/a&gt;. Start watching at about 1:20 -
it's a riot.
&lt;/p&gt;

&lt;p&gt;
All of this weirdness actually makes sense - just not to a beginner. 
&lt;/p&gt;

&lt;p&gt;
Javascript also gives plenty of freedom - there are many ways to do
things. This can be great for the developer but not necessarily ideal
for the learner. Loops, recursion, mapping functions - you name it,
Javascript's got it. I like simpler languages for beginners because
it's easier to get them thinking and problem solving in certain ways
when there tool set is somewhat restricted (more on that when I write
about Scheme).
&lt;/p&gt;

&lt;p&gt;
Finally, the fact that Javascript's a mainstream language can be a
minus. Given its popularity, a beginner class could have at  least a
few kid who've at least played with the language. This can lead them
to think they know more than they do and more importantly, this can
be intimidating to the real newbies who develop the impression that
"everyone knows this but me." A less mainstream language puts everyone
on a level playing field.
&lt;/p&gt;

&lt;p&gt;
Let me say again that I love javascript as a language and before a
student graduates Stuy they can learn all about Javascript, front end
development, some functional programming, and more. It's just not the
right language to start with - at least not at Stuy.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>cs</category><category>curriculum</category><category>education</category><category>languages</category><guid>http://cestlaz.github.io/posts/starting-with-js/</guid><pubDate>Mon, 13 Feb 2017 13:45:48 GMT</pubDate></item><item><title>Should CS Ed be in bed with the College Board</title><link>http://cestlaz.github.io/posts/cs-ed-in-bed-college-board/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;p&gt;
I'm guessing my views  on this aren't very popular -that's OK, every
community needs a curmudgeon.
&lt;/p&gt;

&lt;p&gt;
A few years ago, I cautioned if we weren't careful, once the big
players got involved, CS Ed would go the way of other disciplines, and
not in a good way. It looks like indeed we're well on our way down
that road.
&lt;/p&gt;

&lt;p&gt;
I've ranted before about things like non-profits, drop in and summer
programs. &lt;a href="https://cestlaz.github.io/posts/2015-05-07-learning-takes-time.html/#.WJXSS99vHmE"&gt;STEM Oil Salesmen&lt;/a&gt; &lt;sup&gt;&lt;a id="fnr.1" name="fnr.1" class="footref" href="http://cestlaz.github.io/posts/cs-ed-in-bed-college-board/#fn.1"&gt;1&lt;/a&gt;&lt;/sup&gt;
selling easy fixes, exciting kids and parents, using the Think Method
just like Professor Harold Hill only to send the kids off where they
can blame a future teacher for failure.
&lt;/p&gt;

&lt;p&gt;
I've also ranted about teacher preparation and how all the rage is
short term, &lt;a href="https://cestlaz.github.io/posts/scotland/#.WJXT999vHmE"&gt;Superficial PD and scripted curricula&lt;/a&gt;  and my concern that   
once the politicians can say CS is in the schools, &lt;a href="https://cestlaz.github.io/posts/2015-03-04-expedient-vs-good.html/#.WJXT7d9vHmE"&gt;we'll be done&lt;/a&gt;.
&lt;/p&gt;

&lt;p&gt;
I've been working towards getting CS to all students for most of my
career and while it's wonderful to see us getting closer to the goal,
I'm seeing more and more signs that my caution is becoming
reality. and CS Ed is going the way of other Ed - aligned to testing
and more to the whims of the power players and politicians than to
teachers and students.
&lt;/p&gt;

&lt;p&gt;
The other week I noticed, &lt;a href="http://teacherblog.code.org/post/156278055294/ap-cs-principles-could-make-history-how-can-we"&gt;this post&lt;/a&gt; by Code.org trying to encourage
more students to take the APCSP exam - not encourage more students
take the class or some other class or to have more students be exposed
to CS but to actually sit for the APCSP exam. That post was followed
by &lt;a href="http://teacherblog.code.org/post/156689658029/ask-your-cs-principles-students-to-star-in-our"&gt;this one&lt;/a&gt; which also highlights actually taking the exam.
&lt;/p&gt;

&lt;p&gt;
This didn't sit well with me. 
&lt;/p&gt;

&lt;p&gt;
What does the exam do for the kid? It doesn't drive instruction - by
that time, any good teacher knows their student and is better served
by using their own &lt;a href="https://cestlaz.github.io/posts/ap-we-dont-trust-teachers/#.WJXbA99vHmE"&gt;assessments&lt;/a&gt;. The college credit thing? I'm
skeptical. Fewer and fewer schools are giving credit for APCSA let
alone this new CS0 non major course. Blanket credit? Since full time
students pay for a range of credits, I'm still skeptical
here. Placement? It's a course for non-majors - what exactly are you
placing out of?
&lt;/p&gt;

&lt;p&gt;
Reasons not to take the exam?
&lt;/p&gt;

&lt;ul class="org-ul"&gt;
&lt;li&gt;If it doesn't do anything for the kid, why take it
&lt;/li&gt;
&lt;li&gt;Stress of taking the exam
&lt;/li&gt;
&lt;li&gt;There are other ways of placing out of courses once in college
&lt;/li&gt;
&lt;li&gt;Save the expense
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
As a general rule, I'm against forcing students to sit for
AP exams. At the extreme case, since we've been brainwashed to think
that a school that has lots of kids sitting for exams is good, I've
seen at least one case of a principal having all his kids sit for, and
just about all &lt;b&gt;&lt;b&gt;fail&lt;/b&gt;&lt;/b&gt; AP Calculus - that is, get a 1 or 2 on the exam. This
principal had all his students take the exam, and only 2 scores were 3
or higher. This principal then parlayed his success into a higher
profile gig - he's moved up in the world while setting up his students
to fail.
&lt;/p&gt;

&lt;p&gt;
This follows last year's announcement that code.org was &lt;a href="https://cestlaz.github.io/posts/2015-05-19-code-org-college-board.html/#.WJXbm99vHmE"&gt;partnering with
the College Board&lt;/a&gt; - offering PD to teachers for free if the schools
signed up their students for the PSAT 8/9 - another meaningless
exam. So, we get teacher training light &lt;sup&gt;&lt;a id="fnr.2" name="fnr.2" class="footref" href="http://cestlaz.github.io/posts/cs-ed-in-bed-college-board/#fn.2"&gt;2&lt;/a&gt;&lt;/sup&gt; as long as the school pays for
the PSAT8/9 for every kid so that the kid can take yet another test
with really no value&lt;sup&gt;&lt;a id="fnr.3" name="fnr.3" class="footref" href="http://cestlaz.github.io/posts/cs-ed-in-bed-college-board/#fn.3"&gt;3&lt;/a&gt;&lt;/sup&gt;.
&lt;/p&gt;

&lt;p&gt;
Why should students pay for an AP exam that doesn't do anything for
them? Why should Jane Q Taxpayer pay for exams that only server to
enrich the College Board.
&lt;/p&gt;

&lt;p&gt;
True, The College Board is a big player. They already have much more
influence of American High School education than they should. It's
easy to climb on board the AP train for entre into our schools. The
question is, should we use positions of influence to push efforts that
might help our end but leave collateral damage to students and the public.
&lt;/p&gt;

&lt;p&gt;
I don't doubt code.org's sincerity in wanting good CS in all schools
nor the efforts or value as an advocate for CS Education. I'm
concerned that the desire to win big and win now is moving us in a
direction that we'll regret years from now.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="footnotes"&gt;
&lt;h2 class="footnotes"&gt;Footnotes: &lt;/h2&gt;
&lt;div id="text-footnotes"&gt;

&lt;div class="footdef"&gt;&lt;sup&gt;&lt;a id="fn.1" name="fn.1" class="footnum" href="http://cestlaz.github.io/posts/cs-ed-in-bed-college-board/#fnr.1"&gt;1&lt;/a&gt;&lt;/sup&gt; &lt;p&gt;Not my term, but I really like it&lt;/p&gt;&lt;/div&gt;

&lt;div class="footdef"&gt;&lt;sup&gt;&lt;a id="fn.2" name="fn.2" class="footnum" href="http://cestlaz.github.io/posts/cs-ed-in-bed-college-board/#fnr.2"&gt;2&lt;/a&gt;&lt;/sup&gt; &lt;p&gt;If you think that PD based
teacher training is OK, ask yourself if you want your own child's
chemistry teacher to be a history teacher with a few weeks summer
training in chemistry&lt;/p&gt;&lt;/div&gt;

&lt;div class="footdef"&gt;&lt;sup&gt;&lt;a id="fn.3" name="fn.3" class="footnum" href="http://cestlaz.github.io/posts/cs-ed-in-bed-college-board/#fnr.3"&gt;3&lt;/a&gt;&lt;/sup&gt; &lt;p&gt;And I'm guessing the exam will be offered
during the day so teachers will proctor for free rather than be
allowed to, you know, teach their students.&lt;/p&gt;&lt;/div&gt;


&lt;/div&gt;
&lt;/div&gt;</description><category>cs</category><category>education</category><category>policy</category><guid>http://cestlaz.github.io/posts/cs-ed-in-bed-college-board/</guid><pubDate>Sat, 04 Feb 2017 11:00:00 GMT</pubDate></item><item><title>BS? - BA</title><link>http://cestlaz.github.io/posts/ba-bs/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;blockquote&gt;
&lt;p&gt;
I didn't know Hunter College had computer science.
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
I heard that refrain more than once during my fall visits to high
schools. Part of the reason for this is due to Hunter CS's low
profile and small size in spite of its high quality.
&lt;/p&gt;

&lt;p&gt;
Part, though, was also because of some misconceptions about Computer
Science programs. I'd hear things like "but they only offer a BA not a
BS," or "but Hunter isn't an engineering school."
&lt;/p&gt;

&lt;p&gt;
I've come to realize that we have to do a better job educating kids as
to what can come next after high school.
&lt;/p&gt;

&lt;p&gt;
I'm not entirely sure why many assume that CS has to be under
engineering. When I was applying to college, most of my choices were
Arts and Science schools offering BAs in CS. Maybe it's because people don't
disagregate STEM subjects. Even though it's not a computer science
program many schools seem to associate FIRST robotics with computer
science. Likewise any class with even a modicum of coding becomes
computer science and as makerspaces and robotics are a percieved as
easy entry STEM classes that appear to be CS (something I'll rant
about in a future post), CS becomes associated with engineering.
&lt;/p&gt;

&lt;p&gt;
It's easy enough to explain the difference between a BA in CS and a BS
in CS and it's equally easy to show that you can have tremendous
success either way. All you have to do to show the validity of a BA in
CS is look at succesful people from places like NYU, Courant, Columbia
College (as opposed to Columbia Engineering), Cornell school of Arts
and Sciences, etc to balance successful people from the engineering schools.
&lt;/p&gt;

&lt;p&gt;
As I'm sure you know, I'm pretty high on Hunter CS and it's certainly
one of the best value CS educations out there. Personally, I'm a big believer in a
liberal arts education but in any case, as a community we have to do a
better job educating the high schools so that graduating seniors are
best informed when deciding on their futures.
&lt;/p&gt;</description><category>cs</category><category>education</category><guid>http://cestlaz.github.io/posts/ba-bs/</guid><pubDate>Mon, 02 Jan 2017 01:14:25 GMT</pubDate></item><item><title>Selling out or getting a seat at the table</title><link>http://cestlaz.github.io/posts/selling-out-or-a-seat-at-the-table/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;p&gt;
The other day, a friend posited a question on Facebook (paraphrased):
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;
If called upon, would you take a job in an administration who's policies you strongly
disagreed with?
&lt;/p&gt;
&lt;/blockquote&gt;


&lt;p&gt;
Would you go work for an administration that you reviled in order to
get a seat at the table? To try to affect change from the inside or
would you consider yourself a sellout or worse, publicly promote
positions you disagree with.
&lt;/p&gt;

&lt;p&gt;
Tough question.
&lt;/p&gt;

&lt;p&gt;
The original question implied national level positions. I've never and
will never breath such rarefied air but I have had such experiences
closer to ground level, both with DOE projects and also in
conversations with some charter chains.
&lt;/p&gt;

&lt;p&gt;
My take?
&lt;/p&gt;

&lt;p&gt;
Anyone that knows me knows that I've had various dealings with the NYC
DOE and also knows that those dealings never resulted in outcomes I
was happy with. Over my time at Stuy, I had many philosophical
differences with Tweed (a common nickname for the NYC DOE as they're
housed in the old Tweed courthouse) and these were times where I tried
to play nice to have a seat at the table.
&lt;/p&gt;

&lt;p&gt;
Once I was at a meeting that also included a number of tech industry
heavy hitters. After the meeting, one came over to me. He knew me
by having worked with my former students. I knew him by reputation. He
asked "do they really want our thoughts on this or are we just here so
that they can do what they wanted in the first place and then parade us out 
to say that they consulted experts in the tech industry?" I honestly
didn't know at the time but I had my doubts as to the DOE's sincerity
in being open to either my views or this CTO's As it turned out, they
just did want to parade us. Later in the process, I was told in a back
room that it would be wise of me not to publicly voice my thoughts
about the direction of one particular project.
&lt;/p&gt;

&lt;p&gt;
So there you have it. I was given a seat at the table but only as long
as my views mirrored the views of those in power. Not really much of a
seat. 
&lt;/p&gt;

&lt;p&gt;
I've also sat down with some charter chains - chains that I've been
more than happy to denounce publicly. Why did I take the meetings?
Mostly to find out if I was mistaken in my position and if so, maybe
I could help them. Every time I've had such a meeting, however, I've
left the table with my feelings unchanged and knowing that I would
never willingly help them as I felt their practices were harmful to
kids.
&lt;/p&gt;

&lt;p&gt;
In one case, I took the seat but failed to affect change. In the other
I refused the seat. I'll always take a meeting and I'll always work
with someone who wants to help kids and who has an open mind but I've
found that the more powerful the player, at least in education, the
more likely they are to just want confirmation of their own bias.
&lt;/p&gt;

&lt;p&gt;
You might get a seat at the table but you also might end up lending
your reputation to a cause you don't believe in.
&lt;/p&gt;</description><category>education</category><category>policy</category><guid>http://cestlaz.github.io/posts/selling-out-or-a-seat-at-the-table/</guid><pubDate>Thu, 01 Dec 2016 00:47:17 GMT</pubDate></item><item><title>Evaluate teachers like they do in the real world</title><link>http://cestlaz.github.io/posts/evaluating-teachers/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;p&gt;
This old article has been reposted a few times in my circles over the
past few weeks &lt;a href="http://educationnext.org/facadeofexcellence/"&gt;http://educationnext.org/facadeofexcellence/&lt;/a&gt;. It's from
2003 and complains about the lack of flexibility schools had back then
with regard to hiring and salary. The article is old and out of date
and the seniority system no longer holds for hiring but it does for
lay offs. The salary scale from back then, though, is still in place. 
&lt;/p&gt;

&lt;p&gt;
My friend Alex  asked my thought about how we might deal with evaluating
teacher quality. I thought I'd share them here.
&lt;/p&gt;

&lt;p&gt;
Alex listed a number of commonly tried and suggested options on
teacher evaluation and why they're all flawed. 
&lt;/p&gt;

&lt;p&gt;
I haven't asked Alex's permission so I won't post his list and
comments here. Instead let's start with the boogeyman those that attack public
education always trot out â€“ tenure.
&lt;/p&gt;

&lt;p&gt;
Let's get a couple of things straight - tenure is not a job for
life. For K12 teachers, it's the right to due process. That means you
can't be fired without cause. 
&lt;/p&gt;

&lt;p&gt;
I hear the free market capitalists out there already â€“ "in the real
world, you're an at will employee, why do teachers need this due
process?" - I'll get to that down below. For now, let's look at a few
points on tenure:
&lt;/p&gt;

&lt;p&gt;
First - you can fire a tenured teacher, you just have to document your
case. This means that the supervisor has to actually do their job.
&lt;/p&gt;

&lt;p&gt;
Next - people can complain about rubber rooms and the time it takes to
fire one of these tenured teachers. That's because the DOE won't hire
sufficient hearing officers. In a recently resolved case, a friend of
mine - a terrific AP was finally returned to her post after she was
railroaded on false charges. She was in the rubber room for years. The
DOE kept delaying the process â€“ all she wanted was to go to "trial"
since everyone knew she'd be exonerated - the fact that she was up on
charges at all speaks to why teachers need tenure.
&lt;/p&gt;

&lt;p&gt;
Next - teachers don't grant tenure, the administration does. Why are
all these horrible teachers being granted tenure? Stories abound of
administrators granting tenure to bad teachers so long as they
transfer to another school - who's to blame here? 
&lt;/p&gt;

&lt;p&gt;
Finally, the contract that establishes tenure is jointly negotiated
by the teachers union and the city - no one ever seems to complain
about the city.
&lt;/p&gt;

&lt;p&gt;
Next, let's talk about bonuses and competition. People in the business
world take the false assumption that everyone thinks, acts, and feels like
they do. Here's a surprising fact â€“ teachers aren't in it for the
money. Sure, we'd like to make a little more - perhaps enough to
actually  live in a decent apartment and not need a second job to make
ends meet -  but no one went into teaching to get rich. Teachers are in
it to uplift ALL their students and their school as a whole. 
&lt;/p&gt;

&lt;p&gt;
Now let's look at the model currently in vogue - value added
measures. Besides the fact that they're arbitrary and don't work (see
&lt;a href="http://cestlaz.github.io/posts/2013-09-06-why_i_might_no_longer_be_an_effective_teacher.md/"&gt;this post&lt;/a&gt; and &lt;a href="http://cestlaz.github.io/posts/2013-10-25-effective-teacher-2.md/"&gt;this one&lt;/a&gt;) they're nothing like how people are evaluated
in the real world.
&lt;/p&gt;

&lt;p&gt;
How are people evaluated in regular jobs? As far as I know, they're
evaluated by their managers and bosses - possibly also by their peers.
&lt;/p&gt;

&lt;p&gt;
Funny thing - that's how teachers used to be evaluated before all this
nonsense brought about by the "reformers." Of course, no one will
admit to this. 
&lt;/p&gt;

&lt;p&gt;
Did this system work? For the most part, but not entirely. Why were
there problems? Because, unlike a business, principals are not
necessarily incentivized to have the best teachers. 
&lt;/p&gt;

&lt;p&gt;
Schools and principals are evaluated on ridiculous metrics - the same
standardized tests they use to evaluate teachers. To look at a small
piece â€“ to graduate high school, kids need to pass at least one math
regents and pass three years of math classes. To be "college ready" a
student still only needs to pass one math regents and take at least
one year of geometry or trig.
&lt;/p&gt;

&lt;p&gt;
This means that as far as math is concerned, a principal is
incentivized to have a math department that can get their kids through
the algebra regents. Here's how this frequently plays out. The kids
take algebra over two years and then passes the exam. The kids take
geometry as their third year. They don't have to pass the regents, but
it appears that in order to increase a student's chances of passing
that exam, classes don't teach proof - the most important and hardest
part of the class. Why not? Because it's easier to pass the exam by
learning most of the other stuff.
&lt;/p&gt;

&lt;p&gt;
Here we have a school where the incentive is to hire teachers that can
teach to the algebra regents and that's about it.
&lt;/p&gt;

&lt;p&gt;
That's at a school with a low performing population. In a higher
performing school, the kids will do well on the standardized tests
regardless of teacher quality so there's no incentive to hire the
best. Even if that's what they want to do, there's no way to know if
they're actually doing it.
&lt;/p&gt;

&lt;p&gt;
Back to why teachers need due process. Since principals aren't held
accountable in any reasonable way, teachers can't be. The end result
is that teachers are subject to abuses by principals. I myself was
once brought up on bogus charges raised by a principal (not a Stuy
one) who wanted to make trouble. Without due process, I would be out
of a job. So would many others.
&lt;/p&gt;

&lt;p&gt;
The answer? To me it's figure out how to hold principals
accountable. In Alex's Facebook post he  mentions evaluation by
college and workforce success but that has a slow feedback loop. The
truth is, education does have a slow feedback loop. Schools, however,
exist for along time and principals should have tenure periods of more than
just a couple of years.
&lt;/p&gt;

&lt;p&gt;
My feelings? Why not look at graduates succeeding in college or on the
tax rolls? This wouldn't be perfect but it would be a start. While NY
can't count on private universities sharing accurate information in a
timely manner there should be a way of tracking if a high school
graduate is enrolled in a SUNY or CUNY one, two, three, or four
semesters after graduation. Create a baseline for a school and start
from there. 
&lt;/p&gt;

&lt;p&gt;
If principals were actually accountable in a reasonable
way they'd have incentive to have the best teachers. Then we can get
back to the old system which was indeed the way the "real world"
works.
&lt;/p&gt;</description><category>education</category><category>policy</category><guid>http://cestlaz.github.io/posts/evaluating-teachers/</guid><pubDate>Sat, 19 Nov 2016 21:47:32 GMT</pubDate></item></channel></rss>