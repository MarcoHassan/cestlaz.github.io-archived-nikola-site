<?xml version='1.0' encoding='UTF-8'?>
<?xml-stylesheet href="http://cestlaz.github.io/assets/xml/atom.xsl" type="text/xsl media="all"?>
<feed xml:lang="en" xmlns="http://www.w3.org/2005/Atom">
  <title>C'est la Z (old posts, page 39)</title>
  <id>http://cestlaz.github.io/index-39.atom</id>
  <updated>2018-06-03T15:26:24Z</updated>
  <author>
    <name>Mike Zamansky</name>
  </author>
  <link rel="self" type="application/atom+xml" href="http://cestlaz.github.io/index-39.atom"/>
  <link rel="next" type="application/atom+xml" href="http://cestlaz.github.io/index-38.atom"/>
  <link rel="previous" type="application/atom+xml" href="http://cestlaz.github.io/index.atom"/>
  <link rel="current" type="application/atom+xml" href="http://cestlaz.github.io/index.atom"/>
  <link rel="prev-archive" type="application/atom+xml" href="http://cestlaz.github.io/index-38.atom"/>
  <link rel="alternate" type="text/html" href="http://cestlaz.github.io/index-39.html"/>
  <generator uri="https://getnikola.com/">Nikola</generator>
  <entry>
    <title>No Magic Bullets - Discovery Learning</title>
    <id>http://cestlaz.github.io/posts/no-magic-bullets-constructivism/</id>
    <updated>2018-04-21T07:40:16-04:00</updated>
    <published>2018-04-21T07:40:16-04:00</published>
    <author>
      <name>Mike Zamansky</name>
    </author>
    <link rel="alternate" type="text/html" href="http://cestlaz.github.io/posts/no-magic-bullets-constructivism/"/>
    <summary type="html">&lt;div id="outline-container-org4df9158" class="outline-2"&gt;
&lt;h2 id="org4df9158"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org4df9158"&gt;
&lt;p&gt;
The most recent NYC CSTA chapter meeting was "How do I assess CS?" I
wanted to go but it's been such a crazy month I was just too wiped
out. Fortunately, the meetup was &lt;a href="https://www.youtube.com/watch?v=XIMKAZbHAiA&amp;amp;index=83&amp;amp;list=WL&amp;amp;t=1796s"&gt;recorded&lt;/a&gt;. I was able to watch the
first half this morning while working out on my &lt;a href="https://www.staczero.com/hero"&gt;stationary trainer&lt;/a&gt;
which leads me to today's rare Saturday morning blog
post. The meetup consisted of two panels. The first was made up of K12
teachers who taught CS. I can't talk about the second panel yet since I'm
only halfway through but there were a couple of points made by my
friend &lt;a href="https://twitter.com/KatieJergens"&gt;Katie Jergens&lt;/a&gt; who teaches at Dalton that I thought were worth
talking about.
&lt;/p&gt;

&lt;p&gt;
The first was when Katie noted that through working with the panel,
one of her takeaways was that:
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;
Giving students an explicit strategy for solving a problem - "this is
how I would do it….," - giving them an explicit strategy first and then giving them a
problem for which that strategy would apply is much more effective than
having them discover it on their own.
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
This was refreshing to hear after being beaten over the head on
discovery learning and constructivism for the past five or so
years as being the magic bullet for teachers. I shared more thoughts
on this a few weeks ago when I wrote about a SIGCSE paper presented by
&lt;a href="https://cestlaz.github.io/posts/sigcse2018-bootstrap/"&gt;Bootstrap World&lt;/a&gt; that I very much liked. 
&lt;/p&gt;

&lt;p&gt;
Katie went on to talk about how the group found that while "discovery
learning" can be effective it can also be frustrating and lose kids
along the way. It also takes a lot of time and preparation, something
that's short on supply in most public schools.
&lt;/p&gt;

&lt;p&gt;
This made me think about the recent flurry
of discussion around the debunking of learning styles which had
previously been the magic bullet. When I started, the secret sauce was cooperative
learning. 
&lt;/p&gt;

&lt;p&gt;
Of course any good teacher knows there's no magic bullet. You fill
your tool belt and chest with as much as you can and use what's
best based on your strengths as a teacher combined with what will work
best with your students.
&lt;/p&gt;

&lt;p&gt;
Another point that Katie made that I found refreshing had to do with 
something she does with her classes. A good portion of a student's grade is
based on what she calls a "booster." Each student has to work one on
one with her on some project. The student either scores a 0 or a 100 -
the student keeps working with the direct support of the teacher until
it's perfect. 
&lt;/p&gt;

&lt;p&gt;
The important thing that Katie said with respect to this is "I can
do this because my largest class is sixteen students." No way could
this ever scale to a public school where a teacher can meet with over
150 students a day and barely has time eat lunch let alone
work one on one with a student in a suitably quiet place like an
office. The refreshing thing to hear was the acknowledgment of the
fact that what works in a rich private school won't work in a public
school. 
&lt;/p&gt;

&lt;p&gt;
All to often education and yes, CS Ed is driven by people who
really have no clue. They're anointed as thought leaders but they
don't walk the walk. Some have some knowledge and experience but many
don't. Until you've gotten a few years under your belt in a strap
cashed public school that takes all comers, don't tell them how they
should do it. Katie didn't - she acknowledged the problem - too bad so
many others don't. 
&lt;/p&gt;

&lt;p&gt;
I'm looking forward to watching the rest of the video during a future
workout and might have more to share then. For now, take a look for
yourself.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</summary>
    <category term="assessment" label="assessment"/>
    <category term="csed" label="csed"/>
    <category term="teaching" label="teaching"/>
  </entry>
  <entry>
    <title>Unit Tests Grading Workflow</title>
    <id>http://cestlaz.github.io/posts/unit-tests-grading-workflow/</id>
    <updated>2018-04-20T17:49:28-04:00</updated>
    <published>2018-04-20T17:49:28-04:00</published>
    <author>
      <name>Mike Zamansky</name>
    </author>
    <link rel="alternate" type="text/html" href="http://cestlaz.github.io/posts/unit-tests-grading-workflow/"/>
    <summary type="html">&lt;div id="outline-container-org3003fc5" class="outline-2"&gt;
&lt;h2 id="org3003fc5"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org3003fc5"&gt;
&lt;p&gt;
I've talked before about unit testing (&lt;a href="http://cestlaz.github.io/posts/testing-testing"&gt;here&lt;/a&gt;, and &lt;a href="http://cestlaz.github.io/posts/testing-part2"&gt;here&lt;/a&gt;). My premise is
that in addition to being an important industry technique, it's a
sound practice for students studying CS. I also contend that it can
make grading easier on the teacher. Maybe not as easy as an
auto-grader but those have &lt;a href="https://cestlaz.github.io/posts/2015-10-16-graders.html/#.WtplHHXwZhE"&gt;their own problems&lt;/a&gt;. 
&lt;/p&gt;

&lt;p&gt;
Since I spent most of today grading I thought I'd share my current
workflow and how unit tests have made me more efficient.
&lt;/p&gt;

&lt;p&gt;
I have each student make a single GitHub repo for all individual
homeworks, labs and small projects. They'll make additional repos for
larger and group projects. They fill out a Google form to give me the
repo link. I download the form and end up with a CSV file something like this:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Doe, John, git@github.com:johndoe/mymoework.git
Doe, Jane, git@github.com:janedoe/labs.git
etc.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;
My goal is to clone each students repo into a directory and then
throughout the term, they add assignments to their own repos using the
names and specifications I give them. For example, after assigning
three assignments, I could pull everything from their repos and I
would have a directory structure something like this:
&lt;/p&gt;


&lt;pre class="example"&gt;
hw
├── doe_jane
│   ├── hw_01
│   ├── hw_02
│   └── hw_03
│ 
└── doe_john
    ├── hw_01
    └── hw_02
&lt;/pre&gt;

&lt;p&gt;
To get there, I have to change the csv file to a small shell script:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git clone git@github.com:johndoe/mymoework.git doe_john
git clone git@github.com:janedoe/labs.git doe_jane
etc.
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
I usually do this in Emacs with a macro.
&lt;/p&gt;

&lt;p&gt;
Now I'm ready to go.
&lt;/p&gt;

&lt;p&gt;
Whenever there's a new assignment, I just have to update all the
repos. I go into the root hw directory and loop through all the
subdirectoryes:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cs /path/to/hw_root
for i in `ls`
do 
  cd /path/to/hw_root/$i
  git pull
done
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
At this point I could go into each repo but we can do better. Since I
have all of my students submit a Makefile with a default target to
build an executable named &lt;code&gt;main&lt;/code&gt; and also a target named &lt;code&gt;tests&lt;/code&gt; which
will build an executable to run the unit tests named &lt;code&gt;tests&lt;/code&gt; I do this
instead of a straight pull:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cs /path/to/hw_root
for i in `ls`
do 
  cd /path/to/hw_root/$i
  git pull
  cd hw_03 # or whatever assignment I'm grading
  make tests
  make 
done
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Now, if I want, I can go into each directory, run the tests by typing
&lt;code&gt;./tests&lt;/code&gt;  and the hw or project with &lt;code&gt;./main&lt;/code&gt;. I can also add a
couple of lines to the for loop above like:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;echo "$i Test Report\n----------------\n" &amp;gt;&amp;gt; /path/to/hw_root/test_report
./tests &amp;gt;&amp;gt; /path/to/hw_root/test_rport
echo "----------------------\n\n"
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
This gives me a single file with everyone's test results. Either by
doing this or by running the tests in each folder manually I can
quickly see what works and what doesn't.
&lt;/p&gt;

&lt;p&gt;
While I'm doing this, I have Emacs up and with &lt;b&gt;dired mode&lt;/b&gt; and more
specifically &lt;b&gt;ag-dired-regexp&lt;/b&gt; which lets me easily
navigate to any student's files. Combined with the test results I can
quickly evaluate the entire assignment.
&lt;/p&gt;

&lt;p&gt;
Put all of this together and it makes grading somewhat bearable. I can
work through well written, correct assignments extremely quickly and
drill down into the other projects efficiently as well.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</summary>
    <category term="emacs" label="emacs"/>
    <category term="grading" label="grading"/>
    <category term="testing" label="testing"/>
    <category term="workflow" label="workflow"/>
  </entry>
</feed>
