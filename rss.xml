<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>C'est la Z</title><link>http://cestlaz.github.io/</link><description>C'est la Z</description><atom:link type="application/rss+xml" href="http://cestlaz.github.io/rss.xml" rel="self"></atom:link><language>en</language><lastBuildDate>Tue, 11 Jul 2017 01:30:49 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>A friendly reminder to use the right language when</title><link>http://cestlaz.github.io/posts/languages-or-cs/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;p&gt;
I was part of this conversation the other day:
&lt;/p&gt;

&lt;blockquote class="twitter-tweet" data-lang="en"&gt;&lt;p lang="en" dir="ltr"&gt;When science teachers asked me if I taught AP Java I'd always respond by asking them if they taught AP Microscope.&lt;/p&gt;— Mike Zamansky (@zamansky) &lt;a href="https://twitter.com/zamansky/status/883327927831711745"&gt;July 7, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;

&lt;p&gt;
I always use that line to emphasize that I teach CS - a way of
thinking and problem solving and looking at the world. The languages
we use in our classes are tools to help us communicate ideas not the
ends but rather a means.
&lt;/p&gt;

&lt;p&gt;
I've spent the past couple of days at the CSTA conference. It's been a
lot of fun. I've been spending the time with old friends and meeting
new ones and as everyone who knows me knows - I love talking shop. 
&lt;/p&gt;

&lt;p&gt;
I overheard a conversation today. One CS teacher describing what they
did to a few others. I overheard:
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;
We teach Scratch then Swift and C++ and also teach Python
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
I heard statements like this describing programs more than a couple of
times. I know we're at a conference of CS Educators but even in this
community we have everything from beginners getting their feet wet to
hardcore computer scientists to everything in between.
&lt;/p&gt;

&lt;p&gt;
We shouldn't be teaching languages as an ends unto themselves and the
majority of us don't.
&lt;/p&gt;

&lt;p&gt;
What many of us do, though, is take the easy path and use the name of
a programming language to describe what we do rather than really
define what we do. This is why we here "I teach Java" or "I teach a
class in Swift" even when the teacher teaching Java might really be
teaching Object Oriented program design and development or data
structures or something similar just using Java as the language or
tool.
&lt;/p&gt;


&lt;p&gt;
I too fall into this trap but I try to catch myself. I try not to say
"I teach Scheme" but rather I'll say "I teach Scheme. Actually, we're
studying functional programming using Scheme as the language but for
convenience, I'll just say Scheme for the rest of this talk…."
&lt;/p&gt;

&lt;p&gt;
The words we use to describe our field set the tone. If we're sloppy
and say "we teach Java," it's just like biology teacher saying "I
teach microscope." 
&lt;/p&gt;

&lt;p&gt;
As we try to define our field in the K12 space and seek equal footing
with established subject areas it's important that we use the right
language so that other educators and policy makers don't get the wrong
idea.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>cs</category><category>csed</category><category>education</category><guid>http://cestlaz.github.io/posts/languages-or-cs/</guid><pubDate>Tue, 11 Jul 2017 01:17:47 GMT</pubDate></item><item><title>Self Certification - not a good idea</title><link>http://cestlaz.github.io/posts/dont-self-certify/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;p&gt;
You've probably seen an image like this:
&lt;/p&gt;


&lt;div class="figure"&gt;
&lt;p&gt;&lt;img src="http://cestlaz.github.io/img/dont-self-certify/self-signed.png" alt="self-signed.png" align="center"&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;
It's what you see when you try to access a secure web site but the web
site itself certified itself as being secure.
&lt;/p&gt;

&lt;p&gt;
When people see this on a professional site it sets off all manner of
red flags. We feel much more comfortable when go to a site and we
don't see that error. When we see the secure green lock in the url bar
indicating that this site is certified through an external trusted
source.
&lt;/p&gt;

&lt;p&gt;
Let's take this a step further. If you needed surgery would you go to
a board certified surgeon or would you go to Dr. Nick Riviera or some
other "self certified" doctor? Likewise you wouldn't want to be
represented in court by someone who hasn't passed the bar. 
&lt;/p&gt;

&lt;p&gt;
We might not feel that these certification and licensing processes are
perfect but when we need the services of a doctor or lawyer, we're
happy these gatekeepers exist.
&lt;/p&gt;

&lt;p&gt;
So we should all be extremely concerned with today's announcement that
the deal for mayoral control just brokered in NYC came with strings
attached and one of those strings looks to open the doors to give some
charter chains the ability to self certify their teachers.
&lt;/p&gt;

&lt;p&gt;
Here's a story on it in &lt;a href="http://www.politico.com/states/new-york/city-hall/story/2017/07/06/with-city-charters-poised-to-win-certification-deal-education-schools-fret-113243"&gt;Politico&lt;/a&gt; and one in &lt;a href="http://www.chalkbeat.org/posts/ny/2017/07/06/some-charter-school-teachers-could-become-certified-without-a-masters-under-proposed-new-suny-rules/"&gt;Chalkbeat&lt;/a&gt;.
&lt;/p&gt;

&lt;p&gt;
One might think that some requirements to become a teacher are
ridiculous. I'll get to them later  but this is really giving the fox
the keys to the henhouse.
&lt;/p&gt;

&lt;p&gt;
Charters appear to have extremely high rates of teacher attrition so
it makes sense that they want to control their teacher pipeline. This
alone should be a red flag against self certification but what else
are charter chains known for?
&lt;/p&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Misleading stats - claiming amazing passing numbers on standardized
exams while neglecting to mention that somehow or other big blocks
of students were removed from the school prior to the test year
(&lt;a href="http://www.shankerinstitute.org/blog/student-attrition-and-backfilling-success-academy-charter-schools-what-student-enrollment"&gt;link&lt;/a&gt;).
&lt;/li&gt;
&lt;li&gt;The gotta go list
&lt;/li&gt;
&lt;li&gt;Forcing high levels of parent involvement (tough for single working
parents)
&lt;/li&gt;
&lt;li&gt;Charging &lt;a href="http://www.houstonchronicle.com/news/education/article/KIPP-schools-collected-millions-in-unallowable-11257006.php"&gt;illegal fees&lt;/a&gt;.
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
Top this off with as taking resources from public schools.
&lt;/p&gt;

&lt;p&gt;
Charters operate in anything but a transparent manner and we're
expected to trust them to prepare "highly effective" teachers? I don't
think so. Since there is no real accountability for charter schools -
they can easily game the system through student attrition, selective
admissions (by putting up barriers to enter the lottery) and test prep
they can pay lip service to teacher preparation and the public will be
none the wiser. 
&lt;/p&gt;

&lt;p&gt;
If we had a reasonable way of holding principals accountable and no,
test scores are not the answer then we could pretty much do away
with teacher certification. If principals were held to task to run an
effective school, something we can easily define but not measure, then
they would have every incentive to hire the best
teachers. Unfortunately we're nowhere near that place.
&lt;/p&gt;

&lt;p&gt;
Since we're not, we're left with the current systems of teacher
certification that has it's own slew of problems. A big part of it, in
my opinion is that schools of education have lost the high
ground. While there are some institutions doing great work, reputation
wise, schools of education are held in very low regard. Strong
teachers trade stories of the watered down content classes and waste
of time classes where professors share their pet theories of
education. I can't tell you how many times I've heard the new
definitive way to teach. At the same time, education research is
frequently held in low regard by teachers and the general public. 
&lt;/p&gt;

&lt;p&gt;
On the one hand we have charters run by and support by non-educators
wanting us to trust them and on the other we have institutions that
are questioned by the teachers they produce and the general public.
&lt;/p&gt;

&lt;p&gt;
What a mess.
&lt;/p&gt;

&lt;p&gt;
I don't know the answer. I'm working on teacher certifications
programs at Hunter and it's a balancing act. How much content is
sufficient and how much is too much. Can any of the general content be
streamlined or is it all necessary. If it isn't necessary do we need
it anyway to satisfy the bean counters?
&lt;/p&gt;

&lt;p&gt;
If you don't have enough then we're sending unprepared teachers into
the classroom. Too much and we'll drive potential teachers away.
&lt;/p&gt;

&lt;p&gt;
As computer science education is defining itself we see similar
struggles. We have some people advocating certifications analogous to
existing teacher certifications. On the other extreme we have
advocates for two weeks summer training and you're a CS teacher. I'd
like to think that I'm advocating for the sweet spot. Strong content
knowledge not tied to a specific course and matching content related
pedagogy. Time will tell becomes the certification standard and time
will tell whose approach was right.
&lt;/p&gt;

&lt;p&gt;
For now, it's important not to give away the store. Private charter
schools should not be the driving force behind teacher certification
and they certainly shouldn't be allowed to train their own teachers
and then 'teach' our students without much greater scrutiny.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;div id="outline-container-sec-2" class="outline-2"&gt;
&lt;h2 id="sec-2"&gt;Addendum:&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-2"&gt;
&lt;p&gt;
I'm sure some of my friends will point out that private schools aren't
held to any particular standard for teacher certification. This is
true but private schools don't take public funds. Actually they do but
in my opinion, they shouldn't. I maintain that charter schools are
publicly funded private schools in that they take public money but
operate as private entities. As such they should be held under the
greatest of scrutiny and standards – they aren't
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>certification</category><category>education</category><category>policy</category><guid>http://cestlaz.github.io/posts/dont-self-certify/</guid><pubDate>Fri, 07 Jul 2017 19:34:19 GMT</pubDate></item><item><title>A Plea to AP teachers- don't measure yourself by your scores</title><link>http://cestlaz.github.io/posts/teachers-you-arent-your-test-scores/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;p&gt;
AP scores just came out. As usual, I see the posts and take part in
conversations where teachers talk about their results. Some are happy
about their results, some aren't, some don't really care.
&lt;/p&gt;

&lt;p&gt;
I just want to make a plea to all AP teachers out there:
&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;&lt;b&gt;Don't let your value be dictated by the college board or any other
  exam.&lt;/b&gt;&lt;/b&gt;
&lt;/p&gt;

&lt;p&gt;
I never really cared much about my students' actual AP scores. There
were a number of years when I never even saw the results. Of course, I
had a population that would do reasonably well regardless of teacher
so I was never placed under any pressure to "do better." One year -
while the APCS-AB exam was still offered, my principal called me down
to discuss the results to see if we could get more kids scoring 4s and
5s (which most of the kids already did). I told him that I thought
we were doing fine, explained why I couldn't advocate more teaching to
the test (such as more than paying lip service to the case study or
more rote practice on the multiple choice), and told him how I
measured our success as a program. He was happy with my answer and
that was that. 
&lt;/p&gt;

&lt;p&gt;
The AP exam is one test on one day and in my opinion the least
valuable measure of my students' achievement. This is one of
the reasons I was so dismayed by the CSEd community's efforts in
pushing the AP exams - not the class or the subject but the actual exam.
&lt;/p&gt;

&lt;p&gt;
So, how should you judge your success? That's up to you. I can only
tell you how I judge myself.
&lt;/p&gt;

&lt;p&gt;
First and foremost - and I know this sounds cheesy - are you a "force
for good" in your student's lives. Do you leave them in a better
place? Have you opened the door to a possible future for them? Have
you helped them grow? Beyond that, have they progressed in your
subject and as students in general.
&lt;/p&gt;

&lt;p&gt;
I've had kids "fail" the AP exam and go on to wonderful careers in
tech and come back to thank me for giving them their start. I've also
had kids that have gone into other fields but appreciate what we've
done for them. I've also had my failures and I do mean my
failures. Students I couldn't reach or couldn't figure out how to
help.
&lt;/p&gt;

&lt;p&gt;
As teachers, we work day to day trying to improve but we can get a
great overview of how we're doing by using a much longer feedback
loop - looking at what our graduates are up to. When young teachers
would comment on former students coming back or running into them at
tech events that they would have graduates of their own in a few years
and invariably they do.
&lt;/p&gt;

&lt;p&gt;
To really evaluate how you're doing you have to go with the long
game. Very few people get that. I remember talking to a Google
Executive while I was designing CAPE 2010. He said something to the
effect of "I know we won't know if this program works for about ten
years but we'll have to come up with something short term to satisfy
the powers that be."  That so few "get it" and need instant feedback
is one of the reasons that our society is so test driven. We shouldn't
be. Our focus should be on helping the students learn and progress.
&lt;/p&gt;

&lt;p&gt;
So don't get distressed over AP results and don't get to high on them
either. Certainly don't use them to drive what and how you teach. Let
your students and your conscience be your guide.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>ap</category><category>apcs</category><category>csed</category><category>education</category><guid>http://cestlaz.github.io/posts/teachers-you-arent-your-test-scores/</guid><pubDate>Thu, 06 Jul 2017 21:22:10 GMT</pubDate></item><item><title>CS Teachers - teacher first or content first</title><link>http://cestlaz.github.io/posts/teacher-to-cs-or-cs-to-teacher/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;p&gt;
Is it easier to take CS people and teach them to teach or is it easier
to take teachers and teach them CS?
&lt;/p&gt;

&lt;p&gt;
The question gets batted around from time to time.
&lt;/p&gt;

&lt;p&gt;
This time via twitter:
&lt;/p&gt;


&lt;blockquote class="twitter-tweet" data-lang="en"&gt;&lt;p lang="en" dir="ltr"&gt;Some think it's easier to teach a teacher to teach CS than to teach a CS pro to teach. &lt;a href="https://twitter.com/alfredtwo"&gt;@alfredtwo&lt;/a&gt; is not one of them &lt;a href="https://t.co/QCUP8d8llZ"&gt;https://t.co/QCUP8d8llZ&lt;/a&gt;&lt;/p&gt;— Diane Levitt (@diane_levitt) &lt;a href="https://twitter.com/diane_levitt/status/881874056911388673"&gt;July 3, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;

&lt;blockquote class="twitter-tweet" data-lang="en"&gt;&lt;p lang="en" dir="ltr"&gt;Agreed. It takes a lot of work. More than a week long workshop.&lt;/p&gt;— Alfred Thompson (@alfredtwo) &lt;a href="https://twitter.com/alfredtwo/status/882243591090962432"&gt;July 4, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;

&lt;p&gt;
The conversation was referring to blog posts by &lt;a href="http://blog.acthompson.net/2017/06/become-computer-science-teacher-in-five.html?spref=tw&amp;amp;m=1"&gt;Alfred Thompson&lt;/a&gt; and &lt;a href="https://gflint.wordpress.com/2017/06/20/a-week-of-in-service-another-python-course/"&gt;Garth flint&lt;/a&gt;. 
Alfred's key point - one that I've spoken about before is that short
term professional development does not a CS teacher make.
&lt;/p&gt;

&lt;p&gt;
As to the lead in question? I've seen both routes succeed and both
routes fail. Both can be heavy lifts but there's a missing part of the
equation that's never addressed.
&lt;/p&gt;

&lt;p&gt;
The claim is that it's easier to teach CS to a non-CS teacher because
they already know how to teach. The problem is, particularly in the
later grades that teachers of different subject areas have very
different tool sets. Sure, there are common factors – get the kids
involved, layer, spiral, etc. but you don't teach a CS lesson the same
way you teach a math lesson let alone a literature, history, language
lesson. 
&lt;/p&gt;

&lt;p&gt;
In a math class, it's common to have students write solutions to
problems up on the board. If you try that in a CS class, you'll be
waiting 20 minutes while the kids transcribe the problems. Likewise,
math homework will likely consist of a certain amount of repetitive
practice problems whereas a CS class won't have something directly
analogous. This is not to say that you don't have opportunities for
students to present at the board in CS class or that there isn't
worthwhile homework but rather that even at this simple level, there
are differences. 
&lt;/p&gt;

&lt;p&gt;
So, if we're going to teach a non-CS teacher the CS content, beyond
the challenge of giving them the necessary depth and breadth of
content knowledge we have to teach them how to teach CS.
&lt;/p&gt;

&lt;p&gt;
I've inventoried some of the techniques my colleagues and I have used
in our classes and the collected methods could easily fill a couple of
graduate education courses. 
&lt;/p&gt;

&lt;p&gt;
So, what's the answer to the question? It doesn't matter where you
start but if we want to do right by our kids we need to prepare them
in not two but three areas:
&lt;/p&gt;

&lt;ul class="org-ul"&gt;
&lt;li&gt;CS Content
&lt;/li&gt;
&lt;li&gt;CS Pedagogy
&lt;/li&gt;
&lt;li&gt;General education and pedagogy
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
Short term PD (professional development) won't do it and neither will
scripts for "teachers" to follow. It's going to take time, will, and
effort.
&lt;/p&gt;

&lt;p&gt;
Here's hoping that municipalities look at the long game. It's fine to
do PD now to get something started but it's not enough. I wanted my
kids math teachers to know math and how to teach it. We should demand
no less from our CS teachers.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>education</category><category>policy</category><category>teaching</category><guid>http://cestlaz.github.io/posts/teacher-to-cs-or-cs-to-teacher/</guid><pubDate>Tue, 04 Jul 2017 20:39:43 GMT</pubDate></item><item><title>Using Emacs 35 - Blogging</title><link>http://cestlaz.github.io/posts/using-emacs-35-blogging/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;p&gt;
Very little new Emacs in today's episode of Using Emacs. The video
shows my old blogging workflow and what I'm playing with now.
&lt;/p&gt;

&lt;p&gt;
The only new Emacs covered is the &lt;a href="https://github.com/rejeep/prodigy.el"&gt;prodigy&lt;/a&gt; package which lets you run
services under Emacs. I use it to run &lt;a href="https://getnikola.com/blog/index.html"&gt;Nikola&lt;/a&gt;'s development server but
I think prodigy will also be useful when I start writing that knitting
application I promised my wife.
&lt;/p&gt;

&lt;p&gt;
When I started this blog, I used Jekyll. It was simple and worked with
GitHub pages. I wrote about why I transitioned to Nikola &lt;a href="https://cestlaz.github.io/posts/2016-04-14-i-hate-ruby/"&gt;here&lt;/a&gt; and
&lt;a href="https://cestlaz.github.io/posts/2016-04-17-emacs-jekyll-nikola/"&gt;here&lt;/a&gt;. 
&lt;/p&gt;

&lt;p&gt;
There's not much more to say here so enjoy the video:
&lt;/p&gt;

&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/wSeTic9obKw" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>emacs</category><category>learning</category><category>tools</category><guid>http://cestlaz.github.io/posts/using-emacs-35-blogging/</guid><pubDate>Tue, 27 Jun 2017 15:22:54 GMT</pubDate></item><item><title>On Retaining Teachers</title><link>http://cestlaz.github.io/posts/on-retaining-teachers/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;p&gt;
Back in February, I shared my thoughts on &lt;a href="https://cestlaz.github.io/posts/will-we-lose-cs-teachers-to-industry"&gt;losing CS teachers to the
tech industy&lt;/a&gt;. TL;DR - I don't think it will be a CS Ed problem. 
&lt;/p&gt;

&lt;p&gt;
That said, I do think that it will be hard to find good CS teachers
but the reason is because it will get harder and harder to find good
teachers in general.
&lt;/p&gt;

&lt;p&gt;
There are plenty of reasons why it's harder to become a
career teacher but I don't want to talk about those today. There are
also plenty of powerful forces working to destroy public schools and
teaching as a career but this post isn't about that either.
&lt;/p&gt;

&lt;p&gt;
This post is my attempt to tell people what teachers are actually
looking for. Some people assert that merit pay or similar "real world"
incentives will keep good teachers teaching but teachers are a
different breed. 
&lt;/p&gt;

&lt;p&gt;
Of course, I can't speak for all teachers but I can talk about myself
and teachers I've known and worked with over the years.
&lt;/p&gt;

&lt;p&gt;
I never thought I'd be a teacher, it was just something I tried when I
was dissatisfied with Wall Street. I tried it, it stuck. I didn't feel
at the time that teaching was my calling but somehow or other, I made
a career of it.
&lt;/p&gt;

&lt;p&gt;
To start, schools are not factories, companies, stores, or any other
type of business. Teachers spend most of their days with students and
little time with each other. Most of their time is allocated for
them. A high school teacher in NY will likely teach 5 class of 34 kids
each, have 1 period for lunch, 1 for preparation and 1 assigned to
some school task. You probably won't see your supervisor much. Mostly
at monthly meetings and when they observe you. Observations are
ostensibly for teacher evaluation and improvement but the system is
does neither well. 
&lt;/p&gt;

&lt;p&gt;
Teachers also don't have the same types of career paths as a other
professionals do. If you want to remain a classroom teacher, there is
no career path. You could become an assistant principal or principal
but those opportunities take you away from the kids and from your
subject area. They say teaching is a calling and for career classroom
teachers it probably is. For those who spent a few years in a
classroom and left for what they see as greener pastures, maybe not.
&lt;/p&gt;

&lt;p&gt;
So instead teachers make a career by honing their craft, creating electives,
working with clubs and teams, or doing something similar that doesn't
remove them from the classroom.
&lt;/p&gt;

&lt;p&gt;
In my case, I developed some electives and one thing led to another
and I ended up where I am today.
&lt;/p&gt;

&lt;p&gt;
The career situation of the teacher is why things like merit pay never
work. As a teacher, I want, in fact need my colleagues to do well. I
might have your kids next year and if you do a poor job I'll end up
suffering with the results. Sure, I'd like to be recognized as one of
the better teachers but it's not healthy for my students, my school,
or my career if I'm pitted against my fellow teacher. We're all in
this together. 
&lt;/p&gt;

&lt;p&gt;
Teachers do accept merit pay when it's forced on them though. As a
friend of mine once said - it's like the teacher lottery - the way
they assign the merit bonuses are based on those bogus state exams so
the distribution is pretty random, one year I'll get it, another year
someone else.
&lt;/p&gt;

&lt;p&gt;
This is not to say that teachers couldn't use a higher salary but even
then, teachers are not driven by the same motivations as business
people. I don't know of any teacher who feels that they'd work harder
for more pay or that they work any less hard if they're paid less.
&lt;/p&gt;

&lt;p&gt;
Teachers work and fight for their kids because that's what we
do. Right before I left Stuy for Hunter, the teachers and city agreed
to a new contract. All of a sudden I got a pay raise. I can tell you
that I was neither a better or worse of a teacher the day after the
contract went into affect than the day before.
&lt;/p&gt;

&lt;p&gt;
My mentor and friend &lt;a href="https://cestlaz.github.io/posts/2014-11-07-rich-rich.html"&gt;Richard Rothenberg&lt;/a&gt; talked to me about the deal we
make with society as teachers early in my career. He said, once you
get a few years in and have some seniority you're pretty secure and
you're only worry has to be teaching. We don't do great in the good
times but we do OK. On the other hand, we still have jobs in the bad
times although, again, we don't do great. We put in a lifetime of
service knowing that we won't get any significant financial reward but
at the end of the day between our contributions and the city/state's
investments we'll get a pension and won't be out in the cold in our
retirement. 
&lt;/p&gt;

&lt;p&gt;
The point is that those of us meant to be teachers were never looking
for the fast track to the upper class. We work to make a difference
and want society to enable us to make that difference. Teachers don't
have to be paid like they are in "the real world" but they do need to
put a roof over their heads, send their kids to college and have a
vacation now and again.
&lt;/p&gt;

&lt;p&gt;
It's not too much to ask but in this day and age it's apparently too
much to give.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>education</category><category>policy</category><guid>http://cestlaz.github.io/posts/on-retaining-teachers/</guid><pubDate>Sun, 25 Jun 2017 15:35:08 GMT</pubDate></item><item><title>Mayoral Control - only when your guy's the mayor</title><link>http://cestlaz.github.io/posts/mayoral-control/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;p&gt;
The hot debate this past week in NY Education circles is Mayoral
Control. When I started teaching, New York City schools were
controlled by the Board of Education. The board appointed a
chancellor. The system was supposed to balance community control as
well as some centralized decision making. The system was created in
the late 60s and was entrenched through my schooling. By the time I
was a teacher I think it was pretty much a given that the system
didn't work.
&lt;/p&gt;

&lt;p&gt;
In 2002, everything changed with Mayoral control under Michael
Bloomberg. Under mayoral control, the mayor appoints the chancellor
who appoints superintendents an on down the line. This was supposed to
create a chain of accountability leading up to and including the
mayor. To address concerns that parents voices would be heard, we had
the Panel for Educational Policy or PEP which was supposed to vet and
vote on policy and initiatives.
&lt;/p&gt;

&lt;p&gt;
Sounds good.
&lt;/p&gt;

&lt;p&gt;
Of course, it was all a farce. 
&lt;/p&gt;

&lt;p&gt;
Parents may or may not have had a voice under the old system but they
certainly didn't have a voice with mayoral control. The majority of
members of the panel were mayoral appointees and if they didn't vote
100% in line with their masters wishes, they were removed for someone
who would. Schools were closed and initiatives were passed that were
wildly unpopular with parents.
&lt;/p&gt;

&lt;p&gt;
What did we get under mayoral control? There was some good, but we
also got: 
&lt;/p&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;100% buy in to the pet education theories of non-educators like Bill
gates.
&lt;/li&gt;
&lt;li&gt;School leaders who barely taught and had little experience as
educators. 
&lt;/li&gt;
&lt;li&gt;Destruction of neighborhood schools 
&lt;/li&gt;
&lt;li&gt;Destruction of just about all of the large comprehensive high schools
&lt;/li&gt;
&lt;li&gt;Open doors for private charter schools that follow questionable
practices.
&lt;/li&gt;
&lt;li&gt;Flawed (at best)  school and teacher evaluation models 
&lt;/li&gt;
&lt;li&gt;The ATR pool 
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
Of course, reformers - those out to privatize education loved mayoral
control under Bloomberg. It destabilized teaching as a career
&lt;/p&gt;

&lt;p&gt;
Did results improve?
&lt;/p&gt;

&lt;p&gt;
Some would say yes but it's debatable. Graduation rates and test
scores are controlled by the politicians. When you have tests made,
graded, and curved in secret (except for those charter schools that
are exempt or grade their own tests), you've got to question any gains
or losses.
&lt;/p&gt;

&lt;p&gt;
Bloomberg's failing was (and possibly still is) that he and his
appointees didn't understand education or teachers. Education not a
business and can't be treated the same way.  
&lt;/p&gt;

&lt;p&gt;
Did this help with accountability? To quote Mr. Bloomberg: "They can
boo me at parades." 
&lt;/p&gt;

&lt;p&gt;
Fast forward to the de Blasio administration. Personally, I was not a
fan of Bloomberg's educational policy and I also feel that de Blasio's
also doing a poor job. Regardless of my opinion, Mayoral control under
de Blasio has certainly felt more community friendly. 
&lt;/p&gt;

&lt;p&gt;
This hasn't sat well with the reformers upstate and while Michael
Bloomberg was granted mayoral control for his entire term, Bill de
Blasio has had to fight for it every year and every year control has
come with strings attached – generally involving the flow of money
into private charter schools - still with questionable practices and
results.
&lt;/p&gt;

&lt;p&gt;
The funny thing is that many of those saying mayoral control was bad
during the Bloomberg era say it's a necessity now  and many against it
under Bloomberg are fans under de Blasio.  
&lt;/p&gt;

&lt;p&gt;
What's even funnier, in a tragic way is that it isn't really even
control. So much is really controlled in Albany under Governor
Cuomo. When de Blasio wanted to charge private charters for space
(rightfully so, in my opinion), Albany stepped in and gave the
charters a free pass. How is that mayoral control?
&lt;/p&gt;

&lt;p&gt;
Regardless of your political leanings, it's pretty clear that mayoral
control is only a good thing when the mayor is your guy. We need
something brand new that supports our communities. I was at the
&lt;a href="https://personaldemocracy.com/conference"&gt;Personal Democracy Forum 2017&lt;/a&gt; a couple of weeks ago and a recurring
theme, one which we really need now for our schools is:
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;
&lt;b&gt;&lt;b&gt;build with, not for&lt;/b&gt;&lt;/b&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
If we don't get there we'll be stuck booing our politicians at parades.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>education</category><category>policy</category><guid>http://cestlaz.github.io/posts/mayoral-control/</guid><pubDate>Thu, 22 Jun 2017 11:54:46 GMT</pubDate></item><item><title>Are best practices always the best?</title><link>http://cestlaz.github.io/posts/best-practices-cli/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;p&gt;
I've been trying to be an active participant on the &lt;a href="https://cseducators.stackexchange.com/"&gt;CS Educators
StackExchange&lt;/a&gt;. You should try to as well!!!
&lt;/p&gt;

&lt;p&gt;
I answered a question about using the command line which led to a back
and forth. I gave an example of something I might do in class to
illustrate the power of using the command line and linked to some of
my past &lt;a href="http://cestlaz.github.io/categories/cli/"&gt;posts&lt;/a&gt;. There was some back and forth in the comments - some of
the participants weren't happy with my code as they felt it was filled
with poor coding practices.
&lt;/p&gt;

&lt;p&gt;
I'm not going to comment on the discussion other than to say that I
make no apologies for how I use the Linux tools and the command line
as my methods have served me well over the years. I also make no
apologies on how I teach my students as I seem to have by and large
done right by them over the years as well.
&lt;/p&gt;

&lt;p&gt;
The crux was that I was showing what I might type in a class without
any of the class commentary. It wasn't meant to be a script in a file
let alone reusable code or a full blown program.
&lt;/p&gt;

&lt;p&gt;
I don't want to spend time here talking about "best practices" for
shell scripting. There are plenty of &lt;a href="https://jvns.ca/blog/2017/03/26/bash-quirks/"&gt;resources&lt;/a&gt; a search engine away.
&lt;/p&gt;

&lt;p&gt;
The question is that how universal are best practices and is it more
important that we teach specific best practices or rather that we have
a discussion with our students about best practices.
&lt;/p&gt;

&lt;p&gt;
Some general best practices are probably pretty universal – "write
clear code" but I've seen best practices that when followed
religiously just don't always make sense:
&lt;/p&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;never break out of a loop
&lt;/li&gt;
&lt;li&gt;one return statement per function
&lt;/li&gt;
&lt;li&gt;always or never do anything in particular
&lt;/li&gt;
&lt;li&gt;all code should be commented
&lt;/li&gt;
&lt;li&gt;always use an ORM 
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
to list a few.
&lt;/p&gt;

&lt;p&gt;
So, best practices aren't always best. More like guidelines to think
about when you're programming and then you and your team can make
smart decisions.
&lt;/p&gt;

&lt;p&gt;
So, when I wrote those lines over on StackExchange, was I really
showing my students how to code badly? The code:
&lt;/p&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ls *gif | while read i 
do
  f=`basename $i .gif`
  convert $i -resize 200x200 smaller-$f.gif
done
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
doesn't exist in a vacuum. We start with an ls to see the directory,
we use the &lt;b&gt;&lt;b&gt;echo&lt;/b&gt;&lt;/b&gt; throughout to test things before we run it live
and then we run it live in such a way that it can't be
destructive. I've been using the command line this way for decades and
while I've screwed plenty of things up, it's never been due to a bad
command line shell practice. 
&lt;/p&gt;

&lt;p&gt;
The important part is the discussion with the class:
&lt;/p&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;would this be appropriate in a script file?
&lt;/li&gt;
&lt;li&gt;what are the dangers
&lt;/li&gt;
&lt;li&gt;why and when is it ok?
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
etc.
&lt;/p&gt;

&lt;p&gt;
It's not our job to dictate to our students which best practices to
follow but rather to prepare them to make smart decisions.
&lt;/p&gt;

&lt;p&gt;
This year, I'm back to using C++ in class after maybe two decades. I'm
not up on current C++ best practices. I was wondering what was best:
&lt;/p&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;#include &amp;lt;iostream&amp;gt;

using namespace std;

int main(int argc, char *argv[])
{
  cout &amp;lt;&amp;lt; "something" &amp;lt;&amp;lt; endl;
  return 0;
}
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;#include &amp;lt;iostream&amp;gt;

int main(int argc, char *argv[])
{
  std::cout &amp;lt;&amp;lt; "something" &amp;lt;&amp;lt; stdendl;
  return 0;
}
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;#include &amp;lt;iostream&amp;gt;

using std::cout;
using std::end;

int main(int argc, char *argv[])
{
  cout &amp;lt;&amp;lt; "something" &amp;lt;&amp;lt; endl;
  return 0;
}
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
or even if we should use "\n" vs endl.
&lt;/p&gt;

&lt;p&gt;
I did my research, presented the results to my students and we talked
about what they should consider when making their decision.
&lt;/p&gt;

&lt;p&gt;
Students don't need us to blindly 
spout best practices. They can read them online or in a book. They do
need us to guide them towards critically thinking about them.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><guid>http://cestlaz.github.io/posts/best-practices-cli/</guid><pubDate>Wed, 21 Jun 2017 20:30:35 GMT</pubDate></item><item><title>Learning Languages</title><link>http://cestlaz.github.io/posts/posts/learning_languages/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;p&gt;
I stumbled across a video by &lt;a href="https://twitter.com/timbaldridge?ref_src=twsrc%255Egoogle%257Ctwcamp%255Eserp%257Ctwgr%255Eauthor"&gt;Tim Baldridge&lt;/a&gt; this morning. I don't know
Tim - it looks like he's a developer and he's made a number of
instructional videos on Clojure. 
&lt;/p&gt;

&lt;p&gt;
This video is titled "Learning a Language Takes time." 
&lt;/p&gt;

&lt;p&gt;
In the video (embedded below) Tim talks about the design of a guitar
and a violin. How a guitar is "better" designed - frets make it easy
to hit correct notes, tuning pegs stay in place and you can easily
play a single note or a chord.
&lt;/p&gt;

&lt;p&gt;
Contrast that to a violin. Tuning pegs have no mechanism and are held
in place by friction, notes must be precisely hit, and producing even
a single note at a time so that it sounds good is a challenge.
&lt;/p&gt;

&lt;p&gt;
On the other hand, you can do some really amazing things on a violin
if you master it. 
&lt;/p&gt;

&lt;p&gt;
This struck a chord with me. I once saw an interview with Itzhak
Perlman - my favorite violinist or all time (and coincidentally my
childhood violin teacher' teacher). He was comparing a violinist with
a pianist. He said that it was easy to play the correct notes in tune
on a piano and since the mechanics were simpler a musician can,
earlier in their career, start working on interpreting the music. A
violinist, on the other hand (in his opinion) can take half a lifetime
to master just from the mechanics point of view and only then can you
really start working on the music.
&lt;/p&gt;

&lt;p&gt;
Perlman was talking about an album he had released - "&lt;a href="https://www.gramophone.co.uk/review/itzhak-perlman-concertos-from-my-childhood"&gt;Concertos from
my Childhood&lt;/a&gt;." The idea was that young violinists study a standard
repertoire of "learning concertos" and of course, since they're
beginners they never sound good. Perlman decided to record a number of
these as an adult and this album was the result.
&lt;/p&gt;

&lt;p&gt;
Here's a track of Perlman playing one of those concertos that I
remember struggling through as a kid:
&lt;/p&gt;

&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/ggMPSbSyynY?list=RDHKo93tLga6w" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;
Of course, this is Perlman so I'm betting he sounded pretty good as a
kid:
&lt;/p&gt;

&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/4eLoWm9swbM" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;


&lt;p&gt;
Back to Tim's video. 
&lt;/p&gt;

&lt;p&gt;
Tim talks about the idea that learning a language, much like an
instrument takes time and also that some languages do less hand
holding and are harder to learn than others. The two key points are:
&lt;/p&gt;

&lt;ol class="org-ol"&gt;
&lt;li&gt;Some times things are harder to learn because at the end of the day
they have more power and so it's worth it.
&lt;/li&gt;
&lt;li&gt;Don't expect to learn something subntantial overnight.
&lt;/li&gt;
&lt;li&gt;With focused practice over time, you can master new hard things.
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;
Tim's a little less sympathetic than I'd be in my classroom but that's
okay - Tim's talking about teaching developers a new language and so I
think he's view is appropriate and correct there. 
&lt;/p&gt;

&lt;p&gt;
The truth is that learning does take time. You can create the illusion
of results with concentrated coaching and flashy tools but real
education takes work and time &lt;sup&gt;&lt;a id="fnr.1" name="fnr.1" class="footref" href="http://cestlaz.github.io/posts/posts/learning_languages/#fn.1"&gt;1&lt;/a&gt;&lt;/sup&gt;.
&lt;/p&gt;

&lt;p&gt;
A couple of years ago I was speaking to a non-teacher friend who had
just run a month long intensive "coding" summer program. They were very proud of the work
and what the kids accomplished – "They learned so much… Their
projects were awesome." The group had a reunion some time later. I
asked how much they remembered - "pretty much nothing."
&lt;/p&gt;

&lt;p&gt;
So, here's Tim's video. It's about 20 minutes but if you're pressed
for time, just up the speed of playback:
&lt;/p&gt;

&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/6Oi8_eCaBGY" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="footnotes"&gt;
&lt;h2 class="footnotes"&gt;Footnotes: &lt;/h2&gt;
&lt;div id="text-footnotes"&gt;

&lt;div class="footdef"&gt;&lt;sup&gt;&lt;a id="fn.1" name="fn.1" class="footnum" href="http://cestlaz.github.io/posts/posts/learning_languages/#fnr.1"&gt;1&lt;/a&gt;&lt;/sup&gt; &lt;p&gt;but work can indeed be fun&lt;/p&gt;&lt;/div&gt;


&lt;/div&gt;
&lt;/div&gt;</description><guid>http://cestlaz.github.io/posts/posts/learning_languages/</guid><pubDate>Sat, 17 Jun 2017 15:52:20 GMT</pubDate></item><item><title>A Community Curated List of CS Education Resources</title><link>http://cestlaz.github.io/posts/awesome-cs/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;p&gt;
One of the things I mentioned in my post on the &lt;a href="http://cestlaz.github.io/posts/cs-educators-stackexchange/"&gt;CS Educators
StackExchange&lt;/a&gt; was the fragmentation of resources for CS Educators. My
friend and fellow CS teacher Ben pointed out that this is appropriate
as we're so young as a community. He's absolutely right but until we
mature, discover-ability can be a problem. We all have our resources
and I for one am frequently surprised when talking to a friend and
discovering that they don't know about a site or a mailing list that
I've known about for years. Likewise, I'm appreciative when others
share resources with me.
&lt;/p&gt;

&lt;p&gt;
There are some collections of information, for instance, &lt;a href="https://twitter.com/alfredtwo"&gt;Alfred
Thompson&lt;/a&gt; has a list of CS Education bloggers but it's not so easy to
discover and it certainly shouldn't fall on Alfred to maintain such
a list making sure the links are all active and always being
responsible for adding new ones.
&lt;/p&gt;

&lt;p&gt;
Recently I've noticed a proliferation of &lt;b&gt;&lt;b&gt;awesome&lt;/b&gt;&lt;/b&gt;
lists. These are community curated lists hosted up on GitHub for a
variety of projects. I find myself using &lt;a href="https://github.com/emacs-tw/awesome-emacs"&gt;awesome-emacs&lt;/a&gt; and
&lt;a href="https://github.com/vinta/awesome-python"&gt;awesome-python&lt;/a&gt; more and more and there are tons of other such lists.
&lt;/p&gt;

&lt;p&gt;
I thought we, as a community could benefit from such a list. 
&lt;/p&gt;

&lt;p&gt;
I started one off. It's over at
&lt;a href="https://github.com/zamansky/awesome-cs-education"&gt;&lt;/a&gt;&lt;a href="https://github.com/zamansky/awesome-cs-education"&gt;https://github.com/zamansky/awesome-cs-education&lt;/a&gt; with instructions on
contributing at
&lt;a href="https://github.com/zamansky/awesome-cs-education/blob/master/contributing.org"&gt;&lt;/a&gt;&lt;a href="https://github.com/zamansky/awesome-cs-education/blob/master/contributing.org"&gt;https://github.com/zamansky/awesome-cs-education/blob/master/contributing.org&lt;/a&gt;.
&lt;/p&gt;

&lt;p&gt;
I seeded it with a few items but I'd love everyone to get involved. I
also started it with a few categories and a specific format but I'd
love to see that evolve into something most useful for the community
as well.
&lt;/p&gt;

&lt;p&gt;
If you agree that this could be something useful, please contribute to
it and help spread the word.
&lt;/p&gt;</description><category>CS Education</category><category>resources</category><guid>http://cestlaz.github.io/posts/awesome-cs/</guid><pubDate>Fri, 16 Jun 2017 16:39:20 GMT</pubDate></item></channel></rss>