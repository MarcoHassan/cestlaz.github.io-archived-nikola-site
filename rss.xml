<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>C'est la Z</title><link>http://cestlaz.github.io/</link><description>C'est la Z</description><atom:link href="http://cestlaz.github.io/rss.xml" type="application/rss+xml" rel="self"></atom:link><language>en</language><lastBuildDate>Wed, 26 Oct 2016 00:19:15 GMT</lastBuildDate><generator>https://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Knitting at a Tech Conference</title><link>http://cestlaz.github.io/posts/knitting-tech-conference/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;

&lt;div class="figure"&gt;
&lt;p&gt;&lt;img src="http://cestlaz.github.io/img/knitting-tech-conference/top.jpg" alt="top.jpg" align="center"&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;
This past weekend was &lt;a href="http://catskillsconf.com"&gt;Catskills Conf&lt;/a&gt;, one of my favorite events of the
year.
&lt;/p&gt;

&lt;p&gt;
Last year, Devorah joined me and also enjoyed the show.
&lt;/p&gt;

&lt;p&gt;
If you know my wife, you know she's &lt;b&gt;&lt;b&gt;always&lt;/b&gt;&lt;/b&gt; knitting. Ok, not true,
she's always knitting, spinning, weaving or performing some other form
of fiber craft.
&lt;/p&gt;

&lt;p&gt;
I can't complain. That's how I ended up with my Kandinsky, Dust Puppy
and Kandinsky sweaters and my awesome Kang and Kodos socks. It also
keeps her an my entire family in warm amazingly beautiful knit wear.
&lt;/p&gt;

&lt;p&gt;
While at the conference, Devorah was her usual self - knitting during
the talks. That doesn't mean she wasn't paying attention, it's just
what she does. We also noted a few other attendees knitting throughout
the weekend.
&lt;/p&gt;

&lt;p&gt;
So, this year, Devorah had an idea – let's focus those idle hands to
do some good. She asked the conference organizers to send out an email
to attendees - knit squares during the conference and Devorah will put
them together at the end and we'll donate the blanket we make to
children in need through &lt;a href="https://projectlinus.org/"&gt;Project Linus&lt;/a&gt;. 
&lt;/p&gt;

&lt;p&gt;
The organizers were supportive, if not somewhat skeptical. That was
ok - we also had no idea if this would be a win or a flop.
&lt;/p&gt;

&lt;p&gt;
Conference came and Devorah announced the project. She brought yarn,
needles, crochet hooks and instructions and also offered to teach
knitting during the breaks.
&lt;/p&gt;

&lt;p&gt;
It started slowly, but as the conference progressed, people started
knitting both during the talks and during the breaks.
&lt;/p&gt;

&lt;blockquote class="twitter-tweet" data-lang="en"&gt;&lt;p lang="en" dir="ltr"&gt;&lt;a href="https://twitter.com/DevorahZamansky"&gt;@DevorahZamansky&lt;/a&gt; leading knitting for children in need at &lt;a href="https://twitter.com/catskillsconf"&gt;@catskillsconf&lt;/a&gt; &lt;a href="https://t.co/hn0rx633e1"&gt;pic.twitter.com/hn0rx633e1&lt;/a&gt;&lt;/p&gt;— Mike Zamansky (@zamansky) &lt;a href="https://twitter.com/zamansky/status/789839861813575680"&gt;October 22, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;

&lt;p&gt;
Experienced knitters cranked out squares and newbies learned.
&lt;/p&gt;



&lt;div class="figure"&gt;
&lt;p&gt;&lt;img src="http://cestlaz.github.io/img/knitting-tech-conference/learning.jpg" alt="learning.jpg" align="center"&gt;
&lt;/p&gt;
&lt;/div&gt;


&lt;br&gt;
&lt;blockquote class="twitter-tweet" data-lang="en"&gt;&lt;p lang="en" dir="ltr"&gt;&lt;a href="https://twitter.com/jcn"&gt;@jcn&lt;/a&gt; knitting for charity with &lt;a href="https://twitter.com/DevorahZamansky"&gt;@DevorahZamansky&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/catskillsconf?src=hash"&gt;#catskillsconf&lt;/a&gt; &lt;a href="https://t.co/rvkSnMYDCp"&gt;pic.twitter.com/rvkSnMYDCp&lt;/a&gt;&lt;/p&gt;— Mike Zamansky (@zamansky) &lt;a href="https://twitter.com/zamansky/status/790164027494326272"&gt;October 23, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;br&gt;

&lt;p&gt;
At the end of the conference, we collected the partials. Devorah's
going to finish the blanket up this week and then it gets donated.
&lt;/p&gt;

&lt;blockquote class="twitter-tweet" data-lang="en"&gt;&lt;p lang="en" dir="ltr"&gt;6 X 5 and growing! &lt;a href="https://twitter.com/catskillsconf"&gt;@catskillsconf&lt;/a&gt; &lt;a href="https://t.co/epC9b3ap0t"&gt;pic.twitter.com/epC9b3ap0t&lt;/a&gt;&lt;/p&gt;— Devorah Zamansky (@DevorahZamansky) &lt;a href="https://twitter.com/DevorahZamansky/status/790697247965151232"&gt;October 24, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;

&lt;p&gt;
So, how much of a win was this? We got a blanket to donate to charity
and a couple of new knitters. We also heard and overheard some
interesting comments.
&lt;/p&gt;

&lt;p&gt;
One speaker commented that it as much better to see members of the
audience knitting for good rather than checking their cell phones.
&lt;/p&gt;

&lt;p&gt;
We also overheard some attendees talking about how the knitting
project left them feeling more connected to the conference since they
were able to contribute something.
&lt;/p&gt;

&lt;p&gt;
Sounds like a pretty big win to me. 
&lt;/p&gt;

&lt;p&gt;
So much so that Devorah's thinking about taking the show on the road -
maybe other conferences would like their idle hands doing some good
while listening to talks.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>community</category><guid>http://cestlaz.github.io/posts/knitting-tech-conference/</guid><pubDate>Tue, 25 Oct 2016 23:32:04 GMT</pubDate></item><item><title>Waking up in the Hudson Valley</title><link>http://cestlaz.github.io/posts/catskillsconf-2016/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;div class="figure"&gt;
&lt;p&gt;&lt;img src="http://cestlaz.github.io/img/catskills-conf-2016/cc.jpg" alt="cc.jpg" align="center"&gt;
&lt;/p&gt;
&lt;/div&gt;


&lt;p&gt;
Waking up to a beautiful brisk morning at the Ashokan Center in the Hudson Valley.
&lt;/p&gt;

&lt;p&gt;
Last year, Devorah and I attended the first &lt;a href="http://catskillsconf.com"&gt;Catskillsconf&lt;/a&gt;, a tech
conference in Olivebridge, NY. It was an amazing and unique
experience. I can only describe it as Tech Conference meets Summer
camp. Where else can you hear talks by people like &lt;a href="https://twitter.com/dens?ref_src=twsrc%255Egoogle%257Ctwcamp%255Eserp%257Ctwgr%255Eauthor"&gt;Dennis Crowley&lt;/a&gt; and
an alos hear the music of &lt;a href="http://www.mikeandruthy.com/"&gt;Mike and ruthy&lt;/a&gt;. 
&lt;/p&gt;

&lt;p&gt;
This year, I gave another educaiton rant and to add to the fun,
Devorah's been leading a knitting for Charity project and teaching
attendees to knit:
&lt;/p&gt;

&lt;blockquote class="twitter-tweet" data-lang="en"&gt;&lt;p lang="en" dir="ltr"&gt;Progress on the charity knitting project led by &lt;a href="https://twitter.com/DevorahZamansky"&gt;@DevorahZamansky&lt;/a&gt; &lt;a href="https://twitter.com/catskillsconf"&gt;@catskillsconf&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/catskillsconf?src=hash"&gt;#catskillsconf&lt;/a&gt; &lt;a href="https://t.co/yoal7r48wO"&gt;pic.twitter.com/yoal7r48wO&lt;/a&gt;&lt;/p&gt;— Mike Zamansky (@zamansky) &lt;a href="https://twitter.com/zamansky/status/790155915307737088"&gt;October 23, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;

&lt;p&gt;
and we brought up my Hunter College students to join in the fun.
&lt;/p&gt;

&lt;p&gt;
In spite of the fact that we were out late at the bonfiere:
&lt;/p&gt;

&lt;blockquote class="twitter-tweet" data-lang="en"&gt;&lt;p lang="en" dir="ltr"&gt;Ending a great day by relaxing next to the fire &lt;a href="https://twitter.com/catskillsconf"&gt;@catskillsconf&lt;/a&gt;. &lt;a href="https://t.co/LzKbftZamz"&gt;pic.twitter.com/LzKbftZamz&lt;/a&gt;&lt;/p&gt;— Christopher Short (@Shortoutloud) &lt;a href="https://twitter.com/Shortoutloud/status/790020785943539712"&gt;October 23, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;

&lt;p&gt;
and then were kept up by the students bonding and chatting in the
bunkhouse, Devorah and I are first up, bright and early.
&lt;/p&gt;

&lt;p&gt;
I'll write up more about this amazing event some time over the
week. Right now, I think I'll just go out and enjoy a cup of coffee
and the clean brisk Hudson Valley air.
&lt;/p&gt;</description><category>community</category><guid>http://cestlaz.github.io/posts/catskillsconf-2016/</guid><pubDate>Sun, 23 Oct 2016 11:19:06 GMT</pubDate></item><item><title>Installing Flask in a virtualenv</title><link>http://cestlaz.github.io/posts/flask-install-flask/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;p&gt;
Second video in the Flask series. This one goes over installing Flask
in a virtualenv and running a simple Flask application.
&lt;/p&gt;

&lt;p&gt;
Nothing much to say about this other then check out the video:
&lt;/p&gt;

&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/2ZIhczsu1EQ" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</description><category>flask</category><category>python</category><guid>http://cestlaz.github.io/posts/flask-install-flask/</guid><pubDate>Sat, 15 Oct 2016 22:58:26 GMT</pubDate></item><item><title>Setting up Linux for Flask Web Development</title><link>http://cestlaz.github.io/posts/flask-setup-virtualenv/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;p&gt;
Those laptops that my Hunter students were supposed to get have
finally arrived. We're distributing them on Monday. Each student will
have a Dell laptop running Ubuntu 16.04 for as long as they're in the
program. 
&lt;/p&gt;

&lt;p&gt;
This means we can finally start using the web as a way of displaying
and sharing our projects.
&lt;/p&gt;

&lt;p&gt;
For this type of web development, I'm a big fan of using &lt;a href="http://flask.pocoo.org"&gt;Flask&lt;/a&gt;. Flask
is a Python microframework. The easiest analogy is saying it's like
Ruby on rails but in Python. That's close enough for our purposes.
&lt;/p&gt;

&lt;p&gt;
I much prefer Python to Ruby as a teaching tool because it leads to
roads going in all sorts of directions so it was merely a matter of
figuring out which framework or platform to use. I found Django to be
far too big, cumbersome, and all encompasing while on the other hand,
&lt;a href="http://werkzeug.pocoo.org/"&gt;Werkzeug&lt;/a&gt;, which Flask is based on is a little too low level.
&lt;/p&gt;

&lt;p&gt;
Flask hit the sweet spot. Easy routing, session and form handling,
templates, pretty much everything I was looking for but very
unopinionated and open ended. Perfect for teaching and learning and
perfect for lightweight projects. The sourecode is also
straightforward enough for a student to explore.
&lt;/p&gt;

&lt;p&gt;
Below is a video going over setting up Linux from right after an
install to use the python virtualenv package. The next video will go
over installing Flask and setting up a simple application. Later, I'll
post a video on deployment to a &lt;a href="http://digitalocean.com"&gt;Digital Ocean&lt;/a&gt; Droplet.
&lt;/p&gt;

&lt;p&gt;
Here are some notes relating to the video.
&lt;/p&gt;

&lt;p&gt;
First, go to your "software sources" or "software updates"
 application from the menu and select all the sources (as described n
 the video)
&lt;/p&gt;

&lt;p&gt;
To update a new system:
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get update
sudo apt-get upgrade
sudo apt-get dist-upgade
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
To install the most recent emacs snapshot
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt-add repository -y ppa:ubuntu-lisp
sudo apt-get update
sudo apt-get install emacs-snapshot
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
To install python pip (used to install other python packages)
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install python-pip
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
and then to install the virtualenv packages
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo pip install virtualenv
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
To create a python3 virtual environment
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install -p python3 venv-folder
&lt;/pre&gt;&lt;/div&gt;

&lt;ul class="org-ul"&gt;
&lt;li&gt;You can activate the envorinment (assuming you create the folder under
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
your home directory):
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;source&lt;/span&gt; ~/venv-folder/bin/activate
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
And to deactivate it, from the activated terminal
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;deactivate
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Here's the video. Next time, we'll install Flask into an virtual
environment.
&lt;/p&gt;

&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/cEqB4pkR1c4" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>flask</category><category>linux</category><category>python</category><category>tools</category><category>webdev</category><guid>http://cestlaz.github.io/posts/flask-setup-virtualenv/</guid><pubDate>Fri, 14 Oct 2016 22:17:33 GMT</pubDate></item><item><title>Using Emacs - 16 - Undo Tree</title><link>http://cestlaz.github.io/posts/using-emacs-16-undo-tree/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;p&gt;
If you use emacs, you should keep an eye on Jon Snader's &lt;a href="http://irreal.org/blog/"&gt;blog&lt;/a&gt;,
&lt;a href="http://irreal.org/blog/"&gt;irreal.org&lt;/a&gt;. A few days he posted on &lt;a href="http://irreal.org/blog/?p=5621"&gt;Undo Tree&lt;/a&gt; - a package that extends
Emacs's built in undo functionality.
&lt;/p&gt;

&lt;p&gt;
Basic emacs has undo, bound to &lt;b&gt;&lt;b&gt;C-/&lt;/b&gt;&lt;/b&gt; or &lt;b&gt;&lt;b&gt;C-_&lt;/b&gt;&lt;/b&gt; but that's about
it. Undo tree, which you can set up with:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;use-package&lt;/span&gt; &lt;span class="nv"&gt;undo-tree&lt;/span&gt;
&lt;span class="nv"&gt;:ensure&lt;/span&gt; &lt;span class="nv"&gt;t&lt;/span&gt;
  &lt;span class="nv"&gt;:init&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;global-undo-tree-mode&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
adds two key features. First is redo, which you get by adding the
shift key to the undo keychords. 
&lt;/p&gt;

&lt;p&gt;
The other, is the visual undo tree. You can bring that up wit &lt;b&gt;&lt;b&gt;C-x
u&lt;/b&gt;&lt;/b&gt;
&lt;/p&gt;

&lt;p&gt;
Once you bring up the undo tree, you can use the up and down arrows or
&lt;b&gt;&lt;b&gt;C-n&lt;/b&gt;&lt;/b&gt; and &lt;b&gt;&lt;b&gt;C-p&lt;/b&gt;&lt;/b&gt; to move between undo and redos. When you get to
what you want, just quit the undo tree visualizer with &lt;b&gt;&lt;b&gt;q&lt;/b&gt;&lt;/b&gt;.
&lt;/p&gt;

&lt;p&gt;
The cool part is that once you undo a few things and add new stuff,
you get a tree that you can navigate through using the arrows. 
&lt;/p&gt;

&lt;p&gt;
It's much easier to get the flavor of this by watching the video
(which also has a lame example of using artist-mode which I'll come
back t at some point).
&lt;/p&gt;

&lt;p&gt;
Enjoy.
&lt;/p&gt;

&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/zL0FJ-jbDPU" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;
Relevant links:
&lt;/p&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Video series overview page:
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="http://cestlaz.github.io/stories/emacs"&gt;http://cestlaz.github.io/stories/emacs&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Code:
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="https://github.com/zamansky/using-emacs/tree/master"&gt;&lt;/a&gt;&lt;a href="https://github.com/zamansky/using-emacs/tree/master"&gt;https://github.com/zamansky/using-emacs/tree/master&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>emacs</category><category>tools</category><guid>http://cestlaz.github.io/posts/using-emacs-16-undo-tree/</guid><pubDate>Sun, 09 Oct 2016 16:00:00 GMT</pubDate></item><item><title>Chromebooks in K12</title><link>http://cestlaz.github.io/posts/chromebooks/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;p&gt;
The discussion today over on &lt;a href="http://avc.com"&gt;AVC&lt;/a&gt; was &lt;a href="http://avc.com/2016/10/chromebooks-in-k12/"&gt;Chromebooks in K12&lt;/a&gt;, a title I
conveniently lifted.
&lt;/p&gt;

&lt;p&gt;
In the comments, I was asked my thoughts on chromebooks vs Linux on
low end hardware so, here they are.
&lt;/p&gt;


&lt;p&gt;
Chromebooks are cheap, near instant on, and, if you're using Google
Apps for education, little to no administration necessary. 
&lt;/p&gt;

&lt;p&gt;
This is a HUGE win for schools. 
&lt;/p&gt;

&lt;p&gt;
There are some issues. School WiFi, for example, is frequently
insufficient which can be a problem for a device that's meant to be
connected to the cloud. People might think that schools are well
connected but I know multiple schools that keep kids off the WiFi to
keep it from being overloaded. This is a problem and I don't know if
it's really being addressed.
&lt;/p&gt;

&lt;p&gt;
It's also worth noting that DOE pricing is also a far cry from "lowest
bidder." We keep seeing sub $200 chromebooks on the market but buying
through the DOE approved vendor looks to cost about $300 per unit or
more. Of course this is better than the equally inflated PC/Mac
prices.
&lt;/p&gt;

&lt;p&gt;
Still, the price and easy of deployment and administration seem to
make chromebooks the way to go.
&lt;/p&gt;

&lt;p&gt;
As to other issues, first, you have to buy in to the Google platform
– email, docs, classroom, etc. This isn't necessarily a problem. I
personally like most of Google's offerings. My big concern is giving
away student data. I have mixed feelings on the whole privacy thing
but it's more clear cut when it comes to minors in public schools -
schools shouldn't be sharing their data and schools shouldn't be
forcing them to share their data. Google Suite for Education is FERPA
compliant but what about all the other Google services the kids might
be using? I haven't looked at this carefully but we've already given
too much power to private interests over education (see the College
Board or Pearsons) so, at least to me, this is a concern.
&lt;/p&gt;

&lt;p&gt;
My only other issue is a selfish one. As a CS educator, I look to
coding tools and environments. While there are online platforms like
cloud9 or &lt;a href="http://repl.it"&gt;repl.it&lt;/a&gt;, they don't have the same power and flexibility of
using local installs. I've been using repl.it and it's a great tool
but I think it's best used as a stepping stone to a local install and
then afterwards for some of it's specific value added features. I'm
also a big believer in teaching &lt;a href="http://cestlaz.github.io/categories/shell/"&gt;operating system as tool box&lt;/a&gt;,
something you can't currently do with a chromebook.
&lt;/p&gt;

&lt;p&gt;
&lt;a href="https://twitter.com/willykaram"&gt;Willy Karam&lt;/a&gt; commented over at AVC about using cheap hardware running
Linux. This is something I've done for years and it's been a
lifesaver. CSTUY's entire laptop collection consists of really old
laptops running Linux. 
&lt;/p&gt;

&lt;p&gt;
For a CS class, this works well. Even for a non CS class it can work
well. Modern Linux distributions run pretty much the same as Windows
and MacOS. Use the mouse to click on menus and icons. It doesn't give
you the power of the command line but it means it's a suitable
alternative for the masses that use the operating system as a program loader..
&lt;/p&gt;

&lt;p&gt;
The downside of Linux for the general population is the administration
and maintenance. At Stuy, we set up NIS and NFS. Both horrible but
probably easier and better than most alternatives. I was never able to
come up with a better way to do authentication and file sharing and
the NFS stuff would have killed our wifi (we only used it in wired
labs). Customizing software installs is also a real problem. We made
it work but it took far too much time and effort.
&lt;/p&gt;

&lt;p&gt;
If you're in a situation where you can do a stock install and then
give the machine to the student for the semester, then Linux can work
really well. If you're talking about shared machines with custom
installs, it's harder to justify over chromebooks. 
&lt;/p&gt;

&lt;p&gt;
A final note on chromebooks is that last year, I played with putting Linux on a
chromebook. It worked pretty well. Almost the best of both worlds. Low
end hardware with good battery life and a full operating system. This
is something I have to play with on the current generation of chromebooks.
&lt;/p&gt;

&lt;p&gt;
So, where do I stand on this? The cloud isn't there yet in terms of
teaching computer science. It's fine for a gentle introduction but
eventually, you'll need the power of a full blown OS and local
installs. We may very well get to where a cloud OS is just as
expressive, we're just not there yet. On the other hand, for general
computing in schools, chromebooks are a big win.
&lt;/p&gt;

&lt;p&gt;
It would be wonderful if schools had sufficient infrastructure,
support staff and training so that technology was just there and just
worked and we didn't have to make these sort of decisions and
compromises. Somehow I don't thing that will be happening any time soon.
&lt;/p&gt;</description><category>hardware</category><guid>http://cestlaz.github.io/posts/chromebooks/</guid><pubDate>Thu, 06 Oct 2016 23:49:04 GMT</pubDate></item><item><title>Computational Thinkers in Scotland</title><link>http://cestlaz.github.io/posts/scotland/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;p&gt;
I'm way behind on my &lt;a href="http://cacm.acm.org/"&gt;Communications of the ACM&lt;/a&gt;. I generally only read
them when I use my trainer in the mornings and with summer running and
outside riding, I'm still on the December 2015 issue.
&lt;/p&gt;

&lt;p&gt;
This morning, I read a viewpoint by Jeremy Scott and Alan Bundy on &lt;a href="http://cacm.acm.org/magazines/2015/12/194638-creating-a-new-generation-of-computational-thinkers/abstract"&gt;a
program in Scotland&lt;/a&gt;. If you're an ACM member, and if you're a CS
practitioner, student, academic, or teacher you should be, you can read the piece for details.
&lt;/p&gt;



&lt;p&gt;
Me? I noticed a number of similarities between what Bundy and Scott
described and efforts here in the USA including some of the red flags.
&lt;/p&gt;

&lt;p&gt;
I'm not here to talk about the program described in detail or their
successes and failures. I don't have enough information to fairly
comment on that. I'm here in my usual role of curmudgeon to highlight
common red flags that if unheeded could cost all of us the opportunity
to get really great CS Ed to all of our students.
&lt;/p&gt;

&lt;p&gt;
One red flag right away were a number of references to the program
being curriculum and materials driven, not teacher driven. The
viewpoint states that materials "were designed to be used by even
non-specialist teachers." We see the same thing here in the USA and
not just in CS Ed. Teaching overall is being devalued with the elite
pushing programs that handcuff good teachers to a script (which leads
students towards "success" in passing a nonsense standardized exam)
all the while sending their own kids to elite private schools with
knowledgeable teachers.
&lt;/p&gt;

&lt;p&gt;
I know i didn't want my kids to be taught chemistry history or any
other subject by a teacher that hasn't studied the content yet here we
go saying it's okay for CS. 
&lt;/p&gt;

&lt;p&gt;
The counter argument is that we have to do something now and we'll do
better later. We all go in with the best of intentions but more often
than not, once a politician has their sound bite and once a cheap
apparent solution is in place, it's good enough and we're done. I
ranted about that a while back both &lt;a href="http://cestlaz.github.io/posts/2015-03-04-expedient-vs-good.html/#.V-5UqN9vGAk"&gt;here&lt;/a&gt; and &lt;a href="http://cestlaz.github.io/posts/2015-05-07-learning-takes-time.html/#.V-5Uot9vGAk"&gt;here&lt;/a&gt;. To their credit,
Bundy and Scott talk a bit about this concern in the piece.
&lt;/p&gt;

&lt;p&gt;
The piece also said "It is also necessary to employ a pedagogy that is
informed by the latest research into the most effective ways to teach
computing." This sounds good but the truth is, education research
doesn't have the best reputation among educators. Last month, I
asked one of the best math teachers around what was being bandied
about as best practices in math education according to "the
research?" He basically said "the research says do &lt;b&gt;&lt;b&gt;fad du jour&lt;/b&gt;&lt;/b&gt;
but that doesn't work for me so I just do &lt;b&gt;&lt;b&gt;actually good technique&lt;/b&gt;&lt;/b&gt;."
&lt;/p&gt;

&lt;p&gt;
Over the years, I've spoken to many teachers and by and large the best
ones discredit "the research." Of course, my comment will be
discredited by ed researchers saying that "you're just giving
anecdotes" but then, if I did the same thing while employed as a
researcher, did a couple of surveys and submitted it for publication,
then it would be "research." So much of teaching is a craft and the
truth is, practitioners know best.
&lt;/p&gt;

&lt;p&gt;
Related to this is authentication by citing authority. Particularly
dangerous in our field because many people with little to no real
background in teaching CS are anointed as experts and thought leaders
(see this post: &lt;a href="http://cestlaz.github.io/posts/2015-10-26-self-appointed-experts.html/"&gt;here&lt;/a&gt;). In this case, the viewpoint cites Cameron
Fadjo. I've only met Cameron once or twice and he seems like a sharp
guy but when he was given the post of Director of Software Engineering
for NYC, according to his linked in profile, he had neither taught k12
nor had any real CS background.  This is of course the profile of many
CS Education thought leaders. 
&lt;/p&gt;

&lt;p&gt;
My overall take. It sounds like just like here, Scotland has people
trying to make a difference and trying to do good. It also sounds like
they're falling into the same traps and pitfalls as we are on this
side of the Atlantic.
&lt;/p&gt;</description><category>cs</category><category>education</category><category>policy</category><guid>http://cestlaz.github.io/posts/scotland/</guid><pubDate>Fri, 30 Sep 2016 11:28:53 GMT</pubDate></item><item><title>User friendly - I do not think that means what you think it means</title><link>http://cestlaz.github.io/posts/user-friendly/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;p&gt;
Saw this post the other day: &lt;a href="https://pupeno.com/2016/09/26/emacs-is-hurting-clojure/"&gt;Emacs is hurting Clojure&lt;/a&gt; and this response: &lt;a href="http://irreal.org/blog/?p=5597"&gt;Is Emacs Really HJard to Learn / Use&lt;/a&gt;.
&lt;/p&gt;

&lt;p&gt;
This called to mind those countless discussions about tools being user
friendly. I'm frequently on the unpopular side of these
discussions. Linux vs Windows vs Mac, Shell vs GUI, Emacs vs
fill-in-the-blank-editor-or-IDE and on and on.
&lt;/p&gt;


&lt;p&gt;
Don't use Emacs, it isn't user
friendly. Don't use Linux, it isn't user friendly.
&lt;/p&gt;

&lt;p&gt;
The thing is, I don't think that word means what they think it does. 
&lt;/p&gt;

&lt;p&gt;
I tell my kids that Linux and the shell is amazingly user friendly and
Windows and Macs aren't user friendly at all. Windows, rather, is 
"Learner Friendly." For years, it's been easy to learn what you can do
on Windows or Mac (as used via the GUI, not dropping to a shell) but
the truth is you can't do that much. They're designed as program
loaders not tool kits.
&lt;/p&gt;

&lt;p&gt;
You can learn how to get around and load programs and files very
quickly - much more quickly at first than using a command line
interface. The problem is, at that point, you hit a wall. No doubt
those operating systems are more learner friendly than Linux and the
shell but once you learn the command line, it can be leveraged for all
sorts of things and pretty easily at that - user friendly (see these
posts for some examples: &lt;a href="http://localhost:8000/categories/cli/"&gt;Shell posts&lt;/a&gt;).
&lt;/p&gt;

&lt;p&gt;
This is important because we have our students use all sorts of tools
and we should be thinking about things like usability but we really
should be thinking about them a little differently. 
&lt;/p&gt;

&lt;p&gt;
First, is it learner friendly. Part of this is cost of
entry. Linux has a high cost of entry. On the other hand, while Emacs
might look uglier than other modern editors, the cost of entry is
pretty much the same as any other editor - click or type a command and then you can use
the mouse and drop down menus to get started. Vim, in my opinion, on
the other hand has a higher cost of entry due to its modal nature. 
&lt;/p&gt;

&lt;p&gt;
So, there's no reason not to use Emacs (vs another editor) but you
might pause before using Linux. My approach is to start as if it were
Windows - use the gui, icons and menus, and then slowly introduce the
command line.
&lt;/p&gt;

&lt;p&gt;
Once your past the cost of entry, the we can think about being learner
friendly. As I mentioned, Linux, not so much. Emacs, sure - just like
any other editor with drop downs that then give you keyboard
equivalents. 
&lt;/p&gt;

&lt;p&gt;
The keyboard equivalents lead us to another part of learner friendly
– discoverability - can you easily discover new things about the
tool. Here Emacs shines. Linux, maybe not so much.
&lt;/p&gt;

&lt;p&gt;
Once past learner friendly we get to user friendly. The core question
is "can I do what I need to and want to do easily." For most people, it
comes down to - the tool I know is user friendly and the one I don't
know and don't want to take the time to know isn't. There are some
things that are cumbersome no matter what, but really, when we say
user friendly, most people mean "what I like." To me, it's a little
more - is the tool expressive and powerful as well.
&lt;/p&gt;

&lt;p&gt;
So, why is this important? First, we shouldn't allow our biases to
color the way we expose our kids to tools but at the same time, we
should pay attention to learnability, cost of entry, discoverability,
and indeed, true user friendliness.
&lt;/p&gt;

&lt;table border="2" cellspacing="0" cellpadding="6" rules="all" frame="border" border-spacing="10px" padding="10px"&gt;


&lt;colgroup&gt;
&lt;col class="left"&gt;

&lt;col class="left"&gt;

&lt;col class="left"&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope="col" class="left"&gt; &lt;/th&gt;
&lt;th scope="col" class="left"&gt;Low Power&lt;/th&gt;
&lt;th scope="col" class="left"&gt;High Power&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class="left"&gt;&lt;b&gt;&lt;b&gt;Low Learnability&lt;/b&gt;&lt;/b&gt;&lt;/td&gt;
&lt;td class="left"&gt;CP/M&lt;/td&gt;
&lt;td class="left"&gt;Linux Shell, Mac Terminal&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="left"&gt;&lt;b&gt;&lt;b&gt;High Learnability&lt;/b&gt;&lt;/b&gt;&lt;/td&gt;
&lt;td class="left"&gt;Windows / Mac OS GUI&lt;/td&gt;
&lt;td class="left"&gt;Most editors, including Emacs&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;



&lt;p&gt;
So, let's stop with this "your tool isn't easy to use" nonsense. Any
tool we don't know isn't easy to use until we learn it. Let's focus on
the path to learning the useful ones.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>cli</category><category>emacs</category><category>linux</category><category>shell</category><category>tools</category><guid>http://cestlaz.github.io/posts/user-friendly/</guid><pubDate>Wed, 28 Sep 2016 15:13:37 GMT</pubDate></item><item><title>Can NYCIST become in leader in CS Education?</title><link>http://cestlaz.github.io/posts/nycist/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;p&gt;
I only learned about NYCIST last spring. They're the "New York
Consortium for Independent School Technologists." They had something
of an open house that I attended. I heard about them from friend
and fellow CS educator &lt;a href="https://twitter.com/ed_saber"&gt;Saber Khan&lt;/a&gt;.  
&lt;/p&gt;

&lt;p&gt;
Last Thursday I spent an afternoon and evening with NYCIST members for
a discussion of the state of K12 Computer Science Education in the
City.
&lt;/p&gt;

&lt;p&gt;
Most of my work has been with public schools and most of the teachers
I know, public school teachers so it was great to make new friends in
the Independent school community.
&lt;/p&gt;

&lt;p&gt;
One thing I realized during the evening was that NYCIST has a real
opportunity to do something special. 
&lt;/p&gt;

&lt;p&gt;
In some ways, the public schools are leading the way in computer
science education as a result of this administrations CS4All
initiative but at the same time, public schools face some real
challenges. While some "early adopters" have developed their own take
on computer science education, by and large, CS4All is being defined
and driven by few for all and, at least right now, the model seems to
be the "a little PD and you're a CS teacher" model.
&lt;/p&gt;

&lt;p&gt;
At the same time, standardized testing and teacher evaluations are
pressuring schools, particularly schools of our most vulnerable
students to push resources towards test prep in tested subjects rather
than real education, including CS.
&lt;/p&gt;

&lt;p&gt;
In this particular instance, NYCIST and independent schools can be
what charter schools were supposed to be before they were corrupted.
&lt;/p&gt;

&lt;p&gt;
Laboratories of innovation. 
&lt;/p&gt;

&lt;p&gt;
NYCIST has already gathered together interested parties and the
independent schools aren't burdened by the weight of politically
driven testing and teacher evaluation. At the same time, small class
sizes and flexible models allow for innovation.
&lt;/p&gt;

&lt;p&gt;
If they wanted to, they could probably create curricular and
instructional frameworks for CS education and. dare I say it, share it
back to the public schools. 
&lt;/p&gt;

&lt;p&gt;
I know I'm ignoring independent school politics and other issues that
would prevent this from happening, but I just feel that if there's a
desire to do so from a group like NYCIST, it could happen.
&lt;/p&gt;

&lt;p&gt;
I'm looking forward to continuing to work with my new friends and if
any of you are interested in finding out more about NYCIST, just tweet
to &lt;a href="https://twitter.com/ed_saber"&gt;Saber&lt;/a&gt;.
&lt;/p&gt;

&lt;p&gt;
I don't know if my idea here will take root but if it does, I'd love
to work with NYCIST to make something happen.
&lt;/p&gt;</description><category>community</category><category>cs</category><guid>http://cestlaz.github.io/posts/nycist/</guid><pubDate>Sat, 24 Sep 2016 20:17:53 GMT</pubDate></item><item><title>Impostor Syndrome - I'm not good enough</title><link>http://cestlaz.github.io/posts/imposters/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;p&gt;
I've been meaning to comment on these tweets for a while:
&lt;/p&gt;



&lt;blockquote class="twitter-tweet" data-lang="en"&gt;&lt;p lang="en" dir="ltr"&gt;I went to high school with some scary smart people. Never made math team. Didn't get into honors math. Thought I wasn't good at it.&lt;/p&gt;— Stanislav Nikolov (@snikolov) &lt;a href="https://twitter.com/snikolov/status/748660381392871424"&gt;June 30, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;blockquote class="twitter-tweet" data-lang="en"&gt;&lt;p lang="en" dir="ltr"&gt;&lt;a href="https://twitter.com/zamansky"&gt;@zamansky&lt;/a&gt; :D&lt;br&gt;&lt;br&gt;that's the thing though you can get such an inferiority complex by always comparing yourself to others &lt;a href="https://t.co/LvaMjp1WVf"&gt;https://t.co/LvaMjp1WVf&lt;/a&gt;&lt;/p&gt;— Stanislav Nikolov (@snikolov) &lt;a href="https://twitter.com/snikolov/status/748918417667727360"&gt;July 1, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;

&lt;p&gt;
Stan, of course, is one of the most talented people I know. 
&lt;/p&gt;

&lt;p&gt;
It reminded me of a conversation I had with my colleague and friend
Jim last year. I had just recieved an email from a former student
turned friend. We were trying to find some time to catch up.  I told
Jim I had just heard from this young lady and Jim replied "I remember
her, she's awesome. Really smart." I mention this because the
individual we were talking about, while to us, extremely talented in
addition to being just a terrific person spent much of her career
living in self doubt.
&lt;/p&gt;

&lt;p&gt;
Meantime, I was having a conversation with another friend and the
topic turned to impostor syndrome and the desire to make it a thing of
the past.
&lt;/p&gt;

&lt;p&gt;
Problem is, I don't know if that will ever be the case. I'm
approaching 50 and have a career of good work behind me but I still
find myself questioning my credentials, work, and ability. Then I realized I wasn't alone
when I read &lt;a href="https://twitter.com/RobertTalbert"&gt;Robert Talbert's&lt;/a&gt; recent &lt;a href="http://rtalbert.org/blog/2016/tenure-second-time"&gt;blog post&lt;/a&gt; about his going through
the tenure process for a second time and "learning through this process
that I have not outrun impostor syndrome and probably never will."
&lt;/p&gt;

&lt;p&gt;
Stan's tweets tell part of the story. When we surround ourselves with
smart, accomplished people, we sometimes feel we don't measure
up. I've found that for the most part, the extremely accomplished
people I've worked with are very unassuming and low key. They seem to
operate assuming that  everyone else is at least as capable and quick as
they. I recall &lt;a href="http://paulgraham.com/articles.html"&gt;Paul Graham&lt;/a&gt; talking about this in an essay but
I don't remember which one. The problem is, if you don't understand
their sincerity, you end up feeling even more inadequate. 
&lt;/p&gt;

&lt;p&gt;
It gets worse when we start comparing ourselves to some unreal
composite. I remember feeling pretty stupid back when I was younger
comparing myself with others. The problem was that I clearly didn't
measure up to the best math kid, or the best computer kid, the best
fencer, the best violinist, etc. Now, the best math kid might have
been a lousy athlete and the best fencer, a so so mathematician, but
to me, I was comparing myself with this composite super human. No
wonder I never measured up. Eventually, though, I realized three
things. First, there's always someone better at something and always
someone worse. Second, that's not the true value of ones worth as a
person, and three, I bring some good stuff to the table and I should
be (and am) content with that
&lt;/p&gt;

&lt;p&gt;
So, I still struggle with impostor syndrome but at the end of the day,
it just serves as a reminder to look back on what I've done and what
I've learned in the process.  I start out in question but in the end,
leave confident. Maybe the trick isn't to eliminate impostor syndrome
but rather to understand and contain it. We don't want to live in fear
and anxiety but both are useful emotions when we control them and not
the reverse.
&lt;/p&gt;

&lt;p&gt;
It's probably good when we question ourselves and re-evaluate our
positions - we just have to make sure as we're bringing new people
into the tech fold that we foster acceptance and confidence  and when
impostor syndrome sets in that it can be channeled into a positive
and not scare people away.
&lt;/p&gt;</description><category>community</category><category>education</category><guid>http://cestlaz.github.io/posts/imposters/</guid><pubDate>Fri, 09 Sep 2016 17:53:15 GMT</pubDate></item></channel></rss>