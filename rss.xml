<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>C'est la Z</title><link>http://cestlaz.github.io/</link><description>C'est la Z</description><atom:link href="http://cestlaz.github.io/rss.xml" type="application/rss+xml" rel="self"></atom:link><language>en</language><lastBuildDate>Sat, 19 Nov 2016 12:55:52 GMT</lastBuildDate><generator>https://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Using Emacs - 22 - emacsclient</title><link>http://cestlaz.github.io/posts/using-emacs-22-emacsclient/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;p&gt;
Another quick hit today.
&lt;/p&gt;

&lt;p&gt;
This video is really setting the stage for hte next two, where I talk about org-mode capturing.
&lt;/p&gt;

&lt;p&gt;
Today, we're demoing the use of the emacs server and client.
&lt;/p&gt;

&lt;p&gt;
Back in the old days, emacs took a LOOONG time to load. A complex
conviguration could take on the order of 10 to 20 seconds. This
resulted in people loading emacs at the start of the day and leaving
it up forever. While load times aren't much of an issue anymore, it's
still nice to leave emacs around all the time.
&lt;/p&gt;

&lt;p&gt;
That's where running emacs as a server comes in.. I set up a keyboard shortcut my window manager to run:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;emacsclient -a "" -c
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Rather than trying to run emacs, this tries to connect to an already
running emacs server. The &lt;b&gt;&lt;b&gt;-c&lt;/b&gt;&lt;/b&gt; creates a new frame. Instead if you
use &lt;b&gt;&lt;b&gt;-t&lt;/b&gt;&lt;/b&gt; it will open emacs in the terminal. The &lt;b&gt;*-a ""*&lt;/b&gt; tells
emacs to run itself as a server (daemon) if it isn't already running.
&lt;/p&gt;


&lt;p&gt;
Later on, running &lt;b&gt;&lt;b&gt;emacsclient -c&lt;/b&gt;&lt;/b&gt; will very quickly bring up a new frame to the server.
&lt;/p&gt;

&lt;p&gt;
In addition to instant loading, Running emacs this way has the
advantage, or some may say disadvantage of keeping buffers around
forever since you just keep emacs up and running.  
&lt;/p&gt;



&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/9AHGsCtsClg" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;div id="outline-container-sec-2" class="outline-2"&gt;
&lt;h2 id="sec-2"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-2"&gt;
&lt;p&gt;
Relevant links:
&lt;/p&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Video series overview page:
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="http://cestlaz.github.io/stories/emacs"&gt;http://cestlaz.github.io/stories/emacs&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Code:
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="https://github.com/zamansky/using-emacs/tree/master"&gt;&lt;/a&gt;&lt;a href="https://github.com/zamansky/using-emacs/tree/master"&gt;https://github.com/zamansky/using-emacs/tree/master&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>emacs</category><category>tools</category><guid>http://cestlaz.github.io/posts/using-emacs-22-emacsclient/</guid><pubDate>Wed, 16 Nov 2016 16:00:00 GMT</pubDate></item><item><title>Using Emacs - 21 - web mode</title><link>http://cestlaz.github.io/posts/using-emacs-21-web-mode/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;p&gt;
Quick post today. 
&lt;/p&gt;

&lt;p&gt;
The video goes over web-mode - my preferred weapon for html and all the goodies you embed in an html file.
&lt;/p&gt;

&lt;p&gt;
It's multi-modal so it acts sensibly regardless of wether you're editing html, css, javascript or even templates in a single file.
&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;/b&gt; In the video, web-mode wasn't automatically inserting
quotes. I had to set hte following variable to fix this:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;(setq web-mode-enable-auto-quoting t)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;
Giving the final configuration I'm currently using: 
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;use-package&lt;/span&gt; &lt;span class="nv"&gt;web-mode&lt;/span&gt;
    &lt;span class="nv"&gt;:ensure&lt;/span&gt; &lt;span class="nv"&gt;t&lt;/span&gt;
    &lt;span class="nv"&gt;:config&lt;/span&gt;
	 &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;add-to-list&lt;/span&gt; &lt;span class="ss"&gt;'auto-mode-alist&lt;/span&gt; &lt;span class="o"&gt;'&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"\\.html?\\'"&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;web-mode&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
	 &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;web-mode-engines-alist&lt;/span&gt;
	       &lt;span class="o"&gt;'&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s"&gt;"django"&lt;/span&gt;    &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s"&gt;"\\.html\\'"&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
	 &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;web-mode-ac-sources-alist&lt;/span&gt;
	       &lt;span class="o"&gt;'&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s"&gt;"css"&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;ac-source-css-property&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
		 &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"html"&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;ac-source-words-in-buffer&lt;/span&gt; &lt;span class="nv"&gt;ac-source-abbrev&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;web-mode-enable-auto-closing&lt;/span&gt; &lt;span class="nv"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;web-mode-enable-auto-quoting&lt;/span&gt; &lt;span class="nv"&gt;t&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;; this fixes the quote problem I mentioned&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
The web-mode &lt;a href="http://web-mode.org"&gt;documentation&lt;/a&gt; has more information including a nice chart of all the key bindings.
&lt;/p&gt;



&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/69bQa5n23jc" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;div id="outline-container-sec-2" class="outline-2"&gt;
&lt;h2 id="sec-2"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-2"&gt;
&lt;p&gt;
Relevant links:
&lt;/p&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Video series overview page:
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="http://cestlaz.github.io/stories/emacs"&gt;http://cestlaz.github.io/stories/emacs&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Code:
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="https://github.com/zamansky/using-emacs/tree/master"&gt;&lt;/a&gt;&lt;a href="https://github.com/zamansky/using-emacs/tree/master"&gt;https://github.com/zamansky/using-emacs/tree/master&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>emacs</category><category>tools</category><guid>http://cestlaz.github.io/posts/using-emacs-21-web-mode/</guid><pubDate>Wed, 16 Nov 2016 16:00:00 GMT</pubDate></item><item><title>Using Emacs - 20 - yanking</title><link>http://cestlaz.github.io/posts/using-emacs-20-yanking/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;p&gt;
Today's video is a bit of a follow up on the last one as well as a few
miscillaneous configuration.
&lt;/p&gt;

&lt;p&gt;
We got some comments on alternate ways to load a file if it exists -
it's always cool to see how different people end up doing similar things.
&lt;/p&gt;

&lt;p&gt;
We then talk about three little configurations. Two I found out about
reading Jon Sander's (jcs) blog &lt;a href="http://irreal.org/blog"&gt;Irreal&lt;/a&gt;. Jon's blog is a terrific
source of emacs info - if you don't subscribe, you should.
&lt;/p&gt;

&lt;p&gt;
I go over using counsel for working with the kill-ring. The command
counsel-yank-pop acts as a replamcement for yank-pop and it lets you
easily yank anything from the kill ring - not just the most previously
killed/whacked piece. 
&lt;/p&gt;

&lt;p&gt;
You just hit &lt;b&gt;&lt;b&gt;M-y&lt;/b&gt;&lt;/b&gt; and then either keep hitting it or use up and
down to select what you want to yank. 
&lt;/p&gt;

&lt;p&gt;
Here's the original post from Irreal: &lt;a href="http://irreal.org/blog/?p=5707"&gt;http://irreal.org/blog/?p=5707&lt;/a&gt;.
&lt;/p&gt;

&lt;p&gt;
I then briefly talk about smoothing things over between the system
clipboard and the kill ring, also from Irreal:
&lt;a href="http://irreal.org/blog/?p=5702"&gt;http://irreal.org/blog/?p=5702&lt;/a&gt;.
&lt;/p&gt;

&lt;p&gt;
Finally, I talk about auto-revert-mode - this monitors files on your
file system and when they change, they reload your buffer. I find this
very useful to keep multiple machines in sync when I'm working with
files in a could based filesystem like Dropbox or Owncloud.
&lt;/p&gt;


&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/LReZI7VAy8w" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;div id="outline-container-sec-2" class="outline-2"&gt;
&lt;h2 id="sec-2"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-2"&gt;
&lt;p&gt;
Relevant links:
&lt;/p&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Video series overview page:
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="http://cestlaz.github.io/stories/emacs"&gt;http://cestlaz.github.io/stories/emacs&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Code:
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="https://github.com/zamansky/using-emacs/tree/master"&gt;&lt;/a&gt;&lt;a href="https://github.com/zamansky/using-emacs/tree/master"&gt;https://github.com/zamansky/using-emacs/tree/master&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>emacs</category><category>tools</category><guid>http://cestlaz.github.io/posts/using-emacs-20-yanking/</guid><pubDate>Sun, 13 Nov 2016 16:00:00 GMT</pubDate></item><item><title>Science Talent Search winners do not a great school make</title><link>http://cestlaz.github.io/posts/dont-focus-on-sts/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;p&gt;
Over on Facebook, my Alma Mater and long time employer, Stuyvesant
High School seems to be making a big push to up it's Regeneron Science
Talent Search game. For those of you who aren't familiar, that's the
latest incarnation of &lt;a href="https://en.wikipedia.org/wiki/Regeneron_Science_Talent_Search"&gt;the Westinghouse Science Talent Search&lt;/a&gt; from
back in my day.
&lt;/p&gt;

&lt;p&gt;
It seems that Stuyvesant hasn't had that many semi finalists,
finalists, and winners over the past few years and isn't happy about
it. The result is a bunch of social media reminding us of old winners
and trying to raise funds to get us back to the glory days.
&lt;/p&gt;

&lt;p&gt;
I'd rather they spent there time, energy, and money elsewhere.
&lt;/p&gt;

&lt;p&gt;
When I was a young teacher, I was enamored with those types of
results. When my kids did well on a USACO competition, for example, I
felt pretty good about myself.
&lt;/p&gt;

&lt;p&gt;
Then one day, I had an epiphany. I was looking over the results of a
big USACO competition. My kids came in 4th, 5th, and I think
fifteenth. I was feeling pretty good about myself but then I realized
that Dan, Evan, and Jon - my three top scorers would probably have
done just fine without me. Sure, I do believe that I was able to help
them in their growth as both computer scientists and as people but
they were already off the charts smart. 
&lt;/p&gt;

&lt;p&gt;
The same is true about the Science Talent Search (STS) winners. A
friend of mine ran Stuyvesant's math research class for a number of
years. He had a pretty impressive string of finalists and winners. How
did he do it? 
&lt;/p&gt;

&lt;ul class="org-ul"&gt;
&lt;li&gt;Identify Stuyvesant's top talent - the ones already most likely to
succeed in the STS.
&lt;/li&gt;
&lt;li&gt;Pawn them off on a lab or professor.
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
The Stuy class, by and large, did little or nothing for these kids yet
we would hold them up as shining examples of how wonderful we were.
&lt;/p&gt;

&lt;p&gt;
When I had my epiphany, I started designing my intro class and
focusing my efforts on the whole school population. The results?
Scores of people succeeding in tech who never would have considered it
otherwise.
&lt;/p&gt;

&lt;p&gt;
While my super high achievers have indeed gone  on to successful lives
and careers, some of my most successful graduates, by any number of
measures have been the students who would otherwise have gotten lost
in the crowd at Stuy.
&lt;/p&gt;

&lt;p&gt;
The truth is, many of Stuyvesant's STS winners would have been STS
winners regardless of where they went. We may or may not have helped
them along the way but STS results are not the measure of a great
school.
&lt;/p&gt;

&lt;p&gt;
Improving a school, any school, for all its students might not help in
those bogus national ratings but that really should be what we're
about.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>education</category><guid>http://cestlaz.github.io/posts/dont-focus-on-sts/</guid><pubDate>Fri, 11 Nov 2016 20:22:41 GMT</pubDate></item><item><title>Using Emacs - 19 - moving to a live config</title><link>http://cestlaz.github.io/posts/using-emacs-19-live/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;p&gt;
Some of the videos I want to make are going to be much easier to do if
I'm working in my own account where my whole file tree is available. 
&lt;/p&gt;

&lt;p&gt;
It's also a little annoying changing between my full emacs config and
the one I'm developing here.
&lt;/p&gt;

&lt;p&gt;
So, I decided to move to this config for my real config and as I make
more videos move parts of my old configuration over to this new one.
&lt;/p&gt;

&lt;p&gt;
The only problem is that I &lt;b&gt;&lt;b&gt;need&lt;/b&gt;&lt;/b&gt; some of my current config right
now – things like my email setup.
&lt;/p&gt;

&lt;p&gt;
This video talks about how I'm going to set things up to take care of
everything.
&lt;/p&gt;




&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/8RwQNXOjSis" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;div id="outline-container-sec-2" class="outline-2"&gt;
&lt;h2 id="sec-2"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-2"&gt;
&lt;p&gt;
Relevant links:
&lt;/p&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Video series overview page:
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="http://cestlaz.github.io/stories/emacs"&gt;http://cestlaz.github.io/stories/emacs&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Code:
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="https://github.com/zamansky/using-emacs/tree/master"&gt;&lt;/a&gt;&lt;a href="https://github.com/zamansky/using-emacs/tree/master"&gt;https://github.com/zamansky/using-emacs/tree/master&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>emacs</category><category>tools</category><guid>http://cestlaz.github.io/posts/using-emacs-19-live/</guid><pubDate>Thu, 10 Nov 2016 16:00:00 GMT</pubDate></item><item><title>Flask - deploying to DigitalOcean</title><link>http://cestlaz.github.io/posts/digitaloceanflask/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;p&gt;
This post points to the next three videos in the Flask series.
&lt;/p&gt;

&lt;p&gt;
The first covers setting up a droplet (virtual server) on
&lt;a href="http://digitalocean.com"&gt;DigitalOcean&lt;/a&gt;. The second, deploying a flask application using &lt;a href="http://gunicorn.org/"&gt;Green
Unicorn&lt;/a&gt;, and the third, using &lt;a href="https://github.com/libfuse/sshfs"&gt;sshfs&lt;/a&gt; to remotely mount your files from
your DO box to your local machine and how to set up DNS using &lt;a href="http://freedns.afraid.org"&gt;FreeDNS&lt;/a&gt;.
&lt;/p&gt;

&lt;p&gt;
To help you on your way with DigitalOcean, here are links to a few of
their tutorials
&lt;/p&gt;

&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="https://www.digitalocean.com/community/tutorials/initial-server-setup-with-ubuntu-16-04"&gt;Server Setup (Ubuntu)&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.digitalocean.com/community/tutorials/how-to-connect-to-your-droplet-with-ssh%0A"&gt;Connecting to your droplet with ssh&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.digitalocean.com/community/tutorials/how-to-sqet-up-ssh-keys--2"&gt;Setting up ssh keys&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.digitalocean.com/community/tutorial_series/getting-started-with-linux"&gt;Getting started with Linux (series)&lt;/a&gt; 
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
In general, there are lots of great tutorials and guides at the
&lt;a href="http://digitalocean.com/community"&gt;Digital Ocean Community&lt;/a&gt;.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2" class="outline-2"&gt;
&lt;h2 id="sec-2"&gt;Setting up a Droplet&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-2"&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/LOS8PscXhz8" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-3" class="outline-2"&gt;
&lt;h2 id="sec-3"&gt;Deploying with Gunicorn&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-3"&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/oum5Kh-69pg" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-4" class="outline-2"&gt;
&lt;h2 id="sec-4"&gt;sshfs and FreeDNS&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-4"&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/aha2r5I18i0" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>devops</category><category>python</category><category>tools</category><guid>http://cestlaz.github.io/posts/digitaloceanflask/</guid><pubDate>Tue, 08 Nov 2016 19:35:52 GMT</pubDate></item><item><title>Using Emacs - 18 - Narrowing and iedit</title><link>http://cestlaz.github.io/posts/using-emacs-18-narrow/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;p&gt;
I meant to cover these last time but decided not to so as to keep the
videos to about 10 minutes each.
&lt;/p&gt;

&lt;p&gt;
First up this time round is &lt;a href="https://github.com/victorhge/iedit"&gt;iedit&lt;/a&gt; - a really cool mode that lets you
select all the instances of the marked selection at the same time and
edit them all at once. By default it's bound to &lt;b&gt;&lt;b&gt;C-l&lt;/b&gt;&lt;/b&gt;.
&lt;/p&gt;

&lt;p&gt;
For example, let's say you had the following code:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;f&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;somevar&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;somevar&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;somevar&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;somevar&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
You could mark one instance of &lt;b&gt;&lt;b&gt;somevar&lt;/b&gt;&lt;/b&gt;, hit &lt;b&gt;&lt;b&gt;C-;&lt;/b&gt;&lt;/b&gt; and you'd be
editing them all at once. When you're done, you hit &lt;b&gt;&lt;b&gt;C-;&lt;/b&gt;&lt;/b&gt; again and
everything is un-selected.
&lt;/p&gt;

&lt;p&gt;
There are other ways to modify multiple instances of a selection. You
can always search and replace or use Magnar Sveen's really cool
&lt;a href="https://github.com/magnars/multiple-cursors.el"&gt;multiple cursors&lt;/a&gt; package and I'm sure there are others but I like
iedit since it's small and simple. It also works for rectangular
editing but I didn't cover that in the video. I'll probably demo it
when I cover rectangular editing in general.
&lt;/p&gt;

&lt;p&gt;
Iedit has limitations. For insance, since it works globally, it isn't
perfect for renaming variables. If the above code snippet was part of
a larger program with many other instances of &lt;b&gt;&lt;b&gt;somevar&lt;/b&gt;&lt;/b&gt;, iedit
wouldn't, by itself, be as useful.
&lt;/p&gt;

&lt;p&gt;
You could reach for a language specific refactoring package but for
me, that's where &lt;b&gt;&lt;b&gt;narrowing&lt;/b&gt;&lt;/b&gt; comes in. You can mark a region and
tell emcas to &lt;b&gt;&lt;b&gt;narrow-to-region&lt;/b&gt;&lt;/b&gt; which hides everything outside the
region and temporarily (until you &lt;b&gt;&lt;b&gt;widen&lt;/b&gt;&lt;/b&gt;) treats the region as the
whole document. 
&lt;/p&gt;

&lt;p&gt;
So, you could narrow to the section of code you want to edit and then
use iedit from within.
&lt;/p&gt;

&lt;p&gt;
To make things easier, I grabed &lt;a href="http://endlessparentheses.com/emacs-narrow-or-widen-dwim.html"&gt;narrow-or-winden-dwim&lt;/a&gt; from &lt;a href="http://endlessparentheses.com/"&gt;Endless
Parentheses&lt;/a&gt;.
&lt;/p&gt;

&lt;p&gt;
I think the video makes the behaviour pretty clear.
&lt;/p&gt;

&lt;p&gt;
Enjoy
&lt;/p&gt;




&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/xne0kS1DfVs" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;div id="outline-container-sec-2" class="outline-2"&gt;
&lt;h2 id="sec-2"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-2"&gt;
&lt;p&gt;
Relevant links:
&lt;/p&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Video series overview page:
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="http://cestlaz.github.io/stories/emacs"&gt;http://cestlaz.github.io/stories/emacs&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Code:
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="https://github.com/zamansky/using-emacs/tree/master"&gt;&lt;/a&gt;&lt;a href="https://github.com/zamansky/using-emacs/tree/master"&gt;https://github.com/zamansky/using-emacs/tree/master&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>emacs</category><category>tools</category><guid>http://cestlaz.github.io/posts/using-emacs-18-narrow/</guid><pubDate>Wed, 02 Nov 2016 16:00:00 GMT</pubDate></item><item><title>Cornell Technion Project Studio</title><link>http://cestlaz.github.io/posts/cornell-tech-proj-studio/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;p&gt;
I spent this evening as a crit advisor for this semesters &lt;a href="http://tech.cornell.edu/studio/curriculum/product-studio"&gt;Project
Studio&lt;/a&gt;. The class is basically a finishing class for their Masters
students. The class forms teams that work with a "company champion"
that acts an advisor to build a product.
&lt;/p&gt;

&lt;p&gt;
As a Crit Advisor, I, along with two other people from the tech
industry have a give and take with three groups and hopefully we can
provide useful feedback.
&lt;/p&gt;

&lt;p&gt;
As a "tech industry person" I feel a bit like an outsider since I'm
really the "teacher guy," but I think I had some worthwhile things to
share with the groups.  Besides,
I'd like to think I'm sufficiently in touch with the tech industry
through "the family" to be a reasonably sound advisor.
&lt;/p&gt;

&lt;p&gt;
As it turns out, two of the groups I worked with had an education bent
so at least in terms of product they were in my wheelhouse.
&lt;/p&gt;

&lt;p&gt;
I don't want to talk specifically about the student products since I
didn't ask permission but I did want to share a few thoughts.
&lt;/p&gt;

&lt;p&gt;
The products reminded me very much of the projects my Stuy kids
produced in their senior SoftDev class. This is not to belittle the
Cornell Tech people but rather noting how advanced the work of the
Stuy kids is. Beyond that, I liked the composition of the groups I
talked to - nice combinations of skill sets and backgrounds. 
&lt;/p&gt;

&lt;p&gt;
I love the idea of the mentoring company which had an interesting effect on
the groups. In all cases, the mentoring company helped provide the
teams with an idea framework but in one case, I think the company's point of
view actually limited the groups vision a bit. This came up in our
discussions and I'm hoping that the students got something out of
that.
&lt;/p&gt;

&lt;p&gt;
I also liked the crit review I was part of - bringing in outsiders to
show your work to and to get feedback from. It would probably hard
logistically at Stuy, but I'll talk to the guys there about the
concept. 
&lt;/p&gt;

&lt;p&gt;
I shared my contact info with the two groups that asked and if they
follow up, I'd love to be a resource for them. 
&lt;/p&gt;

&lt;p&gt;
I'm also looking forward to taking part in more events like this in
the future.
&lt;/p&gt;</description><category>cs</category><guid>http://cestlaz.github.io/posts/cornell-tech-proj-studio/</guid><pubDate>Wed, 02 Nov 2016 00:34:03 GMT</pubDate></item><item><title>Halloween 2016</title><link>http://cestlaz.github.io/posts/halloween-2016/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;p&gt;
It's Halloween and for the first time in 21 years, I'm not at work in costume.
&lt;/p&gt;

&lt;p&gt;
It all began as a lark in October 1994:
&lt;/p&gt;



&lt;div align="center"&gt;
&lt;a href="http://cestlaz.github.io/img/2013-10-31-halloween/groo.jpg" rel="lightbox"&gt;
  &lt;img width="30%" src="http://cestlaz.github.io/img/2013-10-31-halloween/groo.jpg" class="" alt=""&gt;
&lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;
And grew from there. A partial list of characters include:
&lt;/p&gt;

&lt;ul class="org-ul"&gt;
&lt;li&gt;Groo the Wanderer,
&lt;/li&gt;
&lt;li&gt;Little Ceaser (Pizza Pizza)
&lt;/li&gt;
&lt;li&gt;The Jolly Green Giant
&lt;/li&gt;
&lt;li&gt;Homer Simpson (with my seniors as the rest of the cast)
&lt;/li&gt;
&lt;li&gt;Duffman
&lt;/li&gt;
&lt;li&gt;Hans and Franz (with Boris)
&lt;/li&gt;
&lt;li&gt;The Hulk
&lt;/li&gt;
&lt;li&gt;The Blues Brothers (with JonAlf)
&lt;/li&gt;
&lt;li&gt;Dr. Evil (with JonAlf as Austin Powers)
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
While it was a lark, I noticed that days after, my students were
somewhat more relaxed and fun. If nothing else, it accelerated us
getting to know each other.
&lt;/p&gt;

&lt;p&gt;
A likely turning point was when I was Bob Ross:
&lt;/p&gt;


&lt;div align="center"&gt;
&lt;a href="http://cestlaz.github.io/img/2013-10-31-halloween/bob_ross.jpg" rel="lightbox"&gt;
  &lt;img width="30%" src="http://cestlaz.github.io/img/2013-10-31-halloween/bob_ross.jpg" class="" alt=""&gt;

&lt;/a&gt;&lt;a href="http://cestlaz.github.io/img/2013-10-31-halloween/painting.jpg" rel="lightbox"&gt;
  &lt;img width="30%" src="http://cestlaz.github.io/img/2013-10-31-halloween/painting.jpg" class="" alt=""&gt;
&lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;
That was the first year that was just as performance based as it was costume based. 
&lt;/p&gt;

&lt;p&gt;
Of course, the downside is that pretty soon, I was expected to top
myself every year. The last couple of years were fun but part of me
felt like I was going through the motions. I needed a break.
&lt;/p&gt;

&lt;p&gt;
So, now at Hunter College, I'm taking that break - no costume this
year. We'll see what the future holds, but here's a youtube playlist
with some of my favorite halloweens past.
&lt;/p&gt;

&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/videoseries?list=PL9KxKa8NpFxJYgovyJhF4HZRsAqYKBLiG" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>halloween</category><guid>http://cestlaz.github.io/posts/halloween-2016/</guid><pubDate>Mon, 31 Oct 2016 12:47:22 GMT</pubDate></item><item><title>Why Hunter CS is so important to NYC</title><link>http://cestlaz.github.io/posts/hunter-cs-important/</link><dc:creator>Mike Zamansky</dc:creator><description>&lt;p&gt;
If you know me you know that my morning reads include a visit over to
&lt;a href="http://avc.com"&gt;avc.com&lt;/a&gt;, Today, &lt;a href="http://avc.com/2016/10/cranes/"&gt;Fred's post&lt;/a&gt; talked about development and progress,
evolution, if you would, in the city. Although not directly related,
it got me thinking about gentrification. 
&lt;/p&gt;

&lt;p&gt;
To me, gentrification all too often seems to result in pushing out
people and business that were there during the hard times.
&lt;/p&gt;

&lt;p&gt;
We don't need to force out long time residents that can no longer make
rent - we need to uplift communities with pathways to towards greater
economic opportunity.
&lt;/p&gt;

&lt;p&gt;
Those of us in CS Education, each in our own way, are trying to help
build those pathways.
&lt;/p&gt;

&lt;p&gt;
Return readers know that I've ranted about some of the popular magic
bullets. I've periodically talked about my concerns over code schools
but even at their best they represent a workforce program for the well
to do. I've also talked about efforts like P-Tech which sound good,
but besides the fact that &lt;a href="https://garyrubinstein.wordpress.com/2016/10/06/p-tech-principal-responds/"&gt;the emperor has no clothes&lt;/a&gt;, is the school
really preparing kids for opportunities in their own neighborhoods or
in data centers far from home?
&lt;/p&gt;

&lt;p&gt;
There are some workforce programs like &lt;a href="https://perscholas.org/"&gt;Per Scholas&lt;/a&gt; that I really like
and respect but they're limited in what they can do.
&lt;/p&gt;

&lt;p&gt;
What does that leave us with? The traditional path – college.
&lt;/p&gt;

&lt;p&gt;
In terms of tech, New York City has some amazing colleges. You ask
most people, they'll come back with NYU, Columbia. Great institutions
but &lt;b&gt;&lt;b&gt;very&lt;/b&gt;&lt;/b&gt; expensive.  Not everyone can afford $75,000 a year and
not everyone can afford to go into hundreds of thousands of debt.
&lt;/p&gt;

&lt;p&gt;
This is why Hunter CS is so important. Actually CUNY but I can only
affect my little corner of the world. 
&lt;/p&gt;

&lt;p&gt;
Hunter College has a really nice CS program and department. It's small
and has flown under the radar but it's one of the reasons I came over
to Hunter. 
&lt;/p&gt;

&lt;p&gt;
One of my responsibilities at Hunter is to develop our new honors CS
program and to connect all of  Hunter CS to the tech sector in NY. 
&lt;/p&gt;

&lt;p&gt;
I haven't written much about what's been going on but that will change
int the months to come. Suffice it to say that to uplift our
communities we need real, affordable educational opportunities and in
terms of tech, education that leads to real opportunities in
our city's tech sector.
&lt;/p&gt;

&lt;p&gt;
I'm convinced that Hunter College can be a game changer for the wealth
of young talent we have in New York and for our tech sector.
&lt;/p&gt;</description><category>education</category><category>policy</category><guid>http://cestlaz.github.io/posts/hunter-cs-important/</guid><pubDate>Sun, 30 Oct 2016 23:13:23 GMT</pubDate></item></channel></rss>