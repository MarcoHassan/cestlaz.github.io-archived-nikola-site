<?xml version='1.0' encoding='UTF-8'?>
<?xml-stylesheet href="http://cestlaz.github.io/assets/xml/atom.xsl" type="text/xsl media="all"?>
<feed xml:lang="en" xmlns="http://www.w3.org/2005/Atom">
  <title>C'est la Z</title>
  <id>http://cestlaz.github.io/index.atom</id>
  <updated>2018-04-25T21:31:56Z</updated>
  <author>
    <name>Mike Zamansky</name>
  </author>
  <link rel="self" type="application/atom+xml" href="http://cestlaz.github.io/index.atom"/>
  <link rel="next" type="application/atom+xml" href="http://cestlaz.github.io/index-38.atom"/>
  <link rel="alternate" type="text/html" href="http://cestlaz.github.io/"/>
  <generator uri="https://getnikola.com/">Nikola</generator>
  <entry>
    <title>Do the students finish the tests or does the test finish the students</title>
    <id>http://cestlaz.github.io/posts/tests-finish-students/</id>
    <updated>2018-04-25T15:53:06-04:00</updated>
    <published>2018-04-25T15:53:06-04:00</published>
    <author>
      <name>Mike Zamansky</name>
    </author>
    <link rel="alternate" type="text/html" href="http://cestlaz.github.io/posts/tests-finish-students/"/>
    <summary type="html">&lt;div id="outline-container-orgd7aad17" class="outline-2"&gt;
&lt;h2 id="orgd7aad17"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgd7aad17"&gt;
&lt;p&gt;
I tweeted this the other day:
&lt;/p&gt;

&lt;blockquote class="twitter-tweet" data-lang="en"&gt;&lt;p lang="en" dir="ltr"&gt;Why don't so many  teachers and professors understand that the test or assignment you can do in 15 minutes will take your beginning students at least an hour and probably a lot more to complete.&lt;/p&gt;— Mike Zamansky (@zamansky) &lt;a href="https://twitter.com/zamansky/status/986609723557404673?ref_src=twsrc%5Etfw"&gt;April 18, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;

&lt;p&gt;
What led to the tweet was a discussion I was having with some students
about not having enough time on tests which led to a discussion of
having to drop everything to spend every waking hour on a project.
&lt;/p&gt;
&lt;/div&gt;


&lt;div id="outline-container-org94426e2" class="outline-3"&gt;
&lt;h3 id="org94426e2"&gt;Let's talk about tests.&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org94426e2"&gt;
&lt;p&gt;
I'm not saying that tests are the best forms of assessment - most of
the time I'd much rather have students work on projects. There are,
however, times when tests make sense or are otherwise appropriate.
&lt;/p&gt;

&lt;p&gt;
In any event, writing a test is hard. Rather, writing good test is
hard. It's certianly easy enough to put a bunch of multiple choice or
short answer questions on paper and it's easy enough to give a hard
equation to solve or some code to write but creating a good test is a
task and half. You first have to figure out what you're trying to
assess - memory, thought process, synthesizing concepts? Then you want
to construct questions that give you insights into your students
knowledge and thought process.
&lt;/p&gt;

&lt;p&gt;
Some things that I consider when putting together a test:
&lt;/p&gt;

&lt;ul class="org-ul"&gt;
&lt;li&gt;Does it ramp up in difficulty - that is, are there some "gimme
questions" and some challenges.&lt;/li&gt;
&lt;li&gt;Are questions all or nothing - if a kid doesn't see things my way
are they dead in the water.&lt;/li&gt;
&lt;li&gt;Will the test repeatedly penalize or reward the same concept over
and over again on the test.&lt;/li&gt;
&lt;li&gt;Do I cover all the concepts I want to assess.&lt;/li&gt;
&lt;li&gt;Do you make kids waste time with boilerplate code.&lt;/li&gt;
&lt;li&gt;Do the questions take so long to read and digest that there's little
time to form and write down answers.&lt;/li&gt;
&lt;li&gt;Do the answers convey anything about the students thought process or
just correctness.&lt;/li&gt;
&lt;li&gt;Is it easy or impossible to grade and grade fairly.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
What about length? To me a well crafted test should be completed by
the average student with a few minutes to spare - enough time to check
a couple of answers. This is not to say that they'll ace the exam,
just finish it. Far too many teachers make tests an assessment of
speed and accuracy at speed rather than understanding. That might
actually be important in certain contexts - preparing for the APCS-A
multiple choice section as an example but in general, it's not a good
way of assessing what a student really knows. 
&lt;/p&gt;

&lt;p&gt;
It's also important that the the average student can achieve a score
that you expect from an average student. That's probably in the 80s on
a 0-100 scale or a B. Yes, I know, C is supposed to be average but
with grade inflation being what it is…
&lt;/p&gt;

&lt;p&gt;
You should &lt;b&gt;NOT&lt;/b&gt; give an assessment where the average score is
something like 17 out of 100 with the top student earning a 37. Sure,
you can curve it but it also places a lot of stress on the
students. You might do this from time to time - you might misjudge the
difficulty of a test or your class but it shouldn't be a regular
occurence. Teachers sometimes forget about the psychological affect
that a unfair test can have on a student even if the teacher "fixes" it
after the fact.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org23e70d8" class="outline-3"&gt;
&lt;h3 id="org23e70d8"&gt;Don't be afraid to experiment or have some fun.&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org23e70d8"&gt;
&lt;p&gt;
It's also ok to try different things. One year, having just completed
a unit on Cellualar Automata I decided to give a quiz. I figured it
would take the kids 10 to 15 minutes so I gave them 30. The quiz was
something like the following:
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;
You have 30 minutes to compose something on a sheet of paper that when
I review it convinces me that you know something about the Cellular
Automata Unit we just completed.
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
Some kids loved the quiz, some hated it. The ones that hated it had
been trained for years as expert standardized test takers and this
level of freedom really freaked the out.
&lt;/p&gt;

&lt;p&gt;
Another time, I gave a multi page test of serious questions mixed with
crazy shenanigans. Question one would be some CS problem followed by
some instructions like "stand up, do 5 jumping jacks and sit down" or
"shout out your favorite olde timey exclamation" or even "stand up, if
or when you see another student standing, switch seats with the and
continue the test." The test started with explicit instructions not to
read ahead but to read and do each question in order. The last page
was the answer key and I asked the kids to self-grade. Interestingly
enough the grading was pretty honest. After that one, I received a few
apology emails from kids who read to the end first encouraging me to
give them failing grades for cheating. Wow, I wasn't expecting
that. The test was something of an end of year goof. The CS questions
were really easy - I wanted to reward them with something silly and
easy - a guaranteed A after a year of hard work.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org8daf8eb" class="outline-3"&gt;
&lt;h3 id="org8daf8eb"&gt;Tests to drive instruction and future practice&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org8daf8eb"&gt;
&lt;p&gt;
As a final point to ponder, tests shouldn't only be about grades. A
well crafted test should drive instruction. Kids will get answers
wrong - will your questions be crafted so that you can gain insights
into why the got them wrong.
&lt;/p&gt;

&lt;p&gt;
In an early class you might notice things like:
&lt;/p&gt;

&lt;ul class="org-ul"&gt;
&lt;li&gt;kids printing rather than returning answers&lt;/li&gt;
&lt;li&gt;kids not understanding scope&lt;/li&gt;
&lt;li&gt;kids having difficulty with idioms like &lt;code&gt;i=i+1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;kids needing more scaffolding to approach a problem&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
This can drive instruction moving forward.
&lt;/p&gt;

&lt;p&gt;
Over time you'll also learn how to fine tune your tests and other
assessments.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgcbf26d7" class="outline-3"&gt;
&lt;h3 id="orgcbf26d7"&gt;Next time, we'll talk about projects&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgcbf26d7"&gt;
&lt;p&gt;
Unless of course I get distracted by another blog topic or shiny
object.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</summary>
    <category term="assessments" label="assessments"/>
    <category term="education" label="education"/>
  </entry>
  <entry>
    <title>Using Emacs 48 Silversearcher</title>
    <id>http://cestlaz.github.io/posts/using-emacs-48-silversearcher/</id>
    <updated>2018-04-22T17:28:41-04:00</updated>
    <published>2018-04-22T17:28:41-04:00</published>
    <author>
      <name>Mike Zamansky</name>
    </author>
    <link rel="alternate" type="text/html" href="http://cestlaz.github.io/posts/using-emacs-48-silversearcher/"/>
    <summary type="html">&lt;div id="outline-container-org67b566e" class="outline-2"&gt;
&lt;h2 id="org67b566e"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org67b566e"&gt;
&lt;p&gt;
A couple of days ago I wrote about on my &lt;a href="http://cestlaz.github.io/posts/unit-tests-grading-workflow"&gt;lab grading workflow&lt;/a&gt;. In the
post I mentioned that I used Emacs to easily navigate between student
folders and files so I can actually look at their work in addition to
their programs output and test results.
&lt;/p&gt;

&lt;p&gt;
The key is a combination of &lt;code&gt;dired&lt;/code&gt; and &lt;a href="https://github.com/Wilfred/ag.el"&gt;ag&lt;/a&gt;, Emacs's interface to &lt;a href="https://github.com/ggreer/the_silver_searcher"&gt;the
Silver Searcher&lt;/a&gt; which is something like a recursive code grep on
steroids. I also briefly try to show &lt;a href="https://github.com/mhayashi1120/Emacs-wgrep"&gt;wgrep&lt;/a&gt; in the video which allows
you to edit Emacs grep buffers, effectively allowing you to make
changes across a set of files all at once. It ended up not working
with silversearcher - if anyone out there knows why, please chime in.
&lt;/p&gt;

&lt;p&gt;
Enjoy:
&lt;/p&gt;

&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/-sFTkCQ774o" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;</summary>
    <category term="editing" label="editing"/>
    <category term="emacs" label="emacs"/>
    <category term="tools" label="tools"/>
  </entry>
  <entry>
    <title>No Magic Bullets - Discovery Learning</title>
    <id>http://cestlaz.github.io/posts/no-magic-bullets-constructivism/</id>
    <updated>2018-04-21T07:40:16-04:00</updated>
    <published>2018-04-21T07:40:16-04:00</published>
    <author>
      <name>Mike Zamansky</name>
    </author>
    <link rel="alternate" type="text/html" href="http://cestlaz.github.io/posts/no-magic-bullets-constructivism/"/>
    <summary type="html">&lt;div id="outline-container-org94aa495" class="outline-2"&gt;
&lt;h2 id="org94aa495"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org94aa495"&gt;
&lt;p&gt;
The most recent NYC CSTA chapter meeting was "How do I assess CS?" I
wanted to go but it's been such a crazy month I was just too wiped
out. Fortunately, the meetup was &lt;a href="https://www.youtube.com/watch?v=XIMKAZbHAiA&amp;amp;index=83&amp;amp;list=WL&amp;amp;t=1796s"&gt;recorded&lt;/a&gt;. I was able to watch the
first half this morning while working out on my &lt;a href="https://www.staczero.com/hero"&gt;stationary trainer&lt;/a&gt;
which leads me to today's rare Saturday morning blog
post. The meetup consisted of two panels. The first was made up of K12
teachers who taught CS. I can't talk about the second panel yet since I'm
only halfway through but there were a couple of points made by my
friend &lt;a href="https://twitter.com/KatieJergens"&gt;Katie Jergens&lt;/a&gt; who teaches at Dalton that I thought were worth
talking about.
&lt;/p&gt;

&lt;p&gt;
The first was when Katie noted that through working with the panel,
one of her takeaways was that:
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;
Giving students an explicit strategy for solving a problem - "this is
how I would do it….," - giving them an explicit strategy first and then giving them a
problem for which that strategy would apply is much more effective than
having them discover it on their own.
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
This was refreshing to hear after being beaten over the head on
discovery learning and constructivism for the past five or so
years as being the magic bullet for teachers. I shared more thoughts
on this a few weeks ago when I wrote about a SIGCSE paper presented by
&lt;a href="https://cestlaz.github.io/posts/sigcse2018-bootstrap/"&gt;Bootstrap World&lt;/a&gt; that I very much liked. 
&lt;/p&gt;

&lt;p&gt;
Katie went on to talk about how the group found that while "discovery
learning" can be effective it can also be frustrating and lose kids
along the way. It also takes a lot of time and preparation, something
that's short on supply in most public schools.
&lt;/p&gt;

&lt;p&gt;
This made me think about the recent flurry
of discussion around the debunking of learning styles which had
previously been the magic bullet. When I started, the secret sauce was cooperative
learning. 
&lt;/p&gt;

&lt;p&gt;
Of course any good teacher knows there's no magic bullet. You fill
your tool belt and chest with as much as you can and use what's
best based on your strengths as a teacher combined with what will work
best with your students.
&lt;/p&gt;

&lt;p&gt;
Another point that Katie made that I found refreshing had to do with 
something she does with her classes. A good portion of a student's grade is
based on what she calls a "booster." Each student has to work one on
one with her on some project. The student either scores a 0 or a 100 -
the student keeps working with the direct support of the teacher until
it's perfect. 
&lt;/p&gt;

&lt;p&gt;
The important thing that Katie said with respect to this is "I can
do this because my largest class is sixteen students." No way could
this ever scale to a public school where a teacher can meet with over
150 students a day and barely has time eat lunch let alone
work one on one with a student in a suitably quiet place like an
office. The refreshing thing to hear was the acknowledgment of the
fact that what works in a rich private school won't work in a public
school. 
&lt;/p&gt;

&lt;p&gt;
All to often education and yes, CS Ed is driven by people who
really have no clue. They're anointed as thought leaders but they
don't walk the walk. Some have some knowledge and experience but many
don't. Until you've gotten a few years under your belt in a strap
cashed public school that takes all comers, don't tell them how they
should do it. Katie didn't - she acknowledged the problem - too bad so
many others don't. 
&lt;/p&gt;

&lt;p&gt;
I'm looking forward to watching the rest of the video during a future
workout and might have more to share then. For now, take a look for
yourself.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</summary>
    <category term="assessment" label="assessment"/>
    <category term="csed" label="csed"/>
    <category term="teaching" label="teaching"/>
  </entry>
  <entry>
    <title>Unit Tests Grading Workflow</title>
    <id>http://cestlaz.github.io/posts/unit-tests-grading-workflow/</id>
    <updated>2018-04-20T17:49:28-04:00</updated>
    <published>2018-04-20T17:49:28-04:00</published>
    <author>
      <name>Mike Zamansky</name>
    </author>
    <link rel="alternate" type="text/html" href="http://cestlaz.github.io/posts/unit-tests-grading-workflow/"/>
    <summary type="html">&lt;div id="outline-container-orgab2bca9" class="outline-2"&gt;
&lt;h2 id="orgab2bca9"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgab2bca9"&gt;
&lt;p&gt;
I've talked before about unit testing (&lt;a href="http://cestlaz.github.io/posts/testing-testing"&gt;here&lt;/a&gt;, and &lt;a href="http://cestlaz.github.io/posts/testing-part2"&gt;here&lt;/a&gt;). My premise is
that in addition to being an important industry technique, it's a
sound practice for students studying CS. I also contend that it can
make grading easier on the teacher. Maybe not as easy as an
auto-grader but those have &lt;a href="https://cestlaz.github.io/posts/2015-10-16-graders.html/#.WtplHHXwZhE"&gt;their own problems&lt;/a&gt;. 
&lt;/p&gt;

&lt;p&gt;
Since I spent most of today grading I thought I'd share my current
workflow and how unit tests have made me more efficient.
&lt;/p&gt;

&lt;p&gt;
I have each student make a single GitHub repo for all individual
homeworks, labs and small projects. They'll make additional repos for
larger and group projects. They fill out a Google form to give me the
repo link. I download the form and end up with a CSV file something like this:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Doe, John, git@github.com:johndoe/mymoework.git
Doe, Jane, git@github.com:janedoe/labs.git
etc.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;
My goal is to clone each students repo into a directory and then
throughout the term, they add assignments to their own repos using the
names and specifications I give them. For example, after assigning
three assignments, I could pull everything from their repos and I
would have a directory structure something like this:
&lt;/p&gt;


&lt;pre class="example"&gt;
hw
├── doe_jane
│   ├── hw_01
│   ├── hw_02
│   └── hw_03
│ 
└── doe_john
    ├── hw_01
    └── hw_02
&lt;/pre&gt;

&lt;p&gt;
To get there, I have to change the csv file to a small shell script:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git clone git@github.com:johndoe/mymoework.git doe_john
git clone git@github.com:janedoe/labs.git doe_jane
etc.
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
I usually do this in Emacs with a macro.
&lt;/p&gt;

&lt;p&gt;
Now I'm ready to go.
&lt;/p&gt;

&lt;p&gt;
Whenever there's a new assignment, I just have to update all the
repos. I go into the root hw directory and loop through all the
subdirectoryes:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cs /path/to/hw_root
for i in `ls`
do 
  cd /path/to/hw_root/$i
  git pull
done
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
At this point I could go into each repo but we can do better. Since I
have all of my students submit a Makefile with a default target to
build an executable named &lt;code&gt;main&lt;/code&gt; and also a target named &lt;code&gt;tests&lt;/code&gt; which
will build an executable to run the unit tests named &lt;code&gt;tests&lt;/code&gt; I do this
instead of a straight pull:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cs /path/to/hw_root
for i in `ls`
do 
  cd /path/to/hw_root/$i
  git pull
  cd hw_03 # or whatever assignment I'm grading
  make tests
  make 
done
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Now, if I want, I can go into each directory, run the tests by typing
&lt;code&gt;./tests&lt;/code&gt;  and the hw or project with &lt;code&gt;./main&lt;/code&gt;. I can also add a
couple of lines to the for loop above like:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;echo "$i Test Report\n----------------\n" &amp;gt;&amp;gt; /path/to/hw_root/test_report
./tests &amp;gt;&amp;gt; /path/to/hw_root/test_rport
echo "----------------------\n\n"
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
This gives me a single file with everyone's test results. Either by
doing this or by running the tests in each folder manually I can
quickly see what works and what doesn't.
&lt;/p&gt;

&lt;p&gt;
While I'm doing this, I have Emacs up and with &lt;b&gt;dired mode&lt;/b&gt; and more
specifically &lt;b&gt;ag-dired-regexp&lt;/b&gt; which lets me easily
navigate to any student's files. Combined with the test results I can
quickly evaluate the entire assignment.
&lt;/p&gt;

&lt;p&gt;
Put all of this together and it makes grading somewhat bearable. I can
work through well written, correct assignments extremely quickly and
drill down into the other projects efficiently as well.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</summary>
    <category term="emacs" label="emacs"/>
    <category term="grading" label="grading"/>
    <category term="testing" label="testing"/>
    <category term="workflow" label="workflow"/>
  </entry>
  <entry>
    <title>TEALS Time</title>
    <id>http://cestlaz.github.io/posts/teals-time/</id>
    <updated>2018-04-18T10:14:13-04:00</updated>
    <published>2018-04-18T10:14:13-04:00</published>
    <author>
      <name>Mike Zamansky</name>
    </author>
    <link rel="alternate" type="text/html" href="http://cestlaz.github.io/posts/teals-time/"/>
    <summary type="html">&lt;div id="outline-container-orgc173508" class="outline-2"&gt;
&lt;h2 id="orgc173508"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgc173508"&gt;
&lt;p&gt;
Everybody know's I'm the Statler and Waldorf of the CS Education
world.
&lt;/p&gt;


&lt;div class="figure"&gt;
&lt;p&gt;&lt;img src="https://media1.giphy.com/media/nPxVvyTWo1aIU/giphy.gif" alt="giphy.gif"&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;
I've been known to be "prickly," which is a nice way of putting it and
I'm openly critical of many programs out there.
&lt;/p&gt;

&lt;p&gt;
One program, however, that I very much like is &lt;a href="https://www.tealsk12.org/"&gt;TEALS&lt;/a&gt;. They've been
around since 2009 founded by &lt;a href="https://twitter.com/KevinKWang"&gt;Kevin Wang&lt;/a&gt;, a former teacher. The basic
idea was to have tech professionals go to a school on the way to work
and team teach a CS class with one of the school's teachers. The tech
person would provide the CS expertise and the teacher would provide
the education chops. They'd both learn from each other and the
students from both of them. I didn't know what to make out of it when I
first heard about them and in general, I am  pretty skeptical about drop in
programs.
&lt;/p&gt;

&lt;p&gt;
After a couple of years, I started hearing from my former students. As
it turns out, a number of them had independently discovered TEALS and
become volunteers. They all talked about how rewarding the experience
was and how much the kids were getting that they wouldn't have gotten
otherwise.
&lt;/p&gt;

&lt;p&gt;
I was sold.
&lt;/p&gt;

&lt;p&gt;
TEALS has expanded considerably in the decade since they started. Now
they support multiple classes at multiple levels, have different
models from the original team teaching to a model where the volunteer
is more of a general tech / programming resource and the teacher is
more self sufficient.
&lt;/p&gt;

&lt;p&gt;
Most importantly, they provide quality training and materials to both
the teachers and the tech volunteers. 
&lt;/p&gt;

&lt;p&gt;
No drop in program can ever replace well prepared knowledgeable
teachers but in K12 CS very few of those teachers exist and it will
take us years to produce them.
&lt;/p&gt;

&lt;p&gt;
Until then, TEALS is one of the best programs to get CS education to
our kids and even when we do get there, their ability to connect
schools with volunteers and resources can't be understated.
&lt;/p&gt;

&lt;p&gt;
If you're a tech professional and want to do some real good, volunteer
with TEALS - here's a link to more information:
&lt;a href="https://www.tealsk12.org/volunteers/"&gt;https://www.tealsk12.org/volunteers/&lt;/a&gt;.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</summary>
    <category term="cseducation" label="cseducation"/>
    <category term="programs" label="programs"/>
  </entry>
  <entry>
    <title>Math For Math Teachers - watering down CS Ed before we even start</title>
    <id>http://cestlaz.github.io/posts/math-for-math-teachers/</id>
    <updated>2018-04-14T10:44:36-04:00</updated>
    <published>2018-04-14T10:44:36-04:00</published>
    <author>
      <name>Mike Zamansky</name>
    </author>
    <link rel="alternate" type="text/html" href="http://cestlaz.github.io/posts/math-for-math-teachers/"/>
    <summary type="html">&lt;div id="outline-container-org30432c8" class="outline-2"&gt;
&lt;h2 id="org30432c8"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org30432c8"&gt;
&lt;p&gt;
Last Thursday I attended an event - the release of "Priming the
Computer Science Teacher Pump: Integrating CS Education into Schools
of Ed." &lt;a href="https://twitter.com/guzdial"&gt;Mark Guzdial&lt;/a&gt; wrote about it &lt;a href="https://computinged.wordpress.com/2018/04/16/finding-a-home-for-cs-ed-in-schools-of-ed-priming-the-cs-teacher-pump-report-released/"&gt;here&lt;/a&gt;. You can also download the
actual report &lt;a href="http://www.computingteacher.org/"&gt;here&lt;/a&gt;. 
&lt;/p&gt;

&lt;p&gt;
I agree with a number of the challenges in creating CS teacher
preparation programs that were outlined in the report and I also agree
with the idea that a strong CS teacher preparation program should
prepare teachers to teach any (and in the case of the programs I
designed, create new) curriculum but I wanted to focus on one specific
item that was brought up last Thursday. The item deals with how much
CS content a K12 CS teacher actually needs.
&lt;/p&gt;

&lt;p&gt;
The speaker at the event - I forget which one pointed out that a K12
CS teacher doesn't need the same content knowledge as a full CS major
let alone graduate student. This is something I wholeheartedly agree
with. The speakers throughout the event also emphasized that CS
teachers need enough content knowledge to be "generalists" and teach
any reasonable CS experience. Again, a point on which I agree.
&lt;/p&gt;

&lt;p&gt;
The point that concerned me - not in terms of the presenters intent
but rather in how I feel things will play out was when the presenter
said something to the affect (and I'm paraphrasing here):
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;
Math teachers don't need the same level of math content knowledge as
math majors. That's why we have "math for math teachers."
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
I was immediately reminded of a conversation I had once with a
colleague. He was looking over a student's college transcript and
noticed a course "Math for Math Teachers" and thought, "I always
thought that it was just math!!!!!"
&lt;/p&gt;

&lt;p&gt;
To many teachers, titles like "Calculus for Math Teachers" like
those similar courses "Calculus for Poets" or, the famous "Math
for Trees" are code for watered down math for non-math majors courses. From what I can
gather many of these courses are more Math Ed courses than Math but
offered through a school's Mathematics Department rather than through
an Ed school or department. They make sure that candidates  fill the "enough graduate
math credits" bucket. Everyone goes along with a nod and a wink and
life moves on. I want to emphasize that there's nothing inherently bad
with many of these courses - many are quite good but they're content
heavy education courses masquerading as pure content courses. 
&lt;/p&gt;

&lt;p&gt;
I managed to avoid doing any of that in my programs current design but
I did have to add a graduate algorithms class that I'm not entirely
happy with - I feel that it's requiring a level of depth that K12 CS
teachers will never  need. 
&lt;/p&gt;

&lt;p&gt;
Across all subject areas we should just acknowledge that K12 teachers
don't need a huge amount of graduate subject area credits. In my view,
teachers need depth a bit beyond the most advanced core course their
students will take and a good deal of breadth. Wouldn't it be nice if
we didn't have to play this song and dance this dance of creating
"special" subject courses for teachers. 
&lt;/p&gt;

&lt;p&gt;
The real thing to watch out for is how this is already playing out in
computer science. Colleges are starting to offer classes for K12
computer science teachers. I've seen a few course descriptions and
syllabi and spoken to a number of people involved with some of these
classes. It's typical to see something like "Java Programming for CS
Teachers" as opposed to a "first in CS sequence programming course
using Java." Look  under the hood and you'll find it's really "APCS-A
for teachers" - not creating a generalist teacher but rather  taking
us right back to preparing them to ape specific curricula and
sequences.
&lt;/p&gt;

&lt;p&gt;
We can do better. 
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</summary>
  </entry>
  <entry>
    <title>Why Strong K12 Teacher Certification is Important</title>
    <id>http://cestlaz.github.io/posts/strong-teacher-certification/</id>
    <updated>2018-04-10T17:39:30-04:00</updated>
    <published>2018-04-10T17:39:30-04:00</published>
    <author>
      <name>Mike Zamansky</name>
    </author>
    <link rel="alternate" type="text/html" href="http://cestlaz.github.io/posts/strong-teacher-certification/"/>
    <summary type="html">&lt;div id="outline-container-org44a29a0" class="outline-2"&gt;
&lt;h2 id="org44a29a0"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org44a29a0"&gt;
&lt;p&gt;
About a week ago New York State's new regulation creating a &lt;a href="http://www.crainsnewyork.com/article/20180327/NEWS/180329893/new-york-will-finally-have-certified-computer-science-teachers"&gt;K12 CS
teacher certification&lt;/a&gt; went live. Just the other day I was honored to be
interviewed by  &lt;a href="https://twitter.com/mflamm_reporter"&gt;Matt Flamm&lt;/a&gt; of Crain's New York in a &lt;a href="http://www.crainsnewyork.com/article/20180410/TECHNOLOGY/180419999/asked-answered-teacher-changed-jobs-to-push-for-new-york-states-new"&gt;follow up piece&lt;/a&gt;
about it. 
&lt;/p&gt;

&lt;p&gt;
Having K12 CS teacher certification is big and having quality programs
that lead to certification is &lt;b&gt;HUGE&lt;/b&gt;. In my view, it's a game changer.
&lt;/p&gt;

&lt;p&gt;
Let's Focus on high school, my wheelhouse.
&lt;/p&gt;

&lt;p&gt;
From a course offerings point of view it's the wild west. I don't mean
this as a bad thing, it's just that there's a huge range of offerings
from AP to home brew, physical computing, game based, cyber security,
you name it, there's a curriculum. The long and short of this is that
schools need teachers to teach all of these experiences. Without a
strong certification pathway we're going to be stuck with the current
training based model where teachers are trained to deliver canned
curricula rather than truly teach. With strong teacher preparation
programs teachers will be prepared not only to deliver all the
existing curricula but, arguable more importantly design their own
learning experiences appropriate for the populations they work with.
&lt;/p&gt;

&lt;p&gt;
This is important and alone would make having CS certification
worthwhile but to me the BIG win is that it creates a viable career
path. 
&lt;/p&gt;

&lt;p&gt;
People say we'll never find enough CS teachers because the tech
industry pays so well. I've never believed that. We find math teachers
even though many could flee to finance and chem teachers in spite of
big pharma's call so why can't we find CS teachers? Because we've
never provided a path into the profession and a viable career track. 
&lt;/p&gt;

&lt;p&gt;
Certification means that over time schools will be able to build CS
teachers and the discipline will be treated as the other
subjects. Prior to certification, a CS teacher might be cut if a
school's math department downsized. With certification, the career
track for a CS teacher is the same as the track for any other teacher.
&lt;/p&gt;

&lt;p&gt;
It also means that young people starting out who are interested in
both teaching and computer science will have a way of getting into the
profession - something that has never before existed.
&lt;/p&gt;

&lt;p&gt;
Having CS certification alone won't woo a
plethora of current tech professionals into teaching but over time,
we'll start to have CS Ed majors or CS majors pursuing CS ED Masters
degrees and entering the profession. This won't happen in a press or
election cycle but it will happen.
&lt;/p&gt;

&lt;p&gt;
This all hinges on quality prep programs. I think I've hit the sweet
spot with what I've designed at Hunter. The critical components are of
course content and pedagogy. Teacher candidates must have both
sufficient depth and breadth in the subject and all the pedagogical
content knowledge that comes along with it. I don't agree with the
common approach of taking a course to teach a course - that is, having
courses like "APCS - Principles for teachers" or "APCS - A for
teachers."  I want my teachers to be able to teach any reasonable
curriculum or design their own so we'll be rolling out courses that
examine the commonly offerd curricula but prepare teachers for a whole
lot more.
&lt;/p&gt;

&lt;p&gt;
It's been an exciting week in NY CS Ed and there's a lot more to come.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</summary>
    <category term="certification" label="certification"/>
    <category term="cs" label="cs"/>
    <category term="policy" label="policy"/>
    <category term="teaching" label="teaching"/>
  </entry>
  <entry>
    <title>Using Emacs Episode 47 - Magit</title>
    <id>http://cestlaz.github.io/posts/using-emacs-47-magit/</id>
    <updated>2018-04-07T09:05:36-04:00</updated>
    <published>2018-04-07T09:05:36-04:00</published>
    <author>
      <name>Mike Zamansky</name>
    </author>
    <link rel="alternate" type="text/html" href="http://cestlaz.github.io/posts/using-emacs-47-magit/"/>
    <summary type="html">&lt;div id="outline-container-org86de79d" class="outline-2"&gt;
&lt;h2 id="org86de79d"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org86de79d"&gt;
&lt;p&gt;
I've been holding off on doing a &lt;a href="https://magit.vc/"&gt;Magit&lt;/a&gt; video for a while. Mostly
because I wasn't using it exclusively and also because there are
already a number of good Magit videos and resources out there.
&lt;/p&gt;

&lt;p&gt;
What changed? Along with the new version of Magin, Jonas Bernoulli
wrote up &lt;a href="https://emacsair.me/2017/09/01/magit-walk-through/"&gt;a walkthrough of the Magit interface&lt;/a&gt;. For whatever reason,
it all finally clicked. 
&lt;/p&gt;

&lt;p&gt;
In spite of what the documentation says, Magit &lt;b&gt;is not&lt;/b&gt; an interface
for git. Magit is a &lt;b&gt;command and control&lt;/b&gt; center for git. You can
launch it just to execute some git commands but you can also leave it
up and running in an Emacs window or frame as a constant project
overview.
&lt;/p&gt;

&lt;p&gt;
Wow. Mind blown!!!
&lt;/p&gt;

&lt;p&gt;
If you use Emacs for Deveopment, you &lt;b&gt;have to&lt;/b&gt; use Magit. If you don't
use Emacs, you can load it on the side for Magit. If you're not a
developer, learn to code so you can use Magit!!!!!
&lt;/p&gt;

&lt;p&gt;
I tried to do justice to the package in the video. Magit along with &lt;a href="https://orgmode.org/"&gt;Org
Mode&lt;/a&gt; are arguably Emacs killer apps - enough in and of themselves to
justify using Emacs.
&lt;/p&gt;

&lt;p&gt;
Check out the video:
&lt;/p&gt;

&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/1IYsiHXR620" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;</summary>
    <category term="editing" label="editing"/>
    <category term="emacs" label="emacs"/>
    <category term="tools" label="tools"/>
  </entry>
  <entry>
    <title>Competitions and Hackathons</title>
    <id>http://cestlaz.github.io/posts/hs-competitions/</id>
    <updated>2018-04-06T17:22:15-04:00</updated>
    <published>2018-04-06T17:22:15-04:00</published>
    <author>
      <name>Mike Zamansky</name>
    </author>
    <link rel="alternate" type="text/html" href="http://cestlaz.github.io/posts/hs-competitions/"/>
    <summary type="html">&lt;div id="outline-container-orgf39025f" class="outline-2"&gt;
&lt;h2 id="orgf39025f"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgf39025f"&gt;
&lt;p&gt;
Today's the last day of spring break. After the weekend it's back to
the grind. It really hasn't been much of a spring break. The rain and
the snow made for very little spring and between working on the Hunter
/ CUNY2X Internship program and reviewing applications for my Hunter
Daedalus CS Honors program there has been very little break.
&lt;/p&gt;

&lt;p&gt;
Today was no exception - I spent much of the day working but I did
take a few hours to head over to Cornell Tech on Roosevelt
Island. Why? To check out the &lt;a href="https://www.cs.cornell.edu/events/cornell-high-school-programming-contest"&gt;Cornell High School Progrmaming
Contest&lt;/a&gt; - first time in NYC.
&lt;/p&gt;

&lt;p&gt;
I was invited by my friend and organizer &lt;a href="https://twitter.com/diane_levitt"&gt;Diane Levitt&lt;/a&gt;. I only stayed
for an hour or so but it was shaping up to be a great event. It looked
like around a hundred kids from maybe a dozen or so schools and it was
run simultaneously with high schoolers on the Ithaca campus where the
competition has been running for a few years. 
&lt;/p&gt;

&lt;p&gt;
The format was similar to other high school programming competitions
I've been to. Teams of two or three sharing a single computer to solve
a number of programming problems that varied in difficulty. You can
check out a few "warm up" problems on the competition &lt;a href="https://www.cs.cornell.edu/events/cornell-high-school-programming-contest"&gt;site&lt;/a&gt;. 
&lt;/p&gt;

&lt;p&gt;
The competition reminded me of the &lt;a href="https://www.sjcny.edu/long-island/academics/programs-departments/mathematics-and-computer-science/programming-competition"&gt;St. Joseph's High School
Programming Competition&lt;/a&gt; held every spring but in NYC so more
convenient for city dwellers. I went to the St. Joseph's competition a
few times and I'm a big fan. I particularly like the awards luncheon
after the competition. If I were to make one suggestion to the
organizers there it would be to mix the seating at the luncheon so
that kids get to sit with and spend time with kids from different
schools.
&lt;/p&gt;

&lt;p&gt;
These competitions contrast nicely with hackathons like &lt;a href="http://stuyhacks.com/%0A"&gt;StuyHacks&lt;/a&gt;
for which I acted as a judge a couple of months ago. Competitions are, well,
competitive. Hackathons can be but don't have to be. Competitions are
about solving problems, hackathons, building things. Each can speak to
a different kind of student. 
&lt;/p&gt;

&lt;p&gt;
Both competitions and hackathons have problems as well. On the competition
side we have:
&lt;/p&gt;

&lt;ul class="org-ul"&gt;
&lt;li&gt;Schools with more developed CS programs dominate&lt;/li&gt;
&lt;li&gt;A single strong student can carry a team&lt;/li&gt;
&lt;li&gt;Some kids don't like or do well in the competitive environment&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
And on the hackathon side:
&lt;/p&gt;

&lt;ul class="org-ul"&gt;
&lt;li&gt;24 hours of straight work is just a bad idea and a bad thing to
encourage.&lt;/li&gt;
&lt;li&gt;Big advantage to teams that bring prefab code.&lt;/li&gt;
&lt;li&gt;Big advantage to kids with experience.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
Both types of events are great opportunities for young
programmers. They're celebrate academic work, bring tech kids together
as a community and when done right are
something of a CS party. Neither type of event speaks to all kids so
it's great to have both competitions and hackathons to go along with
other types of events available for our kids. 
&lt;/p&gt;

&lt;p&gt;
Another thing I love abut the Cornell and St, Joseph's competitions
along with StuyHacks is that they're open to all schools and hence all
students. There's room for the novice and also the expert and you
don't have to be in a particular school or program to participate.
&lt;/p&gt;

&lt;p&gt;
There are other events beyond these three. There are online
competitions like &lt;a href="http://www.usaco.org/"&gt;the USACO&lt;/a&gt;, competitions on HackerRank and Topcoder,
&lt;a href="http://halite.io"&gt;Halite&lt;/a&gt; along with it's hackathon which is great but specialized and in
person ones that are farther away like the &lt;a href="http://pclassic.org/%0A"&gt;PClassic&lt;/a&gt; in Philidelphia
and Rowan's &lt;a href="http://elvis.rowan.edu/rupc/%0A"&gt;HS programming competition&lt;/a&gt; in New Jersey but it's great to
see great local opportunities like these emerging and hopefully
running for years to come.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</summary>
    <category term="competitions" label="competitions"/>
    <category term="cs" label="cs"/>
    <category term="events" label="events"/>
  </entry>
  <entry>
    <title>Tools and Complexity</title>
    <id>http://cestlaz.github.io/posts/tools-and-complexity/</id>
    <updated>2018-04-05T18:55:21-04:00</updated>
    <published>2018-04-05T18:55:21-04:00</published>
    <author>
      <name>Mike Zamansky</name>
    </author>
    <link rel="alternate" type="text/html" href="http://cestlaz.github.io/posts/tools-and-complexity/"/>
    <summary type="html">&lt;div id="outline-container-org32ed0d7" class="outline-2"&gt;
&lt;h2 id="org32ed0d7"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org32ed0d7"&gt;
&lt;p&gt;
&lt;a href="https://twitter.com/alfredtwo"&gt;Alfred Thompson&lt;/a&gt; wrote about &lt;a href="http://blog.acthompson.net/2018/04/thoughts-on-where-cs-education-tools.html"&gt;CS education tools&lt;/a&gt; earlier today. I've
also been meaning to write on the topic but from a different point of
view.
&lt;/p&gt;

&lt;p&gt;
I do my best to keep up with the latest and greatest in the CS world
both on the academic side as well as the professional one. That's not
really possible, but I do my best. When I have a small project to work
on I'll some times use it as an excuse to play with some recent
technology. Over December, I wanted to write an application viewer to
use for company / student internship matching. I started by looking at
&lt;a href="https://reactjs.org/"&gt;React&lt;/a&gt; but ended up using &lt;a href="https://vuejs.org/"&gt;Vue.js&lt;/a&gt; which I liked much more for a variety
of reasons.
&lt;/p&gt;

&lt;p&gt;
The viewer served it's purpose but I think it can be turned into a
much more comprehensive student / employer internship platform. I
tried to steal a few minutes over this past week's spring break to
start a rewrite using another toolset, Clojure, Clojurescript and
Reagent. I'm really liking the Clojure stack and using
Emacs and Cider for the IDE is really blowing me away. 
&lt;/p&gt;

&lt;p&gt;
What I've noticed is that for every new language of framework you also
have to learn a whole set of ancillary tools.
&lt;/p&gt;

&lt;p&gt;
It didn't used to be that way. Back in the day, things were much
simpler. I remembering doing work at Goldman Sachs, it was as simple
as typing something on the command line like &lt;code&gt;cc file1.c file2.c
file3.c&lt;/code&gt;. I of course had to be cutting edge and use fancy modern
tools like &lt;a href="https://www.gnu.org/software/make/"&gt;Make&lt;/a&gt;. What's more, the tools I used in industry were very
similar to what I used in college. 
&lt;/p&gt;

&lt;p&gt;
We now live in very different times.
&lt;/p&gt;

&lt;p&gt;
If you go to the getting started guides for React or Vue it's pretty easy to
get hello world up and running but beyond that you start to fall in to
the Javascript tooling hole. To start you need either &lt;b&gt;npm&lt;/b&gt; or &lt;b&gt;yarn&lt;/b&gt;
just to manage packages and dependencies. Then you need a build system
or bundler like &lt;b&gt;webpack&lt;/b&gt;, &lt;b&gt;browserify&lt;/b&gt;, or &lt;b&gt;parcel&lt;/b&gt; and that's not even
considering older options like &lt;b&gt;gulp&lt;/b&gt; and &lt;b&gt;grunt&lt;/b&gt; and ancillary tools
like &lt;b&gt;babel&lt;/b&gt;.
&lt;/p&gt;

&lt;p&gt;
A typical React or Vue project is going to need a &lt;a href="https://github.com/krasimir/react-webpack-starter/blob/master/package.json"&gt;project.json&lt;/a&gt; and
&lt;a href="https://github.com/krasimir/react-webpack-starter/blob/master/webpack.config.js"&gt;webpack.config.js&lt;/a&gt; file and sometimes some other files as well. Check
out the links. They're from a simple project template I found
online. Far from simple.
&lt;/p&gt;

&lt;p&gt;
When I was playing with Vue.js a couple of months ago, I ended up
using Webpack to convert the source code into the final JS, take care
of live-reloading, and in general manage the project. I still have no
idea how most of it works. I don't know if it's just me but I'm very
uncomfortable relying on tools that I really don't fully understand to
build my systems. 
&lt;/p&gt;

&lt;p&gt;
The Clojure world is little better with Leiningen and Boot. If you
don't believe me, try to make heads or tails of &lt;a href="https://github.com/bhauman/figwheel-template/blob/master/src/leiningen/new/figwheel/project.clj"&gt;this&lt;/a&gt;. 
&lt;/p&gt;

&lt;p&gt;
While it's true that as a professional you'll likely use one set of
tools on a day to day basis and you'll eventually get to know them
that doesn't mean it's not a good idea to prepare kids for what's to
come.
&lt;/p&gt;


&lt;p&gt;
On the K12 side we have drag and drop languages, specialized learning
IDEs like BlueJ, simple cut down IDEs like Dr Racket and completely
online environments like repl.it. All great starter tools that
insulate beginners from the complexities to come. College's
might get closer to the "real world" but just a tad. 
&lt;/p&gt;

&lt;p&gt;
Don't get me wrong, I like many of the tools used in K12
classes and there's far too much complexity in the professional world to
throw at beginners. If we look at a student's entire school
career, classes are already so packed with material it would be hard to
really prepare kids for the real world within their classes. You could
take that tried and true teacher / professor technique of just
requiring it and having the kids figure it out on their own but that's
really just downright abusive.
&lt;/p&gt;

&lt;p&gt;
I don't have an answer for this one. 
&lt;/p&gt;

&lt;p&gt;
I have my kids use tools like Git and GitHub early along with using
testing frameworks and external libraries. I also try to move my
students to a general purpose programmable platform like Emacs or
Vim. I think these are sound practices but students will still have a
big learning curve when they finally get to industry. 
&lt;/p&gt;

&lt;p&gt;
What I really would love it to see the tooling become simpler and
documentation better. &lt;a href="https://github.com/parcel-bundler/parcel"&gt;Parcel&lt;/a&gt;, a Javascript bundler is one of the newer
kids on the block and is much simpler and cleaner than alternatives
like Webpack. The new version of Clojure has it's own command line
tool which is also simpler than the alternatives. Maybe we are already
moving in the right direction and this entire rant will become moot in a couple of years.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</summary>
    <category term="cs" label="cs"/>
    <category term="csed" label="csed"/>
    <category term="education" label="education"/>
    <category term="tools" label="tools"/>
  </entry>
</feed>
