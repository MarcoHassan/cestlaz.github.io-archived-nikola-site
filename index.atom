<?xml version='1.0' encoding='UTF-8'?>
<?xml-stylesheet href="http://cestlaz.github.io/assets/xml/atom.xsl" type="text/xsl media="all"?>
<feed xml:lang="en" xmlns="http://www.w3.org/2005/Atom">
  <title>C'est la Z</title>
  <id>http://cestlaz.github.io/index.atom</id>
  <updated>2018-02-16T13:00:52Z</updated>
  <author>
    <name>Mike Zamansky</name>
  </author>
  <link rel="self" type="application/atom+xml" href="http://cestlaz.github.io/index.atom"/>
  <link rel="next" type="application/atom+xml" href="http://cestlaz.github.io/index-35.atom"/>
  <link rel="alternate" type="text/html" href="http://cestlaz.github.io/"/>
  <generator uri="https://getnikola.com/">Nikola</generator>
  <entry>
    <title>Using Emacs 41 Pandoc</title>
    <id>http://cestlaz.github.io/posts/using-emacs-41-pandoc/</id>
    <updated>2018-02-13T08:05:45-04:00</updated>
    <published>2018-02-13T08:05:45-04:00</published>
    <author>
      <name>Mike Zamansky</name>
    </author>
    <link rel="alternate" type="text/html" href="http://cestlaz.github.io/posts/using-emacs-41-pandoc/"/>
    <summary type="html">&lt;div id="outline-container-org9c4127f" class="outline-2"&gt;
&lt;h2 id="org9c4127f"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org9c4127f"&gt;
&lt;p&gt;
Another Emacs quick hit today. Actually, not really Emacs. Today's
video is a quick, really quick, look at &lt;a href="https://pandoc.org/"&gt;Pandoc&lt;/a&gt;. Pandoc is a document
converter. 
&lt;/p&gt;

&lt;p&gt;
Here are the formats that Pandoc can covert read from:
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;
Markdown, CommonMark, PHP Markdown Extra, GitHub-Flavored Markdown,
MultiMarkdown, and (subsets of) Textile, reStructuredText, HTML,
LaTeX, MediaWiki markup, TWiki markup, TikiWiki markup, Creole 1.0,
Haddock markup, OPML, Emacs Org mode, DocBook, JATS, Muse, txt2tags,
Vimwiki, EPUB, ODT, and Word docx.
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
And here are the ones it can write to:
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;
plain text, Markdown, CommonMark, PHP Markdown Extra, GitHub-Flavored
Markdown, MultiMarkdown, reStructuredText, XHTML, HTML5, LaTeX
(including beamer slide shows), ConTeXt, RTF, OPML, DocBook, JATS,
OpenDocument, ODT, Word docx, GNU Texinfo, MediaWiki markup, DokuWiki
markup, ZimWiki markup, Haddock markup, EPUB (v2 or v3), FictionBook2,
Textile, groff man, groff ms, Emacs Org mode, AsciiDoc, InDesign ICML,
TEI Simple, Muse, PowerPoint slide shows and Slidy, Slideous,
DZSlides, reveal.js, PDF
&lt;/p&gt;
&lt;/blockquote&gt;


&lt;p&gt;
That's pretty impressive
&lt;/p&gt;

&lt;p&gt;
I was faced with an html file describing a lab for all the CSCI13500
students at Hunter. I wanted to modify it for my class and that was
going to be a bear. I also wanted an easy way to have it render up on
GitHub. With pandoc, it was trivial. I just typed:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pandoc -f html -t org -o lab3.org lab3.html
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
which converted the file to org-mode. This was trivial to edit and
then I uploaded it to GitHub as the lab's Readme.org file which GitHub
automatically renders on the project page.
&lt;/p&gt;

&lt;p&gt;
Pandoc for the win.
&lt;/p&gt;

&lt;p&gt;
I've also used pandoc to move between org-mode and word files. 
&lt;/p&gt;

&lt;p&gt;
If you haven't checked out pandoc, you should.
&lt;/p&gt;

&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/qVUZsH-MDRM" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;</summary>
    <category term="emacs" label="emacs"/>
  </entry>
  <entry>
    <title>Google Sheets</title>
    <id>http://cestlaz.github.io/posts/google-sheets/</id>
    <updated>2018-02-12T14:28:28-04:00</updated>
    <published>2018-02-12T14:28:28-04:00</published>
    <author>
      <name>Mike Zamansky</name>
    </author>
    <link rel="alternate" type="text/html" href="http://cestlaz.github.io/posts/google-sheets/"/>
    <summary type="html">&lt;div id="outline-container-org440254c" class="outline-2"&gt;
&lt;h2 id="org440254c"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org440254c"&gt;
&lt;p&gt;
I make regular use of Google's office suite. I use Google forms all
the time to collect data, Google docs when I have to leave Emacs for
document preparation - usually when I have to collaborate with others
online and I use Google Sheets as my greadebook.
&lt;/p&gt;

&lt;p&gt;
I don't do a lot of data processing using Google sheets. For that I
download the data and write small scripts. On the other hand it turns
out that you can do some pretty nifty things by scripting right in
Google sheets. 
&lt;/p&gt;

&lt;p&gt;
Google sheets can be scripted using Javascript and Google's APIs. For
example, adding "hello" and "world" to the two bottom leftmost cells
in your active spreadsheet can be done by running a function like
this:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;function addHello() {
  var ss = SpreadsheetApp.getActiveSpreadsheet();
  ss.appendRow(['hello','world']);
  }
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
In general, it's pretty easy to grab, modify, or otherwise manipulate
cells from a spreadsheet with simple javascript.
&lt;/p&gt;

&lt;p&gt;
You can also send email from a Google app script. For me this was a
big win. I use it for emailing grades to students and also as a poor
man's mailmerge. The key call is:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;GmailApp.sendEmail(email , subject,msg);
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Here's a video walking through sending emails to a list of people from
a spreadsheet. The code is underneath.
&lt;/p&gt;

&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/EvQC1N9JMs0" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen&gt;&lt;/iframe&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;function sendEmail(to,subject,msg){

  GmailApp.sendEmail(to,subject,msg)
}


function getSheetByName(name){
  var ss = SpreadsheetApp.getActiveSpreadsheet();
  var sheets = ss.getSheets();
  for( var n in sheets){
    if (name==sheets[n].getName()){
     return sheets[n]; 
    }
  }
    return sheets[0];
}

function prepareMessage(name){
  var sheet = getSheetByName("Msg");
  var oldSheet = SpreadsheetApp.getActiveSheet()
  SpreadsheetApp.setActiveSheet(sheet)

  var dataRange = sheet.getRange(1,1,1,1)
  data = dataRange.getValues()
  var msg = data[0][0]
  msg = msg.replace("%FIRST%",name)
  SpreadsheetApp.setActiveSheet(oldSheet)
  return msg
}

function sendGrades(){
  var sheet = getSheetByName("grades")
  var rows = sheet.getLastRow()
  var cols = sheet.getLastColumn()
  var dataRange = sheet.getRange(2,1,rows-1,cols)
  var data = dataRange.getValues();
  for (i in data){
    var name = data[i][0]
    var to = data[i][1]
    var msg = prepareMessage(name)
    sendEmail(to,"Important Grade Info",msg)
  }

}
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</summary>
    <category term="admin" label="admin"/>
  </entry>
  <entry>
    <title>Using Emacs 40 - Atomic Chrome</title>
    <id>http://cestlaz.github.io/posts/using-emacs-40-atomic-chrome/</id>
    <updated>2018-01-31T07:00:00-04:00</updated>
    <published>2018-01-31T07:00:00-04:00</published>
    <author>
      <name>Mike Zamansky</name>
    </author>
    <link rel="alternate" type="text/html" href="http://cestlaz.github.io/posts/using-emacs-40-atomic-chrome/"/>
    <summary type="html">&lt;div id="outline-container-orgf521984" class="outline-2"&gt;
&lt;h2 id="orgf521984"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgf521984"&gt;
&lt;p&gt;
Thanks to everyone who voted for topics or commented with suggestions
for videos. I'll try to get to them in the coming months.
&lt;/p&gt;

&lt;p&gt;
Today is just a quick hit on Atomic Chrome - an Emacs package and
browser extension that allows you to edit web form inputs with Emacs.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgc86f7f8" class="outline-2"&gt;
&lt;h2 id="orgc86f7f8"&gt;UPDATE&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgc86f7f8"&gt;
&lt;p&gt;
I forgot to mention that you can set a shortcut key, at least in chrome rather than
clicking on the icon. This makes things much smoother.
&lt;/p&gt;

&lt;p&gt;
All you have to do is:
&lt;/p&gt;

&lt;ol class="org-ol"&gt;
&lt;li&gt;Go to &lt;b&gt;&lt;b&gt;chrome://extensions&lt;/b&gt;&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;On the bottom of the page you'll see a button to set &lt;b&gt;&lt;b&gt;keyboard shortcuts&lt;/b&gt;&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;Set the shortcut for Atomic Chrome&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;
Enjoy:
&lt;/p&gt;

&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/wyPZws66Sic" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;</summary>
    <category term="emacs" label="emacs"/>
    <category term="learning" label="learning"/>
    <category term="tools" label="tools"/>
  </entry>
  <entry>
    <title>On Textbooks</title>
    <id>http://cestlaz.github.io/posts/textbooks/</id>
    <updated>2018-01-27T14:28:44-04:00</updated>
    <published>2018-01-27T14:28:44-04:00</published>
    <author>
      <name>Mike Zamansky</name>
    </author>
    <link rel="alternate" type="text/html" href="http://cestlaz.github.io/posts/textbooks/"/>
    <summary type="html">&lt;div id="outline-container-org7ce6ce0" class="outline-2"&gt;
&lt;h2 id="org7ce6ce0"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org7ce6ce0"&gt;
&lt;p&gt;
I thought I'd answer Alfred Thompson's recent post on &lt;a href="http://blog.acthompson.net/2018/01/thinking-about-cs-textbooks.html"&gt;using
textbooks&lt;/a&gt;. Like Alfred, I've never used textbooks particularly
effectively. Even when I taught math I mostly used them as a resource
for problems. 
&lt;/p&gt;

&lt;p&gt;
I also agree with Alfred in questioning the "flipped class" model or
as I like to call it "homework" for reasons similar to Alfred's. 
&lt;/p&gt;

&lt;p&gt;
Even back in the Pascal days of APCS getting textbooks was an ordeal
in NYC. First, the book had to cover both the A and AB parts of the
class since I rarely had budget to buy two books for a class, then
they had to be sold by the high school division of the publishing
house eliminating many college texts and finally we had to get the
books on the "NYSTL list" so we could buy and pay for them. 
&lt;/p&gt;

&lt;p&gt;
I finally found a book I liked that covered the full year by Nance and
Naps. By then I knew that I wouldn't really work it into the class but
I felt that it explained things, the data structures and algorithms in
particular very well. 
&lt;/p&gt;

&lt;p&gt;
That's one thing I always look for in a text book. If I'm not tightly
integrating the text then I want the text to be a worthwhile resource
for the student. If a kid doesn't get it in class I want the text book
to be a second chance.
&lt;/p&gt;

&lt;p&gt;
When we moved to C++ we moved to Nance and Naps for the language and
Nance and Lambert for the Data Structures. Somehow I got the school to
fund both books. 
&lt;/p&gt;

&lt;p&gt;
Everything changed when the AP class went to Java. I never found a
Java based book that covered the data structures in a way I liked but
finding a text was a problem even beyond that hurdle.
&lt;/p&gt;

&lt;p&gt;
All of the Java based texts tightly integrated with some project or
library provide by the author. It was just like the AP case study. If
the case study worked well into your course and the way you taught it
was great, otherwise it was a bear to deal with. I settled on Lewis
and Loftus which integrated their own graphics library but always as
an add on to each chapter rather than tightly integrated.
&lt;/p&gt;

&lt;p&gt;
For my homebrew classes, I've never found a single textbook. The nice
thing today is that there are so many resources already
available. Tutorials, videos, online practice sites like codingbat and
more. There are also a number of authors who make their books
available online for free. I use one - &lt;a href="https://automatetheboringstuff.com/"&gt;Automate the Boring Stuff with
Python&lt;/a&gt; in one of my classes but I purchased a copy for myself and
encourage my students to do so as well if/when they're able to based
on economic situation. Usually I can cobble together a good set of
resources for the students that are both free and probably superior to
any single text book out there.
&lt;/p&gt;

&lt;p&gt;
All of this said, it's important that students have resources
independent of the teacher. If you can get a good textbook, that can
be it but fortunately, in this day and age we have many great
alternatives.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</summary>
  </entry>
  <entry>
    <title>Is Teaching CS Hard?</title>
    <id>http://cestlaz.github.io/posts/is-teaching-cs-hard/</id>
    <updated>2018-01-21T16:56:52-04:00</updated>
    <published>2018-01-21T16:56:52-04:00</published>
    <author>
      <name>Mike Zamansky</name>
    </author>
    <link rel="alternate" type="text/html" href="http://cestlaz.github.io/posts/is-teaching-cs-hard/"/>
    <summary type="html">&lt;div id="outline-container-orgd11c4cb" class="outline-2"&gt;
&lt;h2 id="orgd11c4cb"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgd11c4cb"&gt;
&lt;p&gt;
Last week, Mark Guzdial asked &lt;a href="https://computinged.wordpress.com/2018/01/19/what-does-it-mean-for-computer-science-to-be-harder-to-learn-than-other-stem-subjects/"&gt;What does it mean for Computer Science to be harder to learn
than other STEM subjects?&lt;/a&gt; as a follow up to his &lt;a href="https://cacm.acm.org/blogs/blog-cacm/224105-learning-computer-science-is-different-than-learning-other-stem-disciplines/fulltext"&gt;ACM Blog post&lt;/a&gt; this
month and the ensuing discussion.
&lt;/p&gt;

&lt;p&gt;
You should read both posts but here's how Mark started off the follow
up:
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;
I made an argument in my Blog@CACM Post for this month that “Learning
Computer Science is Different than Learning Other STEM Disciplines,”
and on Twitter, I explicitly added “It’s harder.”
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
When you talk about how hard or easy it is to teach a subject you can
do so at many levels. college, high school, middle etc.. Since most of
my career has been as a High School guy, let's focus there.
&lt;/p&gt;

&lt;p&gt;
I do in fact believe that it is hard to teach CS, at least to do it
well but is it harder to teach then other STEM subjects?
&lt;/p&gt;

&lt;p&gt;
Let's see how we're doing in those other subjects. I took a look at
the New York State &lt;a href="https://data.nysed.gov/reportcard.php?instid=800000081568&amp;amp;year=2016&amp;amp;createreport=1&amp;amp;regents=1"&gt;Regents Exam&lt;/a&gt; results from 2015/2016. I'm certainly
not a believer or supporter of standardized tests but they're a
convenient measure for the sake of this post.
&lt;/p&gt;

&lt;p&gt;
Only 58% of test takers scored 65 or higher on Integrated Algebra and
only 41% scored 3 (proficient) or higher on the Common Core version
with far more students taking the Common Core exam.
&lt;/p&gt;

&lt;p&gt;
Higher performing schools frequently offer Algebra in 8th grade but in
the lower performing districts, students frequently take it over the
course of two years. 
&lt;/p&gt;

&lt;p&gt;
The Geometry regents boasts a passing rate of about 40%. Trig does a
little better.
&lt;/p&gt;

&lt;p&gt;
The science regents exams look a little better but overall, these are
not terrific results, particularly on the classes that are required
for graduation.
&lt;/p&gt;

&lt;p&gt;
It seems that those other STEM fields aren't so easy to teach after all.
&lt;/p&gt;

&lt;p&gt;
On the other hand we have CS. If you listen to all the press releases
and media attention on APCS-P from this past year it would seem that
CS is easy to teach and learn. We have all these high school students
mastering a "college level" course and we can prepare teachers to be
master CS instructions with just a bit of in-service professional
development.
&lt;/p&gt;

&lt;p&gt;
The truth is, of course that CS isn't easy to teach. When you're a
summer or after school program or even an elective it's easy to create
a fun experience using shiny tools to self selecting students but when
you have to take everyone and prepare many of them to succeed in more
advanced classes we have a real challenge. We really should be looking
at retention in more advanced CS classes rather than just passing the
intro ones. Most students won't go beyond the intro class in any given
subject but the ones that do must be well prepared. Unfortunately, I
fear that the people who will get the blame when kids drop CS later on
will be the teachers of the more advanced classes regardless of who,
if anyone, is at fault.
&lt;/p&gt;

&lt;p&gt;
Teaching CS is hard. It's brand new and very open ended.  When
programming a solution to a problem kids start with a blank
slate. They don't have the library of patterns, vocabulary or &lt;a href="https://cestlaz.github.io/posts/programming-idioms"&gt;idioms&lt;/a&gt;
needed to build solitions. There are many ways a teacher can scaffold
the learning. Code tracing, analogies, Parsons problems and more but
the truth is teachers strong in both content and pedagogical knowledge
are still in rather short supply and as Mark wrote on his blog the
body of knowledge on teaching CS is just not that mature.
&lt;/p&gt;

&lt;p&gt;
On the other hand, Algebra students usually had a first look at some
of the topics prior to the class and much of the class can be
"learned" through memorizing relatively short procedures and
patterns. This might not lead to a depth of understanding but it does
get you past standardized tests. On the science side, the Living
Environment exam is really just a reading test.  On the other hand,
we're supposed to start teaching proof to students in Geometry and
that's really hard to do.
&lt;/p&gt;

&lt;p&gt;
So, teaching in general is hard and teaching CS is no exception. At
least it is if you're doing it right.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</summary>
  </entry>
  <entry>
    <title>Reading and Writing Recs</title>
    <id>http://cestlaz.github.io/posts/reading-and-writing-recs/</id>
    <updated>2018-01-04T08:49:18-04:00</updated>
    <published>2018-01-04T08:49:18-04:00</published>
    <author>
      <name>Mike Zamansky</name>
    </author>
    <link rel="alternate" type="text/html" href="http://cestlaz.github.io/posts/reading-and-writing-recs/"/>
    <summary type="html">&lt;div id="outline-container-orgf1bb60a" class="outline-2"&gt;
&lt;h2 id="orgf1bb60a"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgf1bb60a"&gt;
&lt;p&gt;
I've been on both sides of the recommendation game. I currently read
all the recommendations for students who apply to my &lt;a href="http://info.huntercs.org"&gt;honors CS program&lt;/a&gt;
at Hunter and some of the ones written for the Macaulay Honors
program. I also read some for the CSTUY summer program. On the other
side, I've written hundreds if not thousands of recs for seniors when
I was teaching at Stuy.
&lt;/p&gt;

&lt;p&gt;
I've been meaning to write about recs  and when I saw &lt;a href="http://avc.com/2018/01/some-thoughts-on-checking-references/"&gt;yesterday's post&lt;/a&gt;
on AVC.com I thought now would be a good time. While the situation is
not quite the same, much of what Fred wrote resonated strongly with
me.
&lt;/p&gt;

&lt;p&gt;
I wrote a lot of recs at Stuy. In a year after I taught juniors I'd
typically end up writing for anywhere between 40 and 75 kids and each
kid would apply to between 5 and 15 schools. Some were accepted early
and in many cases you use the same rec without tweaking for all the
kid's applications but it's still an enormous load.
&lt;/p&gt;

&lt;p&gt;
I also don't think I'm particularly good at it. Writing doesn't come
naturally to. That said, I try to do an honest job.
&lt;/p&gt;

&lt;p&gt;
The first and most important thing I do is make sure each student
understands that I'm not trying to get that kid into their percieved
dream school. My job writing a rec is to contribute to a picture of
who they are as both a student and as a person. The hope is that the
college admissions people will be looking for best fit students and
that the picture the application creates makes the fit clear
&lt;sup&gt;&lt;a id="fnr.1" class="footref" href="http://cestlaz.github.io/posts/reading-and-writing-recs/#fn.1"&gt;1&lt;/a&gt;&lt;/sup&gt;.
&lt;/p&gt;

&lt;p&gt;
Beyond that, I try to say something personal in each rec. Recount a
particular project or event. It's hard. It might be easier for
English teachers - English classes allow for much freer discussions
and assignments where students can reveal more about
themselves. It's harder in subjects like Math and Computer
Science. I'd invariably be asked to write recs for a number of kids –
good kids that were quiet, did there thing but to be honest, never
did much to stand out. I don't necessity mean stand out in terms of
grades, I mean in terms of making themselves known - revealing who
they were. I also try to keep recs short. Readers have a lot of these
to go through. I don't want to add to their load.
&lt;/p&gt;

&lt;p&gt;
Many teachers, including myself try to address this problem. We
interview the kids, have them write mini-essays and just plain
struggle when it comes time to write.
&lt;/p&gt;

&lt;p&gt;
To make it more challenging, the deadlines are all together so you
have to get them all done in a short period of time and at the same
time not fall into the rut of having them sound all the same.
&lt;/p&gt;

&lt;p&gt;
On the reader side, similar to what Fred said about references, a lot
of it is about what isn't written and about how it's written. The
challenge is that my code as a reader might be different from the
teacher writing the rec. 
&lt;/p&gt;

&lt;p&gt;
The key thing I look for when reading is a connection between the
writer and the kid. Often I read a rec and could apply it equally well
to every applicant in the stack. I also know that when I write recs
I've been guilty of this and it really does nothing to help the
student. 
&lt;/p&gt;

&lt;p&gt;
I also don't want to read about averages and test scores or anything
that's already covered in the application. I already get the numbers
and if a kid, let's say, volunteered at a community center, it's already on the
application. I don't want a teacher to mention it unless they
were involved or can otherwise add something that I wouldn't know just
from reading the appkication. 
&lt;/p&gt;

&lt;p&gt;
If I come away feeling that there's a connection between the teacher
and student that says a lot to me. It means the kid made an impression
on the teacher.
&lt;/p&gt;

&lt;p&gt;
For my Hunter Honors program I have an advantage (or possibly curse)
over when I read for other programs and this is similar to what Fred
wrote about following up on references. I know some of the teachers
writing the recs and I usually know teachers in the schools. Since the
number of applications I'm dealing with isn't huge, I can reach out to
my people and find out what's what. Last year I was able to justify
accepting a student based on additional information I was able to get
and now half a year later it's clear that the student is a terrific
fit.
&lt;/p&gt;

&lt;p&gt;
This would all be simpler if we didn't have to play games with
recommendations. When I was a teacher. rather than writing 50 - 70
recommendations, I'd rather have 20ish phone calls. One with each
school. I could briefly talk about the kids relative to each other and
to former students who went to any given institution and that's
that. It would be faster, easier, and fairer.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="footnotes"&gt;
&lt;h2 class="footnotes"&gt;Footnotes: &lt;/h2&gt;
&lt;div id="text-footnotes"&gt;

&lt;div class="footdef"&gt;&lt;sup&gt;&lt;a id="fn.1" class="footnum" href="http://cestlaz.github.io/posts/reading-and-writing-recs/#fnr.1"&gt;1&lt;/a&gt;&lt;/sup&gt; &lt;div class="footpara"&gt;Personally, I think the whole college application process is
both unfair and arbitrary but that's a discussion for another time.&lt;/div&gt;&lt;/div&gt;


&lt;/div&gt;
&lt;/div&gt;</summary>
  </entry>
  <entry>
    <title>APCS-P -  Bigger Intake Or Leaky Pipe</title>
    <id>http://cestlaz.github.io/posts/apcsp-bigger-intake-or-leaky-pipe/</id>
    <updated>2018-01-01T19:28:37-04:00</updated>
    <published>2018-01-01T19:28:37-04:00</published>
    <author>
      <name>Mike Zamansky</name>
    </author>
    <link rel="alternate" type="text/html" href="http://cestlaz.github.io/posts/apcsp-bigger-intake-or-leaky-pipe/"/>
    <summary type="html">&lt;div id="outline-container-org54ac178" class="outline-2"&gt;
&lt;h2 id="org54ac178"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org54ac178"&gt;
&lt;p&gt;
Advanced Placement Computer Science got top billing on Alfred
Thompson's &lt;a href="http://blog.acthompson.net/2018/01/computer-science-education-things-im.html"&gt;Things I'm Watching in 2017&lt;/a&gt; post. Alfred talks about how
APCS-P exploded onto the scene and wonders what will happen with APCS
this year. 
&lt;/p&gt;

&lt;p&gt;
I have some questions as well but mine won't be answered for years to
come, if ever. 
&lt;/p&gt;

&lt;p&gt;
Like it or not, the College Board has an out sized influence on K12
education. As long as people are convinced that AP=good there will be
a push for more and more AP classes and APCS-P is a perfect class to
push. CS is the hot topic in K12, the topic is getting a big push
from both politicians and industry, the class has no pre-requisites
and in spite of being called a college course is somehow appropriate
for a typical tenth grader.
&lt;/p&gt;

&lt;p&gt;
The concern here is that at the end of the day. APCS-P is an exam or
rather an exam plus two other assessments. The quality can vary
greatly. I've heard of APCS-P implementations that seem pretty
rigorous and I've seen implementations that are, quite frankly, a
joke. The question is this: is APCS-P both motivating kids to go on to
the next level and just as importantly preparing them to succeed at
that level? 
&lt;/p&gt;

&lt;p&gt;
We might never know.
&lt;/p&gt;

&lt;p&gt;
A high school might only offer APCS-P. If APCS-A isn't offered, we
might not know if the student went on to take more CS and we won't
know if the student succeeded or not. I've seen this with some very
high profile, popular, after school/summer non-profits. The kids have
a great time and the non-profits rave about how much their kids learn
but then the kids take a real CS class in school and drop like
flies. Was it the teacher/professor or did the non-profit set the kids up to
fail by convincing them they knew a whole lot more than they did and
that CS was super easy all the time. 
&lt;/p&gt;

&lt;p&gt;
If credit is given for APCS-P, it looks like it will be blanket
credit. CS majors and minors will still have to take all the same classes in
college and CS so it will be very hard to tell if APCS-P is
responsible for any uptick in CS. 
&lt;/p&gt;

&lt;p&gt;
At the end of the day, the College Board is going to make a lot of
money but if APCS-P becomes the standard high school CS course will
this leave us with true, quality CS4All? I have my doubts.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</summary>
    <category term="ap" label="ap"/>
    <category term="cs" label="cs"/>
    <category term="cs4all" label="cs4all"/>
  </entry>
  <entry>
    <title>Using Emacs 2017 Recap</title>
    <id>http://cestlaz.github.io/posts/using-emacs-2017-recap/</id>
    <updated>2017-12-29T14:17:53-04:00</updated>
    <published>2017-12-29T14:17:53-04:00</published>
    <author>
      <name>Mike Zamansky</name>
    </author>
    <link rel="alternate" type="text/html" href="http://cestlaz.github.io/posts/using-emacs-2017-recap/"/>
    <summary type="html">&lt;div id="outline-container-org7494781" class="outline-2"&gt;
&lt;h2 id="org7494781"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org7494781"&gt;
&lt;p&gt;
This past year I recorded 14 Using Emacs videos. This is on top of the
25 videos I made last year. The fall off in production is
understandable. I got through my day to day configuration in the
late 20s and since then the videos have just been on things I've
rediscovered, things that became useful and things that I just found
interesting. It was also a busier year.
&lt;/p&gt;

&lt;p&gt;
Why did I start the series? Mostly for my students. There's the built
in Emacs tutorial and other beginner resources but how do you go from
the basics to a real working configuration? For years I would show my
kids Emacs and use it in class but there was never a path for them to
follow from beginner to craftsman. I hoped the videos would fill the
void.
&lt;/p&gt;

&lt;p&gt;
It probably didn't. I don't think I'm getting greater Emacs adoption
from my students but on the other hand, I've found making the series
rewarding for other reasons.
&lt;/p&gt;

&lt;p&gt;
First and foremost, it's allowed me to be an active contributing
member of the Emacs community. I haven't written any Emacs packages
nor am I an active guy on any Emacs forums but this is a way I can do
my part. 
&lt;/p&gt;

&lt;p&gt;
Second, although there hasn't been a great deal of comments on the
videos or blog posts I've gotten to know a few people that I wouldn't
have gotten to know otherwise.
&lt;/p&gt;

&lt;p&gt;
It also shows that that if you put things out there people might find
it useful. I don't know how many people saw my Emacs posts at the
start but a year and half later I've got 1,700 YouTube
subscribers. Sure, that's nothing compared to many YouTubers but 
for a guy making schlocky videos at his desk about an as much as I hate to admit it
non-maintream editor, I think it's pretty cool.
&lt;/p&gt;

&lt;p&gt;
The question is what to make videos on moving forward? 
&lt;/p&gt;

&lt;p&gt;
I thought I'd throw it out to the community. Here's an embedded
poll. Feel free to suggest other topics either on the blog or
as a Twitter reply.
&lt;/p&gt;

&lt;p&gt;
I can't promise I'll get to all or any but I'll certainly check out
the popular suggestions.
&lt;/p&gt;

&lt;script type="text/javascript" src="http://www.easypolls.net/ext/scripts/emPoll.js?p=5a46abd4e4b04ebe73ddc4de"&gt;&lt;/script&gt;&lt;a class="OPP-powered-by" href="http://www.objectplanet.com/opinio/" style="text-decoration:none;"&gt;&lt;div style="font: 9px arial; color: gray;"&gt;survey service&lt;/div&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;</summary>
    <category term="emacs" label="emacs"/>
  </entry>
  <entry>
    <title>2017 in review - K12 CS Education</title>
    <id>http://cestlaz.github.io/posts/2017-review-k12CSEd/</id>
    <updated>2017-12-27T11:05:52-04:00</updated>
    <published>2017-12-27T11:05:52-04:00</published>
    <author>
      <name>Mike Zamansky</name>
    </author>
    <link rel="alternate" type="text/html" href="http://cestlaz.github.io/posts/2017-review-k12CSEd/"/>
    <summary type="html">&lt;div id="outline-container-orgf9eb9ed" class="outline-2"&gt;
&lt;h2 id="orgf9eb9ed"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgf9eb9ed"&gt;
&lt;p&gt;
It's been a big year for K12 CS education. More and more states
looking into CS as a K12 academic area and all that entails, the
CS4All movement is well underway and the College Board launched a new
exam. These are just three of many big things that happened in the
past year.
&lt;/p&gt;

&lt;p&gt;
I'm excited about the overall growth but concerned about a number of
issues. I've written about all of them in the past so won't rehash
here and in any event, the issues I'm concerned about are issues I
have no influence on.
&lt;/p&gt;

&lt;p&gt;
Instead I thought I'd look at some local CS Ed happenings. Things
where I have been able to contribute.
&lt;/p&gt;

&lt;p&gt;
Probably the biggest thing happening that I've been involved with is
New York State's &lt;a href="http://cestlaz.github.io/posts/NY-CS-Certificate/"&gt;moving forward on CS teacher certification&lt;/a&gt;. I
developed CS teacher preparation programs at Hunter and Hunter's been
one of the voices talking to the state. I'd like to believe I had some
small positive voice in this effort.
&lt;/p&gt;

&lt;p&gt;
Related are the programs that are one piece of form and one committee
short of being approved. Very soon Hunter will have CS teacher
preparation programs - a full Masters program, a certificate program
and an Alt Cert program. While no program is perfect, I'm very proud
in what I designed and am confident that any teacher that completes
a Hunter program will be amazingly well prepared to teach CS. Not
just the popular curricula being offered today and not just the out of
the box curricula being lauded by others. Our teachers will be
empowered to create their own custom educational experiences
appropriate for their kids.
&lt;/p&gt;

&lt;p&gt;
I've said before that I believe in teacher over curriculum. A great
teacher can save the worst course but the best curriculum can't save a
weak teacher. No matter what happens with CS Ed as a whole, I know
that the CS teachers we prepare at Hunter will be top flight. Kids in
their classes will be alright regardless of what the education machine
tries to impose on them.
&lt;/p&gt;

&lt;p&gt;
The other thing I've been working on, albeit in a limited way is
professional development. There's a lot of CS PD around but most of it
seems to be either for the younger levels or the intro levels. Very
little for APCS-A let alone beyond. This past November I was able to
host teachers from a handful of schools on Election Day for what
everyone felt was one of their more productive PD experiences. We're
following this up with another one in the Spring but this time we're
expanding. I've been talking to friends at &lt;a href="http://tealsk12.org"&gt;TEALS&lt;/a&gt; so as to get more
teachers and schools involved. There's a lot of value in connecting
teachers with each other and I hope that I'm helping to do that.
&lt;/p&gt;

&lt;p&gt;
I'm looking forward to 2018. I'm told that NYSED should vote on CS
certification in March and my programs should also be on the books
around then. The challenge will be building capacity since I can't do
this as a one man show.
&lt;/p&gt;

&lt;p&gt;
I'm very proud of what we've accomplished at Hunter on both the
education side and the CS side. It's been a good year and I expect
2018 to be a better one.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</summary>
  </entry>
  <entry>
    <title>2017 in review - Hunter Undergraduate CS</title>
    <id>http://cestlaz.github.io/posts/2017-review-hunter-cs/</id>
    <updated>2017-12-26T11:05:52-04:00</updated>
    <published>2017-12-26T11:05:52-04:00</published>
    <author>
      <name>Mike Zamansky</name>
    </author>
    <link rel="alternate" type="text/html" href="http://cestlaz.github.io/posts/2017-review-hunter-cs/"/>
    <summary type="html">&lt;div id="outline-container-org80491be" class="outline-2"&gt;
&lt;h2 id="org80491be"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org80491be"&gt;
&lt;p&gt;
I usually don't do year in review posts. At Stuy, not much changed
year after year so I never felt it worth summarizing the past and
projecting the future. At Hunter, now that I'm a couple of years in,
projects are really picking up steam so I think it's worth talking
about them.
&lt;/p&gt;

&lt;p&gt;
One of my two major missions at Hunter was to build a CS Honors
program and raise the profile of Hunter's undergraduate CS program in
general. Hunter had a strong CS program before I joined the team it's
just that few people knew about it.
&lt;/p&gt;

&lt;p&gt;
My goal is to see Hunter become the "go to" institution for
undergraduate CS in New York City before my time is done.
&lt;/p&gt;

&lt;p&gt;
This is an extremely important mission. 
&lt;/p&gt;

&lt;p&gt;
There are other strong CS options besides Hunter but compare the costs:
&lt;/p&gt;

&lt;table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides"&gt;


&lt;colgroup&gt;
&lt;col class="org-left"&gt;

&lt;col class="org-left"&gt;

&lt;col class="org-left"&gt;

&lt;col class="org-left"&gt;

&lt;col class="org-left"&gt;

&lt;col class="org-left"&gt;

&lt;col class="org-left"&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope="col" class="org-left"&gt;Institution&lt;/th&gt;
&lt;th scope="col" class="org-left"&gt; &lt;/th&gt;
&lt;th scope="col" class="org-left"&gt; &lt;/th&gt;
&lt;th scope="col" class="org-left"&gt; &lt;/th&gt;
&lt;th scope="col" class="org-left"&gt; &lt;/th&gt;
&lt;th scope="col" class="org-left"&gt; &lt;/th&gt;
&lt;th scope="col" class="org-left"&gt;Annual Tuition&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class="org-left"&gt;NYU&lt;/td&gt;
&lt;td class="org-left"&gt; &lt;/td&gt;
&lt;td class="org-left"&gt; &lt;/td&gt;
&lt;td class="org-left"&gt; &lt;/td&gt;
&lt;td class="org-left"&gt; &lt;/td&gt;
&lt;td class="org-left"&gt; &lt;/td&gt;
&lt;td class="org-left"&gt;$50,464&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;NYY Tandon&lt;/td&gt;
&lt;td class="org-left"&gt; &lt;/td&gt;
&lt;td class="org-left"&gt; &lt;/td&gt;
&lt;td class="org-left"&gt; &lt;/td&gt;
&lt;td class="org-left"&gt; &lt;/td&gt;
&lt;td class="org-left"&gt; &lt;/td&gt;
&lt;td class="org-left"&gt;$48,750&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;Columbia&lt;/td&gt;
&lt;td class="org-left"&gt; &lt;/td&gt;
&lt;td class="org-left"&gt; &lt;/td&gt;
&lt;td class="org-left"&gt; &lt;/td&gt;
&lt;td class="org-left"&gt; &lt;/td&gt;
&lt;td class="org-left"&gt; &lt;/td&gt;
&lt;td class="org-left"&gt;$54,504&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class="org-left"&gt;Hunter&lt;/td&gt;
&lt;td class="org-left"&gt; &lt;/td&gt;
&lt;td class="org-left"&gt; &lt;/td&gt;
&lt;td class="org-left"&gt; &lt;/td&gt;
&lt;td class="org-left"&gt; &lt;/td&gt;
&lt;td class="org-left"&gt; &lt;/td&gt;
&lt;td class="org-left"&gt;$6,530&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org579e945" class="outline-2"&gt;
&lt;h2 id="org579e945"&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org579e945"&gt;
&lt;p&gt;
&lt;b&gt;&lt;b&gt;Hunter is about one tenth the cost.&lt;/b&gt;&lt;/b&gt;
&lt;/p&gt;

&lt;p&gt;
True, if you're wealthy this isn't a problem and if you're at the
bottom of the economic ladder you might get a full ride but if you
fall into that category where you earn more than the financial aid
people think is "poor" but are clearly not rich you're left in a bad place. This seems
particularly true for New Yorkers as our income seems higher than that
of people from other parts of the country but our cost of living is
higher as well.
&lt;/p&gt;

&lt;p&gt;
My wife and I are both career public educators. No one would confuse a
family of two working teachers as upper class but we were granted no
financial aid for our kids. The alternatives without a great public
option are to have saved for our entire lives and now liquidate those
savings or go into tremendous debt.
&lt;/p&gt;

&lt;p&gt;
This alone makes the mission critical. Add to that the accessibility
issue - elite private institutions only have to concern themselves
with whatever slice of the population they choose to accept. We are
charged with providing a top flight education to all - be they the
high achievers, the late bloomers, the struggling students or anyone 
else.
&lt;/p&gt;

&lt;p&gt;
So, what's happened in the past year?
&lt;/p&gt;

&lt;p&gt;
First, the Daedalus honors program is developing nicely. In our first
year we had a cohort of 12. This past year 27. I haven't seen the
applicant pool yet - Hunter applications are open until the end of
January, but I'm hoping to bring in an even larger cohort this year. I
spent a good amount of time this fall visiting high schools to talk
about Hunter CS and CS options in general. Not as many as I'd like but
more than during year one. 
&lt;/p&gt;

&lt;p&gt;
We had classes, trips, and special events but more important was that
the cohort is starting to form a community and the students want it to
be a community that includes ALL of Hunter CS, not just the honors
students.
&lt;/p&gt;

&lt;p&gt;
They've started a once a week Dojo where students can work on projects
and interact and we're starting an evening speaker series in
the Spring. 
&lt;/p&gt;

&lt;p&gt;
Overall there's a vibe of excitement and an energy around Hunter CS
that I've been told hasn't been there before.
&lt;/p&gt;

&lt;p&gt;
In my class, I've been introducing a number of real world practices
that are usually not covered in undergraduate CS and we're starting to
talk about bringing those practices into the non-honors sections.
&lt;/p&gt;

&lt;p&gt;
Finally, we've started to partner with the New York Tech
community. We're bringing together the Hunter students and the tech
professionals to raise awareness outside of Hunter of what our
students can do and to best prepare our students for their next
steps. These partnerships, in addition to internship possibilities
have led to us planning some great things this coming semester
incuding:
&lt;/p&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;workshops such as how to work on an open source project or how to do
a code review.&lt;/li&gt;
&lt;li&gt;Having industry mentors at our local Dojo sessions.&lt;/li&gt;
&lt;li&gt;Mixer events to educate our students as to the variety of pathways
they can follow when they graduate.&lt;/li&gt;
&lt;li&gt;and more.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
This past year set the stage but there will be some challenges moving
forward.
&lt;/p&gt;

&lt;p&gt;
The biggest one is continued outreach to high schools. Getting to the
students and their parents to let them know that we have a great
program. It's also about convincing them to come to Hunter. Back in
the day CUNY was "the poor man's Harvard" but open enrollment in the
1970s killed that reputation. CUNY has been making it's way back and
Hunter has many excellent programs but reputations are decades in the
making and at Hunter CS we're just starting to get the word out.
&lt;/p&gt;

&lt;p&gt;
The other big challenge will be with time. Right now, for the most
part, I'm a team of one. I have tremendous support from my colleagues
but they all have their own full time obligations and the overall
growth in Hunter CS has already put a strain on personnel and
resources.
&lt;/p&gt;

&lt;p&gt;
In spite of the challenges, I'm not complaining. This has been an
exciting year for Hunter CS and an exciting year for me to be a part
of it.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</summary>
    <category term="cs" label="cs"/>
    <category term="hunter" label="hunter"/>
  </entry>
</feed>
